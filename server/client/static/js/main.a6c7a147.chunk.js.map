{"version":3,"sources":["reportWebVitals.js","services/localStorage.service.js","services/auth.service.js","services/http.service.js","services/user.service.js","utilits/constants.js","utilits/history.js","utilits/generateAuthError.js","store/users.js","components/ui/loader.jsx","components/ui/HOC/usersLoader.jsx","components/common/Pagination.jsx","components/common/Bookmark.jsx","components/ui/qualities/quality.jsx","services/quality.service.js","utilits/isOutDated.js","store/qualities.js","components/ui/qualities/qualityList.jsx","components/ui/qualities/index.js","components/common/table/tableHeader.jsx","components/common/table/tableBody.jsx","components/common/table/index.js","components/common/table/table.jsx","services/profession.service.js","store/professions.js","components/ui/profession.jsx","components/ui/usersTable.jsx","utilits/helpers.js","components/ui/searchStatus.jsx","components/common/groupList.jsx","components/SearchBar.jsx","pages/usersListPage/index.js","pages/usersListPage/Users.jsx","utilits/paginate.js","components/common/form/MultiSelectField.jsx","components/common/form/RadioField.jsx","components/common/form/SelectField.jsx","components/common/form/TextField.jsx","utilits/validatorConfig.js","utilits/validator.js","pages/editPage/EditPage.jsx","components/ui/UserImage.jsx","components/user/SingleCommentForUser.jsx","services/comment.service.js","store/comments.js","components/user/Comment.jsx","components/common/form/TextArea.jsx","components/ui/form/CommentForm.jsx","components/user/CommenSection.jsx","components/user/MeetingsCard.jsx","components/user/QualityCard.jsx","components/user/UserInfoCard.jsx","pages/usersPage/index.js","pages/usersPage/singleUserPage.jsx","pages/users.jsx","components/NavProfile.jsx","components/NavBar.jsx","components/common/form/CheckField.jsx","components/ui/form/LoginForm.jsx","components/ui/form/RegisterForm.jsx","pages/login.jsx","pages/main.jsx","components/ProtectedRoute.jsx","pages/LogOut.jsx","components/ui/HOC/appLoader.jsx","App.js","store/createStore.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","TOKEN_KEY","REFRESH_KEY","EXPIRES_KEY","USERID_KEY","localStorageService","setToken","refreshToken","accessToken","userId","expiresIn","expiresDate","Date","getTime","localStorage","setItem","getAccessToken","getItem","getRefreshToken","getExpiresIn","getUserId","removeAuthData","removeItem","httpAuth","axios","create","baseURL","config","apiEndPoint","params","key","process","REACT_APP_FIREBASE_KEY","authService","register","payload","a","post","data","login","email","password","returnSecureToken","refresh","grant_type","refresh_token","http","configFile","interceptors","request","use","isExpired","now","isFireBase","containSlash","test","url","slice","idToken","id_token","localId","user_id","expires_in","auth","headers","Authorization","error","Promise","reject","response","content","_id","Object","keys","map","status","toast","info","httpServise","get","put","delete","patch","userEndpoint","userService","httpService","getCurrentUser","updateUser","MAIN_ROUTE","LOGIN_ROUTE","LOGOUT_ROUTE","USERS_ROUTE","history","createBrowserHistory","generateAuthError","initialState","entities","isLoading","isLoggedIn","dataLoaded","usersSlice","createSlice","name","reducers","usersRequested","state","usersRecieved","action","userRequestFailed","authRequested","authRequestSuccess","authRequestFailed","userCreated","push","userLoggedOut","updateUserRequested","userUpdatedSuccess","user","actions","userReducer","reducer","loadUsersList","dispatch","message","getUserById","users","find","Loader","className","role","UsersLoader","children","useDispatch","dataStatus","useSelector","useEffect","Pagination","props","pageSize","itemsCount","onPageChange","currentPage","pageCount","Math","ceil","pages","_","range","page","type","onClick","Bookmark","toggleBookMarkHanble","id","Quality","color","style","margin","fontSize","qualityService","isOutDated","date","qualitiesSlice","lastFetch","qualitiesRequested","qualitiesRecieved","qualitiesRequestFailure","qualitiesReducer","loadQualitiesList","getState","qualities","QualityList","qualitiesArr","qualitiesById","filter","x","includes","quality","React","memo","TableHeader","currentSort","setSortBy","columns","renderSortArrow","currentPath","iter","order","column","undefined","scope","TableBody","renderContent","item","component","to","Table","professionService","professionSlice","professionsRequested","professionsRequestFailed","professionsRecieved","professionsReducer","Profession","profId","profession","professions","prof","UsersTable","completedMeetings","rate","bookmark","renderPhrase","numbers","lastNumber","Number","toString","split","getCommentTime","timeStamp","dateNow","getFullYear","getDay","getHours","minDif","getMinutes","toLocaleString","month","getMonth","getDate","SearchStatus","lenght","userLength","GroupList","onItemSelect","valueProperty","contentProperty","selectedProf","resetProfessionsHandler","Array","isArray","defaultProps","SearchBar","searchValue","getSearchValueHandler","placeholder","value","onChange","Users","useState","setCurrentPage","sortBy","setSelectedProf","setSearchValue","currentUserId","profLoading","filteredUsers","toLowerCase","filterUsers","sortedUsers","orderBy","length","cporUsers","items","pageNumber","startIndex","take","paginate","event","target","pageIndex","MultiSelectField","options","onChangeHandle","label","defaultValue","optionsArr","option","closeMenuOnSelect","isMulti","classNamePrefix","RadioField","handleChange","i","checked","htmlFor","SelectField","defaultOption","loading","optionName","disabled","TextField","showPassword","setShowPassword","prev","validatorConfig","isRequired","isEmail","isCapitalLetter","isNumber","min","licence","validator","errors","validate","method","statusValidate","trim","console","log","fieldName","validateMethod","EditPage","useHistory","currentUser","qualitiesLoading","setErrors","setData","setLoading","transformQualitiesData","transformProfessionData","qual","q","qualitiesList","submitHandle","e","preventDefault","formData","isValid","goBack","onSubmit","sex","UserImage","image","src","alt","width","height","SingleCommentForUser","createdAt","created_at","handleRemoveComment","commentsEndpoint","commentsService","createComment","comment","getComments","pageId","equalTo","deleteComment","commentId","commentsSlice","commentsServiceRequested","commentsRequestFailed","commentsRequestSuccess","newCommentCreated","commentDeleted","commentsReducer","createCommentRequested","createAction","Comment","commentsForUser","commentLoadingStatus","comments","TextArea","rows","CommentForm","handleSubmit","clearForm","CommentSection","loadCommentsList","sortedComments","MeetingsCard","userById","QualityCard","UserInfoCard","pathname","SingleUserPage","UsersPage","useParams","edit","NavProfile","isOpen","setIsOpen","prevState","NavBar","CheckField","LoginForm","authError","stayOn","loginValidatorConfig","redirect","location","from","code","errorMessage","logIn","RegisterForm","newQualities","newData","Login","formType","setFormType","toggleFormType","Main","ProtectedRoute","Component","rest","render","LogOut","AppLoader","userLoadingStatus","professionsServices","App","path","exact","rootReducer","combineReducers","store","configureStore","ReactDOM","StrictMode","document","getElementById"],"mappings":"qRAYeA,G,MAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,Q,6ECPRQ,EAAY,YACZC,EAAc,oBACdC,EAAc,cACdC,EAAa,gBA0CJC,EARa,CAC1BC,SAjCsB,SAAC,GAKlB,IAJLC,EAII,EAJJA,aACAC,EAGI,EAHJA,YACAC,EAEI,EAFJA,OAEI,IADJC,iBACI,MADQ,KACR,EACEC,GAAc,IAAIC,MAAOC,UAAwB,IAAZH,EAC3CI,aAAaC,QAAQd,EAAWO,GAChCM,aAAaC,QAAQX,EAAYK,GACjCK,aAAaC,QAAQb,EAAaK,GAClCO,aAAaC,QAAQZ,EAAaQ,IAwBlCK,eArB4B,WAC5B,OAAOF,aAAaG,QAAQhB,IAqB5BiB,gBAnB6B,WAC7B,OAAOJ,aAAaG,QAAQf,IAmB5BiB,aAjB0B,WAC1B,OAAOL,aAAaG,QAAQd,IAiB5BiB,UAfuB,WACvB,OAAON,aAAaG,QAAQb,IAe5BiB,eAb4B,WAC5BP,aAAaQ,WAAWlB,GACxBU,aAAaQ,WAAWnB,GACxBW,aAAaQ,WAAWrB,GACxBa,aAAaQ,WAAWpB,K,QC9BpBqB,EAAWC,IAAMC,OAAO,CAC5BC,QAASC,EAAOC,YAAc,QAC9BC,OAAQ,CACNC,IAAKC,mIAAYC,0BA2BNC,EAvBK,CAClBC,SAAS,WAAD,4BAAE,WAAOC,GAAP,iBAAAC,EAAA,sEACeb,EAASc,KAAK,UAAd,eAClBF,IAFG,uBACAG,EADA,EACAA,KADA,kBAIDA,GAJC,2CAAF,mDAAC,GAMTC,MAAM,WAAD,4BAAE,mCAAAH,EAAA,6DAASI,EAAT,EAASA,MAAOC,EAAhB,EAAgBA,SAAhB,SACkBlB,EAASc,KAAK,sBAAuB,CAC1DG,QACAC,WACAC,mBAAmB,IAJhB,uBACGJ,EADH,EACGA,KADH,kBAMEA,GANF,2CAAF,mDAAC,GAQNK,QAAQ,WAAD,4BAAE,8BAAAP,EAAA,sEACgBb,EAASc,KAAK,SAAU,CAC7CO,WAAY,gBACZC,cAAexC,EAAoBa,oBAH9B,uBACCoB,EADD,EACCA,KADD,kBAKAA,GALA,2CAAF,kDAAC,I,QCrBJQ,EAAOtB,IAAMC,OAAO,CACxBC,QAASqB,EAAWnB,cAEtBkB,EAAKE,aAAaC,QAAQC,IAA1B,uCACE,WAAgBvB,GAAhB,6BAAAS,EAAA,yDACQzB,EAAcN,EAAoBc,eAClCZ,EAAeF,EAAoBa,kBACnCiC,EAAY5C,GAAgBI,EAAcC,KAAKwC,OAEjDL,EAAWM,WALjB,oBAMUC,EAAe,QAAQC,KAAK5B,EAAO6B,KACzC7B,EAAO6B,KACJF,EAAe3B,EAAO6B,IAAIC,MAAM,GAAI,GAAK9B,EAAO6B,KAAO,SAEtDL,EAVR,iCAWyBlB,EAAYU,UAXrC,OAWYL,EAXZ,OAYMjC,EAAoBC,SAAS,CAC3BC,aAAc+B,EAAKO,cACnBa,QAASpB,EAAKqB,SACdC,QAAStB,EAAKuB,QACdnD,UAAW4B,EAAKwB,aAhBxB,SAmBUtD,EAAcH,EAAoBW,oBAEtCW,EAAOE,OAAP,2BAAqBF,EAAOE,QAA5B,IAAoCkC,KAAMvD,KArBhD,4BAwBQ2C,EAxBR,kCAyByBlB,EAAYU,UAzBrC,QAyBYL,EAzBZ,OA0BMjC,EAAoBC,SAASgC,GA1BnC,SA4BU9B,EAAcH,EAAoBW,oBAEtCW,EAAOqC,QAAP,2BACKrC,EAAOqC,SADZ,IAEEC,cAAc,UAAD,OAAYzD,MAhCjC,iCAoCSmB,GApCT,4CADF,uDAuCE,SAAUuC,GACR,OAAOC,QAAQC,OAAOF,MAQ1BpB,EAAKE,aAAaqB,SAASnB,KACzB,SAACmB,GANH,IAAuB/B,EAWnB,OAJIS,EAAWM,aACbgB,EAAS/B,KAAO,CAAEgC,SARDhC,EAQwB+B,EAAS/B,KAP/CA,IAASA,EAAKiC,IACjBC,OAAOC,KAAKnC,GAAMoC,KAAI,SAAC5C,GAAD,sBAAeQ,EAAKR,OAC1CQ,KAOF+B,EAAS/B,KAAO,CAAEgC,QAASD,EAAS/B,MAC7B+B,KAET,SAAUH,GASR,OAPEA,EAAMG,UACNH,EAAMG,SAASM,QAAU,KACzBT,EAAMG,SAASM,OAAS,KAGxBC,IAAMC,KAAK,gDAENV,QAAQC,OAAOF,MAG1B,IAOeY,EAPK,CAClBC,IAAKjC,EAAKiC,IACV1C,KAAMS,EAAKT,KACX2C,IAAKlC,EAAKkC,IACVC,OAAQnC,EAAKmC,OACbC,MAAOpC,EAAKoC,OC9ERC,EAAe,QA4BNC,EA1BK,CAClBL,IAAI,WAAD,4BAAE,8BAAA3C,EAAA,sEACoBiD,EAAYN,IAAII,GADpC,uBACK7C,EADL,EACKA,KADL,kBAEIA,GAFJ,2CAAF,kDAAC,GAIJb,OAAO,WAAD,4BAAE,WAAOU,GAAP,iBAAAC,EAAA,sEACiBiD,EAAYL,IAAIG,EAAehD,EAAQoC,IAAKpC,GAD7D,uBACEG,EADF,EACEA,KADF,kBAECA,GAFD,2CAAF,mDAAC,GAIPgD,eAAe,WAAD,4BAAE,8BAAAlD,EAAA,sEACSiD,EAAYN,IACjCI,EAAe9E,EAAoBe,aAFvB,uBACNkB,EADM,EACNA,KADM,kBAIPA,GAJO,2CAAF,kDAAC,GAMfiD,WAAW,WAAD,4BAAE,WAAOpD,GAAP,iBAAAC,EAAA,sEACaiD,EAAYH,MACjCC,EAAe9E,EAAoBe,YADd,eAGhBe,IAJG,uBACFG,EADE,EACFA,KADE,kBAOHA,GAPG,2CAAF,mDAAC,ICpBAkD,EAAa,IACbC,EAAc,SAGdC,EAAe,UACfC,EAAc,S,QCHZC,EADCC,cCDD,SAASC,EAAkB5B,GACxC,OAAQA,GACN,IAAK,mBAGL,IAAK,kBACH,MAAO,mCAET,IAAK,eACH,MAAO,uBAET,QACE,MAAO,oBCJb,IAAM6B,EAAe1F,EAAoBW,iBACrC,CACEgF,SAAU,KACVC,WAAW,EACX/B,MAAO,KACPH,KAAM,CAAEtD,OAAQJ,EAAoBe,aACpC8E,YAAY,EACZC,YAAY,GAEd,CACEH,SAAU,KACVC,WAAW,EACX/B,MAAO,KACPH,KAAM,KACNmC,YAAY,EACZC,YAAY,GAEZC,EAAaC,YAAY,CAC7BC,KAAM,QACNP,eACAQ,SAAU,CACRC,eADQ,SACOC,GACbA,EAAMR,WAAY,GAEpBS,cAJQ,SAIMD,EAAOE,GACnBF,EAAMT,SAAWW,EAAOxE,QACxBsE,EAAMN,YAAa,EACnBM,EAAMR,WAAY,GAEpBW,kBATQ,SASUH,EAAOE,GACvBF,EAAMvC,MAAQyC,EAAOxE,QACrBsE,EAAMR,WAAY,GAEpBY,cAbQ,SAaMJ,GACZA,EAAMvC,MAAQ,MAEhB4C,mBAhBQ,SAgBWL,EAAOE,GACxBF,EAAM1C,KAAN,eAAkB4C,EAAOxE,SACzBsE,EAAMP,YAAa,EACnBO,EAAMR,WAAY,GAEpBc,kBArBQ,SAqBUN,EAAOE,GACvBF,EAAMvC,MAAQyC,EAAOxE,QACrBsE,EAAMR,WAAY,GAEpBe,YAzBQ,SAyBIP,EAAOE,GACjBF,EAAMT,SAASiB,KAAKN,EAAOxE,UAE7B+E,cA5BQ,SA4BMT,GACZA,EAAMT,SAAW,KACjBS,EAAMP,YAAa,EACnBO,EAAM1C,KAAO,KACb0C,EAAMN,YAAa,GAErBgB,oBAlCQ,SAkCYV,GAClBA,EAAMR,WAAY,GAEpBmB,mBArCQ,SAqCWX,EAAOE,GACxBF,EAAMT,SAAWS,EAAMT,SAAStB,KAAI,SAAC2C,GACnC,OAAIA,EAAK9C,MAAQoC,EAAOxE,QAAQoC,IAClB,eAAQoC,EAAOxE,SAEtBkF,KAGTZ,EAAMR,WAAY,MAKhBqB,EAAkClB,EAAlCkB,QAAkBC,EAAgBnB,EAAzBoB,QAEfhB,EASEc,EATFd,eACAE,EAQEY,EARFZ,cACAE,EAOEU,EAPFV,kBACAE,EAMEQ,EANFR,mBACAC,EAKEO,EALFP,kBACAG,EAIEI,EAJFJ,cACAC,EAGEG,EAHFH,oBACAC,EAEEE,EAFFF,mBACAP,EACES,EADFT,cAKWY,EAAgB,yDAAM,WAAOC,GAAP,iBAAAtF,EAAA,6DACjCsF,EAASlB,KADwB,kBAGLpB,EAAYL,MAHP,gBAGvBT,EAHuB,EAGvBA,QACRoD,EAAShB,EAAcpC,IAJQ,gDAM/BoD,EAASd,EAAkB,KAAMe,UANF,yDAAN,uDA2ChBpC,EAAa,SAACpD,GAAD,8CAAa,WAAOuF,GAAP,iBAAAtF,EAAA,6DACrCsF,EAASP,KAD4B,kBAGT/B,EAAYG,WAAWpD,GAHd,gBAG3BmC,EAH2B,EAG3BA,QAERoD,EAASN,EAAmB9C,IALO,gDAOnCoD,EAASX,EAAkB,KAAMY,UAPE,yDAAb,uDAsBbC,EAAc,SAACnH,GAAD,OAAY,SAACgG,GACtC,GAAIA,EAAMoB,MAAM7B,SACd,OAAOS,EAAMoB,MAAM7B,SAAS8B,MAAK,SAACT,GAAD,OAAUA,EAAK9C,MAAQ9D,OAwB7C8G,I,QC7KAQ,GAVA,WACb,OACE,sBAAKC,UAAU,0DAAf,SACE,sBAAKA,UAAU,8BAA8BC,KAAK,SAAlD,SACE,uBAAMD,UAAU,kBAAhB,6BCsBOE,GArBK,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACfT,EAAWU,cACXC,EAAaC,aF8Jc,SAAC7B,GAClC,OAAOA,EAAMoB,MAAM1B,cExJnB,OANAoC,qBAAU,WACHF,GACHX,EAASD,OAEV,IAEEY,EAGEF,EAFE,eAAC,GAAD,K,qCC2BIK,GAvCI,SAACC,GAClB,IAAQC,EAAoDD,EAApDC,SAAUC,EAA0CF,EAA1CE,WAAYC,EAA8BH,EAA9BG,aAAcC,EAAgBJ,EAAhBI,YACtCC,EAAYC,KAAKC,KAAKL,EAAaD,GACnCO,EAAQC,KAAEC,MAAM,EAAGL,EAAY,GACrC,OAAkB,IAAdA,EAAwB,KAE1B,sBACE,aAAW,0BACXd,UAAU,sCAFZ,SAIE,qBAAIA,UAAU,iBAAd,SACGiB,EAAMvE,KAAI,SAAC0E,GACV,OACE,qBACEpB,UAAW,cAAgBoB,IAASP,EAAc,SAAW,IAD/D,SAIE,yBACEQ,KAAK,SACLrB,UAAU,YACVsB,QAAS,WACPV,EAAaQ,IAJjB,SAOGA,KATEA,W,aCCJG,GAjBE,SAAC,GAA0C,IAAxCC,EAAuC,EAAvCA,qBAAsBC,EAAiB,EAAjBA,GAAI9E,EAAa,EAAbA,OAC5C,OACE,yBACEqD,UAAU,eACVsB,QAAS,WACPE,EAAqBC,IAHzB,SAMG,oBAAGzB,UAAWrD,EAAS,sBAAwB,sBCOvC+E,GAfC,SAAC,GAAqB,IAAnBpD,EAAkB,EAAlBA,KAAMqD,EAAY,EAAZA,MACvB,OACE,uBACEC,MAAO,CAAEC,OAAQ,UAAWC,SAAU,QACtC9B,UAAS,mBAAc2B,GAFzB,SAIGrD,KCCQyD,GANQ,CACrBhF,IAAI,WAAD,4BAAE,8BAAA3C,EAAA,sEACoBiD,EAAYN,IAJf,YAGjB,uBACKzC,EADL,EACKA,KADL,kBAEIA,GAFJ,2CAAF,kDAAC,ICLO0H,GAAa,SAACC,GACzB,OAAIrJ,KAAKwC,MAAQ6G,EAAO,KCYpBC,GAAiB7D,YAAY,CACjCC,KAAM,YACNP,aAXmB,CACnBC,SAAU,KACVC,WAAW,EACX/B,MAAO,KACPiG,UAAW,MAQX5D,SAAU,CACR6D,mBADQ,SACW3D,GACjBA,EAAMR,WAAY,GAEpBoE,kBAJQ,SAIU5D,EAAOE,GACvBF,EAAMT,SAAWW,EAAOxE,QACxBsE,EAAM0D,UAAYvJ,KAAKwC,MACvBqD,EAAMR,WAAY,GAEpBqE,wBATQ,SASgB7D,EAAOE,GAC7BF,EAAMR,WAAY,MAKhBqB,GAAuC4C,GAAvC5C,QAAkBiD,GAAqBL,GAA9B1C,QAET4C,GACN9C,GADM8C,mBAAoBC,GAC1B/C,GAD0B+C,kBAAmBC,GAC7ChD,GAD6CgD,wBAKlCE,GAAoB,yDAAM,WAAO9C,EAAU+C,GAAjB,mBAAArI,EAAA,yDAC7B+H,EAAcM,IAAWC,UAAzBP,WACJH,GAAWG,GAFsB,wBAGnCzC,EAAS0C,MAH0B,kBAKPL,GAAehF,MALR,gBAKzBT,EALyB,EAKzBA,QACRoD,EAAS2C,GAAkB/F,IANM,kDAQjCoD,EAAS4C,GAAwB,KAAM3C,UARN,0DAAN,yDA4BlB4C,MCvDTI,GAAc,SAAC,GAAiC,IDgDrBD,EChDCE,EAAmB,EAA9BF,UACfhD,EAAWU,cACXnC,EAAYqC,aD2C2B,SAAC7B,GAAD,OAC7CA,EAAMiE,UAAUzE,aC3CV4E,EAAgBvC,aD6CSoC,EC7CoBE,ED6CN,SAACnE,GAC9C,OAAIA,EAAMiE,UAAU1E,SACXS,EAAMiE,UAAU1E,SAAS8E,QAAO,SAACC,GAAD,OAAOL,EAAUM,SAASD,EAAExG,QAE9D,MC3CP,OAJAgE,qBAAU,WACRb,EAAS8C,QACR,IAECvE,EACK,eAAC,GAAD,IAGP,qCACG4E,EAAcnG,KAAI,SAACuG,GAClB,OAAO,eAAC,GAAD,eAA+BA,GAAjBA,EAAQ1G,WAQtB2G,OAAMC,KAAKR,IChCXA,MCsDAS,GArDK,SAAC,GAAyC,IAAvCC,EAAsC,EAAtCA,YAAaC,EAAyB,EAAzBA,UAAWC,EAAc,EAAdA,QAYvCC,EAAkB,SAACH,EAAaI,GACpC,OAAIJ,EAAYK,OAASD,EACG,QAAtBJ,EAAYM,MACP,oBAAG3D,UAAU,0BAEf,oBAAGA,UAAU,wBAEf,MAGT,OACE,wBAAOA,UAAU,4BAAjB,SACE,8BACGxD,OAAOC,KAAK8G,GAAS7G,KAAI,SAACkH,GAAD,OACxB,8BACEtC,QACEiC,EAAQK,GAAQF,KACZ,kBA5BIpF,EA4BaiF,EAAQK,GAAQF,UA3B3CL,EAAYK,OAASpF,EACvBgF,EAAU,2BACLD,GADI,IAEPM,MAA6B,QAAtBN,EAAYM,MAAkB,OAAS,SAGhDL,EAAU,CAAEI,KAAMpF,EAAMqF,MAAO,SAPhB,IAACrF,QA6BJuF,EAEA5D,KAAMsD,EAAQK,GAAQF,MAAQ,SACpCI,MAAM,MACN9D,UAAU,2BACVlG,IAAK8J,GAEL,uBAAK5D,UAAU,gCAAf,UACGuD,EAAQK,GAAQtF,KAAM,IACtBkF,EAAgBH,EAAaE,EAAQK,GAAQF,kB,QCH7CK,GAjCG,SAAC,GAAwB,IAAtBlE,EAAqB,EAArBA,MAAO0D,EAAc,EAAdA,QACpBS,EAAgB,SAACC,EAAML,GAC3B,GAAIL,EAAQK,GAAQM,UAAW,CAC7B,IAAMA,EAAYX,EAAQK,GAAQM,UAClC,MAAyB,oBAAdA,EACFA,EAAUD,GAEZC,EAET,MAA6B,SAAzBX,EAAQK,GAAQF,KACX,eAAC,KAAD,CAAMS,GAAE,UAAKxG,EAAL,YAAoBsG,EAAK1H,KAAjC,SAAyC0H,EAAK3F,OAEhD4C,KAAEnE,IAAIkH,EAAMV,EAAQK,GAAQF,OAGrC,OACE,qCACE,iCACG7D,EAAMnD,KAAI,SAACuH,GAAD,OACT,8BACGzH,OAAOC,KAAK8G,GAAS7G,KAAI,SAACkH,GAAD,OACxB,8BAAkBI,EAAcC,EAAML,IAA7BA,OAFJK,EAAK1H,aCpBT6H,GCAD,SAAC,GAA0D,IAAxDvE,EAAuD,EAAvDA,MAAOwD,EAAgD,EAAhDA,YAAaC,EAAmC,EAAnCA,UAAWC,EAAwB,EAAxBA,QAASpD,EAAe,EAAfA,SACvD,OACE,wBAAOH,UAAU,QAAjB,SACGG,GACC,uCACE,eAAC,GAAD,CACEkD,YAAaA,EACbC,UAAWA,EACXC,QAASA,IAEX,eAAC,GAAD,CAAiBA,UAAS1D,gBCJrBwE,GAPW,CACxBtH,IAAI,WAAD,4BAAE,8BAAA3C,EAAA,sEACoBiD,EAAYN,IAJZ,eAGpB,uBACKzC,EADL,EACKA,KADL,kBAEIA,GAFJ,2CAAF,kDAAC,ICMAgK,GAAkBjG,YAAY,CAClCC,KAAM,cACNP,aATmB,CACnBC,SAAU,KACVC,WAAW,EACX/B,MAAO,KACPiG,UAAW,MAMX5D,SAAU,CACRgG,qBADQ,SACa9F,GACnBA,EAAMR,WAAY,GAEpBuG,yBAJQ,SAIiB/F,EAAOE,GAC9BF,EAAMvC,MAAQyC,EAAOxE,QACrBsE,EAAMR,WAAY,GAEpBwG,oBARQ,SAQYhG,EAAOE,GACzBF,EAAMT,SAAWW,EAAOxE,QACxBsE,EAAM0D,UAAYvJ,KAAKwC,MACvBqD,EAAMR,WAAY,MAKhBqB,GAAyCgF,GAAzChF,QAAkBoF,GAAuBJ,GAAhC9E,QACT+E,GACNjF,GADMiF,qBAAsBC,GAC5BlF,GAD4BkF,yBAA0BC,GACtDnF,GADsDmF,oBAgCzCC,MClDAC,OARf,YAA6B,IDoDMC,ECpDbnD,EAAM,EAANA,GACdoD,EAAavE,aDmDcsE,ECnDiBnD,EDmDN,SAAChD,GAC7C,GAAIA,EAAMqG,YAAY9G,SACpB,OAAOS,EAAMqG,YAAY9G,SAAS8B,MAAK,SAACiF,GAAD,OAAUA,EAAKxI,MAAQqI,QCnDhE,OAAO,+BAAMC,GAAcA,EAAWvG,Q,8DCgEzB0G,GAhEI,SAAC,GAMb,IALLnF,EAKI,EALJA,MACAwD,EAII,EAJJA,YACAC,EAGI,EAHJA,UACA9B,EAEI,EAFJA,qBAGM+B,GADF,mBACY,CACdjF,KAAM,CAAEoF,KAAM,OAAQpF,KAAM,sBAC5BoE,UAAW,CACTpE,KAAM,mDACN4F,UAAW,SAAC7E,GAAD,OAAU,eAAC,GAAD,CAAaqD,UAAWrD,EAAKqD,cAEpDoC,YAAa,CACXpB,KAAM,aACNpF,KAAM,yDACN4F,UAAW,SAAC7E,GAAD,OAAU,eAAC,GAAD,CAAYoC,GAAIpC,EAAKwF,eAE5CI,kBAAmB,CACjBvB,KAAM,oBACNpF,KAAM,mFAER4G,KAAM,CAAExB,KAAM,OAAQpF,KAAM,wCAC5B6G,SAAU,CACRzB,KAAM,SACNpF,KAAM,yDACN4F,UAAW,SAAC7E,GAAD,OACT,eAAC,GAAD,CACEmC,qBAAsBA,EACtBC,GAAIpC,EAAK9C,IACTI,OAAQ0C,EAAK1C,aAiBrB,OACE,gBAAC,GAAD,CACE0G,YAAaA,EACbC,UAAWA,EACXC,QAASA,EACT1D,MAAOA,EAJT,UAME,eAAC,GAAD,CACEwD,YAAaA,EACbC,UAAWA,EACXC,QAASA,IAEX,eAAC,GAAD,CAAiBA,UAAS1D,cCnEnBuF,GAAe,SAACC,GAC3B,IAEMC,EAAaC,OAAOF,EAAQG,WAAWC,MAAM,IAAIhK,OAAO,IAC9D,OAAgB,IAAZ4J,EAA8B,oKAClB,IAAZA,EAAqB,GAAN,OAAUA,EAAV,2HACfA,EAAU,GAAKA,EAAU,GAIzBA,EAAU,IAAM,CAAC,EAAG,EAAG,GAAGrC,SAASsC,GAHzB,UAAMD,EAAN,sIAMVA,EAAU,IAAM,CAAC,GAAGrC,SAASsC,GACnB,UAAMD,EAAN,2HAGV,UAAMA,EAAN,4HA0COK,GAAiB,SAACC,GAC7B,IAAM1D,EAAO,IAAIrJ,KAAK+M,GAChBC,EAAU,IAAIhN,KAGpB,GAAgB,IAFAgN,EAAQC,cAAgB5D,EAAK4D,cAE1B,CAEjB,GAAe,IADAD,EAAQE,SAAW7D,EAAK6D,SACrB,CAEhB,GAAgB,IADAF,EAAQG,WAAa9D,EAAK8D,WACvB,CACjB,IAAMC,EAASJ,EAAQK,aAAehE,EAAKgE,aAC3C,OAAID,GAAU,GAAKA,EAAS,EAAU,wEAClCA,GAAU,GAAKA,EAAS,GAAW,kEACnCA,GAAU,IAAMA,EAAS,GAAW,mEACjC,mEAET,MAAM,GAAN,OAAU/D,EAAK8D,WAAf,cAA+B9D,EAAKgE,cAEtC,MAAM,GAAN,OAAUhE,EAAK6D,SAAf,YAA2B7D,EAAKiE,eAAe,UAAW,CACxDC,MAAO,UAIX,OAAOlE,EAAK4D,cAAgB,KAAO5D,EAAKmE,WAAa,GAAK,IAAMnE,EAAKoE,WC/DxDC,GAfM,SAAC,GAAoB,IDiBhBC,ECjBFC,EAAiB,EAAjBA,WACtB,OACE,sBAAKxG,UAAU,iCAAf,SACE,uBACE4B,MAAO,CAAEE,SAAU,OAAQD,OAAQ,QACnC7B,WDYkBuG,ECZGC,EDchB,IAAXD,EAAuB,kBAA6B,oBChBhD,SAIGnB,GAAaoB,QCRhBC,GAAY,SAAC,GAOZ,IANL3B,EAMI,EANJA,YACA4B,EAKI,EALJA,aACAC,EAII,EAJJA,cACAC,EAGI,EAHJA,gBACAC,EAEI,EAFJA,aACAC,EACI,EADJA,wBAEA,OACE,uBAAK9G,UAAU,mCAAf,UACE,sBAAIA,UAAU,kBAAd,WACI+G,MAAMC,QAAQlC,IACdtI,OAAOC,KAAKqI,GAAapI,KAAI,SAAC5C,GAC5B,OACE,qBAEEwH,QAAS,WACPoF,EAAa5B,EAAYhL,KAE3BkG,UACE6G,IAAiB/B,EAAYhL,GACzB,yBACA,mBAENmG,KAAK,SAVP,SAYG6E,EAAYhL,GAAK8M,IAXb9B,EAAYhL,GAAK6M,OAgB7B7B,EAAYpI,KAAI,SAACuH,GAChB,OACE,qBAEE3C,QAAS,WACPoF,EAAazC,IAEfjE,UACE6G,IAAiB5C,EACb,yBACA,mBAENhE,KAAK,SAVP,SAYGgE,EAAK2C,IAXD3C,EAAK0C,UAgBlB,sBAAK3G,UAAU,mDAAf,SACE,yBACEA,UAAU,gCACVsB,QAASwF,EAFX,yBAURL,GAAUQ,aAAe,CACvBN,cAAe,MACfC,gBAAiB,QAUJH,UCxDAS,OAjBf,YAA4D,IAAvCC,EAAsC,EAAtCA,YAAaC,EAAyB,EAAzBA,sBAChC,OACE,wBACE/F,KAAK,OACLrB,UAAU,eACVqH,YAAY,YACZC,MAAOH,EACPI,SAAUH,KCRDI,GCgBD,WACZ,MAAsCC,mBAAS,GAA/C,oBAAO5G,EAAP,KAAoB6G,EAApB,KACA,EAA4BD,mBAAS,CAAE/D,KAAM,OAAQC,MAAO,QAA5D,oBAAOgE,EAAP,KAAerE,EAAf,KACA,EAAwCmE,qBAAxC,oBAAOZ,EAAP,KAAqBe,EAArB,KACA,EAAsCH,mBAAS,IAA/C,oBAAON,EAAP,KAAoBU,EAApB,KAOMhI,EAAQS,axB8HkB,SAAC7B,GACjC,OAAOA,EAAMoB,MAAM7B,YwB9Hb8J,EAAgBxH,axB2Ic,SAAC7B,GACrC,OAAOA,EAAMoB,MAAM9D,KAAKtD,UwB1IlBqM,EAAcxE,aRmBkB,SAAC7B,GACvC,OAAOA,EAAMqG,YAAY9G,YQnBnB+J,EAAczH,aRqB2B,SAAC7B,GAChD,OAAOA,EAAMqG,YAAY7G,aQpBzBsC,qBAAU,WACRmH,EAAe,KACd,CAACb,IAEJ,IAuCMmB,EAfc,SAAC1N,GACnB,IAAI0N,EAAgB1N,EAWpB,OATIuM,EACFmB,EAAgB1N,EAAKwI,QACnB,SAACzD,GAAD,OAAUA,EAAKwF,aAAegC,EAAatK,OAEpC4K,IACTa,EAAgB1N,EAAKwI,QAAO,SAACzD,GAAD,OAC1BA,EAAKf,KAAK2J,cAAcjF,SAASmE,EAAYc,mBAG1CD,EAAclF,QAAO,SAACzD,GAAD,OAAUA,EAAK9C,MAAQuL,KAG/BI,CAAYrI,GAE5BsI,EAAcjH,KAAEkH,QAAQJ,EAAe,CAACL,EAAOjE,MAAO,CAACiE,EAAOhE,QAC9D6C,EAAa2B,EAAYE,OAEzBC,ECjFD,SAAkBC,EAAOC,EAAY9H,GAC1C,IAAM+H,GAAcD,EAAa,GAAK9H,EAGtC,OAAOQ,KAAEqH,GAAO9M,MAAMgN,GAAYC,KAAKhI,GAAU4G,QD6E/BqB,CAASR,EAAatH,EArBvB,GAuBjB,OAAIkH,EACK,eAAC,GAAD,IAIP,sBAAK/H,UAAU,wBAAf,SACE,uBAAKA,UAAU,WAAf,UACE,eAAC,GAAD,CAAcwG,WAAYA,IAC1B,sBAAKxG,UAAU,gBAAf,SAEI,eAAC,GAAD,CACE8E,YAAaA,EACb4B,aAtDmB,SAACzC,GAC9B4D,EAAe,IACfD,EAAgB3D,IAqDN4C,aAAcA,EACdC,wBA5DoB,WAC9Be,EAAe,IACfD,SA8DI,uBAAK5H,UAAU,YAAf,UACE,eAAC,GAAD,CACEmH,YAAaA,EACbC,sBAlFoB,SAACwB,GAC7BhB,IACAC,EAAee,EAAMC,OAAOvB,UAkFtB,iCACE,eAAC,GAAD,CACEzH,MAAOyI,EACPhF,UAAWA,EACXD,YAAasE,EACbnG,qBA9DiB,SAACC,GACd,aAAO5B,GACZiD,QAAO,SAACzD,GACf,OAAIA,EAAK9C,MAAQkF,GACfpC,EAAK1C,QAAU0C,EAAK1C,OACb0C,GAEFA,QAyDD,sBAAKW,UAAU,OAAf,SACE,eAAC,GAAD,CACEW,WAAY6F,EACZ9F,SAxDG,EAyDHE,aAxEW,SAACkI,GACxBpB,EAAeoB,IAwEHjI,YAAaA,kB,kBE/DdkI,OArDf,YAOI,IANFC,EAMC,EANDA,QACA1K,EAKC,EALDA,KACA2K,EAIC,EAJDA,eACAC,EAGC,EAHDA,MACAC,EAEC,EAFDA,aACAjN,EACC,EADDA,MAEMkN,EACHrC,MAAMC,QAAQgC,IAA+B,kBAAZA,EAK9BA,EAJAxM,OAAOC,KAAKuM,GAAStM,KAAI,SAAC2M,GAAD,MAAa,CACpC/B,MAAO0B,EAAQK,GAAQ9M,IACvB2M,MAAOF,EAAQK,GAAQ/K,SAe/B,OACE,uBAAK0B,UAAU,OAAf,UACE,wBAAOA,UAAU,kBAAjB,SAAoCkJ,IACpC,eAAC,KAAD,CACEI,mBAAmB,EACnBC,SAAO,EACPjL,KAAMA,EACN0K,QAASI,EACTI,gBAAgB,SAChBjC,SArBe,SAACD,GACpB2B,EAAe,CAAE3K,KAAMA,EAAMgJ,WAqBzB6B,aAAcA,EACdnJ,UAdE,GAAN,OAAU9D,EAAQ,aAAe,GAAjC,OAgBGA,GAAS,sBAAK8D,UAAU,mBAAf,SAAmC9D,QCSpCuN,OAlDf,YAMI,IALFT,EAKC,EALDA,QACA1K,EAIC,EAJDA,KACA2K,EAGC,EAHDA,eACA3B,EAEC,EAFDA,MAEC,IADD4B,aACC,MADO,sEACP,EACKQ,EAAe,SAAC,GAAgB,IAAdb,EAAa,EAAbA,OACtBI,EAAe,CAAE3K,KAAMuK,EAAOvK,KAAMgJ,MAAOuB,EAAOvB,SAGpD,OACE,uBAAKtH,UAAU,YAAf,UACE,wBAAOA,UAAU,kBAAjB,SAAoCkJ,IACpC,+BACGF,GACCA,EAAQtM,KAAI,SAAC2M,EAAQM,GACnB,OACE,uBAAa3J,UAAU,+BAAvB,UACE,wBACEA,UAAU,mBACVqB,KAAK,QACL/C,KAAMA,EACNmD,GAAI4H,EAAO/K,KAAO,IAAM+K,EAAO/B,MAC/BA,MAAO+B,EAAO/B,MACdsC,QAASP,EAAO/B,QAAUA,EAC1BC,SAAUmC,IAEZ,wBACE1J,UAAU,mBACV6J,QAASR,EAAO/K,KAAO,IAAM+K,EAAO/B,MAFtC,SAIG+B,EAAO/K,SAdFqL,YCjBxB,SAASG,GAAT,GASI,IARFC,EAQC,EARDA,cACAd,EAOC,EAPDA,eACAD,EAMC,EANDA,QACAE,EAKC,EALDA,MACA5B,EAIC,EAJDA,MACApL,EAGC,EAHDA,MACAoC,EAEC,EAFDA,KACA0L,EACC,EADDA,QAKMZ,EACHrC,MAAMC,QAAQgC,IAA+B,kBAAZA,EAM9BA,EALAxM,OAAOC,KAAKuM,GAAStM,KAAI,SAACuN,GAAD,MAAiB,CACxC3L,KAAM2L,EACN3C,MAAO0B,EAAQiB,GAAY1N,IAC3BzC,IAAKkP,EAAQiB,GAAY1N,QAUjC,MAHqB,kBAAV+K,IACTA,EAAQA,EAAM/K,KAEZyN,EACK,eAAC,GAAD,IAIP,uBAAKhK,UAAU,0BAAf,UACE,wBAAO6J,QAAQ,qBAAqB7J,UAAU,aAA9C,SACGkJ,IAEH,0BACElJ,UA3BE,GAAN,OAAU9D,EAAQ,yBAA2B,cAA7C,KA4BIuF,GAAG,qBACH6F,MAAOA,EACPC,SAnBe,SAAC,GAAgB,IAAdsB,EAAa,EAAbA,OACtBI,EAAe,CAAE3K,KAAMuK,EAAOvK,KAAMgJ,MAAOuB,EAAOvB,SAmB9ChJ,KAAMA,EALR,UAOE,yBAAQ4L,UAAQ,EAAC5C,MAAM,GAAvB,SACGyC,IAEFX,GACCA,EAAW1M,KAAI,SAAC2M,GACd,OACE,yBAAyB/B,MAAO+B,EAAO9M,IAAvC,SACG8M,EAAO/K,MADG+K,EAAO9M,WAM3BL,GAAS,sBAAK8D,UAAU,mBAAf,SAAmC9D,OAInD4N,GAAYC,cAAgB,CAAE7N,MAAM,2BAarB4N,UC1Ef,SAASK,GAAT,GAAyE,IAApDjB,EAAmD,EAAnDA,MAAO5K,EAA4C,EAA5CA,KAAM2K,EAAsC,EAAtCA,eAAgB3B,EAAsB,EAAtBA,MAAOjG,EAAe,EAAfA,KAAMnF,EAAS,EAATA,MAI7D,EAAwCuL,oBAAS,GAAjD,oBAAO2C,EAAP,KAAqBC,EAArB,KAUA,OACE,uBAAKrK,UAAU,0BAAf,UACE,wBAAO6J,QAASvL,EAAM0B,UAAU,OAAhC,SACGkJ,IAEH,uBAAKlJ,UAAU,6BAAf,UACE,wBACEqB,KAAM+I,EAAe,OAAS/I,EAC9BI,GAAInD,EACJgJ,MAAOA,EACPhJ,KAAMA,EACNiJ,SAnBa,SAAC,GAAgB,IAAdsB,EAAa,EAAbA,OACtBI,EAAe,CAAE3K,KAAMuK,EAAOvK,KAAMgJ,MAAOuB,EAAOvB,SAmB5CtH,UAxBA,GAAN,OAAU9D,EAAQ,0BAA4B,eAA9C,OA0Bc,aAATmF,GACC,uBACErB,UAAU,6BACVqB,KAAK,SACLC,QAtBiB,WACzB+I,GAAgB,SAACC,GAAD,OAAWA,MAkBrB,SAKE,oBAAGtK,UAAWoK,EAAe,YAAc,sBAI9ClO,GAAS,sBAAK8D,UAAU,+BAAf,SAA+C9D,UAKjEiO,GAAUlD,aAAe,CAAE5F,KAAM,QAUlB8I,UCxDFI,GAAkB,CAC7B/P,MAAO,CACLgQ,WAAY,CACV7K,QAAS,wPAEX8K,QAAS,CACP9K,QAAS,+KAGblF,SAAU,CACR+P,WAAY,CAAE7K,QAAS,qLACvB+K,gBAAiB,CAAE/K,QAAS,oNAC5BgL,SAAU,CAAEhL,QAAS,mKACrBiL,IAAK,CACHjL,QAAS,0MACT2H,MAAO,IAGXzC,WAAY,CACV2F,WAAY,CAAE7K,QAAS,0KAEzBkL,QAAS,CACPL,WAAY,CACV7K,QAAS,yTAGbrB,KAAM,CACJkM,WAAY,CACV7K,QAAS,0KAGb+C,UAAW,CACT8H,WAAY,CACV7K,QAAS,+JAIbrD,QAAS,CACPkO,WAAY,CACV7K,QAAS,iLCvCFmL,GAAY,SAACxQ,EAAMX,GAC9B,IAAMoR,EAAS,GACf,SAASC,EAASC,EAAQ3Q,EAAMX,GAC9B,IAAIuR,EACJ,OAAQD,GACN,IAAK,aACH,IAEIC,EADkB,mBAAT5Q,GACSA,EAGA,kBAATA,EAC0B,IAA7BkC,OAAOC,KAAKnC,GAAM+N,OAClBtB,MAAMC,QAAQ1M,GACE,IAAhBA,EAAK+N,OACW,KAAhB/N,EAAK6Q,OAEb,MAAOjP,GACPkP,QAAQC,IAAInP,EAAMyD,SAGpB,MAEF,IAAK,UAGDuL,GADoB,kBACU3P,KAAKjB,GAErC,MACF,IAAK,kBAGD4Q,GADuB,UACU3P,KAAKjB,GAExC,MACF,IAAK,WAGD4Q,GADuB,OACU3P,KAAKjB,GAExC,MACF,IAAK,MACH4Q,EAAiB5Q,EAAK+N,OAAS1O,EAAO2N,MACtC,MACF,IAAK,gBACH4D,EAAiB3F,OAAOjL,EAAKmL,MAAM,KAAK,KAAM,IAAI7M,MAAOiN,cACzD,MACF,IAAK,cAGDqF,GADmB,qBACU3P,KAAKjB,GAOxC,GAAI4Q,EAAgB,OAAOvR,EAAOgG,QAGpC,IAAK,IAAM2L,KAAahR,EACtB,IAAK,IAAMiR,KAAkB5R,EAAO2R,GAAY,CAC9C,IAAMpP,EAAQ8O,EACZO,EACAjR,EAAKgR,GACL3R,EAAO2R,GAAWC,IAEhBrP,IAAU6O,EAAOO,KACnBP,EAAOO,GAAapP,GAI1B,OAAO6O,GCgIMS,OAhLf,WACE,IAAM9L,EAAWU,cACXxC,EAAU6N,cACVzB,EAAU1J,ahCiJyB,SAAC7B,GAC1C,OAAOA,EAAMoB,MAAM5B,agCjJbyN,EAAcpL,ahCmJkB,SAAC7B,GACvC,OAAIA,EAAMoB,MAAM7B,SACPS,EAAMoB,MAAM7B,SAAS8B,MAC1B,SAACT,GAAD,OAAUA,EAAK9C,MAAQkC,EAAMoB,MAAM9D,KAAKtD,UAGrC,QgCvJDiK,EAAYpC,axBuBc,SAAC7B,GACjC,OAAOA,EAAMiE,UAAU1E,YwBvBjB2N,EAAmBrL,axByBoB,SAAC7B,GAAD,OAC7CA,EAAMiE,UAAUzE,awBzBV6G,EAAcxE,ahBmBkB,SAAC7B,GACvC,OAAOA,EAAMqG,YAAY9G,YgBnBnB+J,EAAczH,ahBqB2B,SAAC7B,GAChD,OAAOA,EAAMqG,YAAY7G,agBpBzB,EAA4BwJ,mBAAS,IAArC,oBAAOsD,EAAP,KAAea,EAAf,KACA,EAAwBnE,qBAAxB,oBAAOnN,EAAP,KAAauR,EAAb,KACA,EAAgCpE,oBAAS,GAAzC,oBAAOxJ,EAAP,KAAkB6N,EAAlB,KAEAvL,qBAAU,WACHyJ,GAAY2B,GAAqB5D,IAAe2D,GAAgBpR,GACnEuR,EAAQ,2BACHH,GADE,IAELhJ,UAAWqJ,EAAuBL,EAAYhJ,WAC9CmC,WAAYmH,EAAwBN,EAAY7G,iBAGnD,CAAC8G,EAAkB5D,EAAa2D,EAAapR,EAAM0P,IAEtDzJ,qBAAU,WACJjG,GAAQ2D,GACV6N,GAAW,KAEZ,CAACxR,EAAM2D,IAEV,IAAM8N,EAAyB,SAACzR,GAC9B,OAAOoI,EACJI,QAAO,SAACmJ,GAAD,OAAU3R,EAAK0I,SAASiJ,EAAK1P,QACpCG,KAAI,SAACwP,GAAD,MAAQ,CAAE5E,MAAO4E,EAAE3P,IAAK2M,MAAOgD,EAAE5N,UAEpC0N,EAA0B,SAAC1R,GAC/B,OAAOwK,EAAYhF,MAAK,SAACiF,GAAD,OAAUA,EAAKxI,MAAQjC,MAG3C6R,EAAgBzJ,EAAUhG,KAAI,SAACuP,GAAD,MAAW,CAC7C3E,MAAO2E,EAAK1P,IACZ2M,MAAO+C,EAAK3N,SAGR2K,EAAiB,SAACJ,GACtBgD,GAAQ,SAACvB,GAAD,mBAAC,eACJA,GADG,mBAELzB,EAAOvK,KACU,eAAhBuK,EAAOvK,KACHwG,EAAYhF,MAAK,SAAC+E,GAAD,OAAgBA,EAAWtI,MAAQsM,EAAOvB,SAC3DuB,EAAOvB,YAIX8E,EAAY,uCAAG,WAAOC,GAAP,eAAAjS,EAAA,kEAEjBiS,EAAEC,iBACctB,IAHC,iDAQXuB,EARW,2BASZjS,GATY,IAUfuK,WAAYvK,EAAKuK,WAAWtI,IAC5BmG,UAAWpI,EAAKoI,UAAUhG,KAAI,SAACuP,GAAD,OAAUA,EAAK3E,WAG/C5H,EAASnC,EAAWgP,IAEpB3O,EAAQqB,KAAKtB,UAAoB+N,EAAYnP,KAhB5B,kDAkBjB6O,QAAQC,IAAR,MAlBiB,0DAAH,sDAsBZL,EAAW,WACf,IAAMD,EAASD,GAAUxQ,EAAMiQ,IAE/B,OADAqB,EAAUb,GAC4B,IAA/BvO,OAAOC,KAAKsO,GAAQ1C,QAG7B9H,qBAAU,WAER,OADAyK,IACO,eACN,CAAC1Q,IAEJ,IAAMkS,EAAyC,IAA/BhQ,OAAOC,KAAKsO,GAAQ1C,OAEpC,OAAIpK,EACK,eAAC,GAAD,IAGP,sBAAK+B,UAAU,aAAf,SACE,uBAAKA,UAAU,uCAAf,UACE,sBAAKA,UAAU,WAAf,SACE,0BAAQA,UAAU,kBAAkBsB,QAAS,kBAAM1D,EAAQ6O,UAA3D,UACE,oBAAGzM,UAAU,qBACb,wEAGJ,sBACEA,UAAU,oCADZ,SAIE,wBACE0M,SAAUN,EACVpM,UAAU,sCAFZ,UAIE,qBAAIA,UAAU,OAAd,kBACA,eAAC,GAAD,CACE1B,KAAK,OACLgJ,MAAOhN,EAAKgE,KACZ2K,eAAgBA,EAChBC,MAAM,8CACNhN,MAAO6O,EAAOzM,OAEhB,eAAC,GAAD,CACEA,KAAK,QACLgJ,MAAOhN,EAAKE,MACZyO,eAAgBA,EAChBC,MAAM,6HACN7H,KAAK,QACLnF,MAAO6O,EAAOvQ,QAEhB,eAAC,GAAD,CACEyO,eAAgBA,EAChBD,QAASlE,EACToE,MAAM,mIACN5B,MAAOhN,EAAKuK,WACZkF,cAAezP,EAAKuK,WAAWvG,KAC/BA,KAAK,aACLpC,MAAO6O,EAAOlG,aAGhB,eAAC,GAAD,CACEmE,QAAS,CACP,CAAE1K,KAAM,qBAAOgJ,MAAO,QACtB,CAAEhJ,KAAM,qBAAOgJ,MAAO,UACtB,CAAEhJ,KAAM,uCAAUgJ,MAAO,UAE3BA,MAAOhN,EAAKqS,IACZ1D,eAAgBA,EAChB3K,KAAK,QAGP,eAAC,GAAD,CACEA,KAAK,YACL0K,QAASmD,EACTlD,eAAgBA,EAChBC,MAAM,oGACNC,aAAc7O,EAAKoI,UACnBxG,MAAO6O,EAAOrI,YAGhB,yBACErB,KAAK,SACLrB,UAAU,sCACVkK,UAAWsC,EAHb,+BClKGI,OAff,YAA+B,IAAVC,EAAS,EAATA,MACnB,OACE,sBACEC,IAAKD,EACL7M,UAAU,sCACV+M,IAAI,SACJC,MAAM,KACNC,OAAO,QCHb,SAASC,GAAT,GAMI,IALFzU,EAKC,EALDA,OACA6D,EAIC,EAJDA,QACY6Q,EAGX,EAHDC,WACAC,EAEC,EAFDA,oBACA9Q,EACC,EADDA,IAEM8C,EAAOiB,YAAYV,EAAYnH,IAC/BqP,EAAgBxH,alC0Jc,SAAC7B,GACrC,OAAOA,EAAMoB,MAAM9D,KAAKtD,UkCzJxB,OACE,sBAAKuH,UAAU,2BAAf,SACE,sBAAKA,UAAU,MAAf,SACE,sBAAKA,UAAU,MAAf,SACE,uBAAKA,UAAU,qBAAf,UACE,eAAC,GAAD,CAAW6M,MAAOxN,EAAKwN,QACvB,sBAAK7M,UAAU,4BAAf,SACE,uBAAKA,UAAU,OAAf,UACE,uBAAKA,UAAU,oDAAf,UACE,qBAAGA,UAAU,QAAb,UACGX,EAAKf,KACN,uBAAM0B,UAAU,aAAhB,SACG0F,GAAeyH,QAGnBrF,IAAkBrP,GACjB,yBACEuH,UAAU,uDAEVsB,QAAS,kBAAM+L,EAAoB9Q,IAHrC,SAKE,oBAAGyD,UAAU,oBAInB,oBAAGA,UAAU,aAAb,SAA2B1D,kBAmB5B4G,WAAMC,KAAK+J,IC3DpBI,GAAmB,WAqBVC,GAnBS,CACtBC,cAAc,WAAD,4BAAE,WAAOC,GAAP,iBAAArT,EAAA,sEACUiD,EAAYhD,KAAKiT,GAAkBG,GAD7C,uBACLnT,EADK,EACLA,KADK,kBAENA,GAFM,2CAAF,mDAAC,GAIdoT,YAAY,WAAD,4BAAE,WAAOC,GAAP,iBAAAvT,EAAA,sEACYiD,EAAYN,IAAIuQ,GAAkB,CACvDzT,OAAQ,CACNuO,QAAS,SACTwF,QAASD,KAJF,uBACHrT,EADG,EACHA,KADG,kBAOJA,GAPI,2CAAF,mDAAC,GASZuT,cAAc,WAAD,4BAAE,WAAOC,GAAP,iBAAA1T,EAAA,sEACUiD,EAAYJ,OAAOqQ,GAAmBQ,GADhD,uBACLxT,EADK,EACLA,KADK,kBAENA,GAFM,2CAAF,mDAAC,ICfVyT,GAAgB1P,YAAY,CAChCC,KAAM,WACNP,aAAc,CACZC,SAAU,GACVC,WAAW,EACX/B,MAAO,MAETqC,SAAU,CACRyP,yBADQ,SACiBvP,EAAOE,GAC9BF,EAAMR,WAAY,GAEpBgQ,sBAJQ,SAIcxP,EAAOE,GAC3BF,EAAMvC,MAAQyC,EAAOxE,QACrBsE,EAAMR,WAAY,GAEpBiQ,uBARQ,SAQezP,EAAOE,GAC5BF,EAAMT,SAAWW,EAAOxE,QACxBsE,EAAMR,WAAY,GAEpBkQ,kBAZQ,SAYU1P,EAAOE,GACvBF,EAAMT,SAASiB,KAAKN,EAAOxE,SAC3BsE,EAAMR,WAAY,GAEpBmQ,eAhBQ,SAgBO3P,EAAOE,GACpBF,EAAMR,WAAY,EAClBQ,EAAMT,SAAWS,EAAMT,SAAS8E,QAC9B,SAAC2K,GAAD,OAAaA,EAAQlR,MAAQoC,EAAOxE,eAMpCmF,GAAsCyO,GAAtCzO,QAAkB+O,GAAoBN,GAA7BvO,QACX8O,GAAyBC,YAAa,mCAG1CP,GAKE1O,GALF0O,yBACAC,GAIE3O,GAJF2O,sBACAC,GAGE5O,GAHF4O,uBACAC,GAEE7O,GAFF6O,kBACAC,GACE9O,GADF8O,eAoDaC,MCnDAG,OApCf,YAAuC,IAApBC,EAAmB,EAAnBA,gBACX/O,EAAWU,cACXsO,EAAuBpO,aDkFe,SAAC7B,GAAD,OAC5CA,EAAMkQ,SAAS1Q,aCjFToP,EAAsB,SAAC5L,GD6DF,IAACqM,EC5D1BpO,GD4D0BoO,EC5DHrM,ED4DE,uCAAe,WAAO/B,GAAP,SAAAtF,EAAA,6DAC1CsF,EAASsO,MADiC,kBAGdT,GAAgBM,cAAcC,GAHhB,cAGhCxR,SAGNoD,EAAS0O,GAAeN,IANc,gDASxCpO,EAASuO,GAAsB,KAAMtO,UATG,yDAAf,yDCzD3B,OAAI+O,EACK,6CAGsB,IAA3BD,EAAgBpG,OACX,4SAIP,qCACGoG,EAAgB/R,KAAI,SAAC+Q,GAAD,OACnB,eAAC,GAAD,2BAEMA,GAFN,IAGEJ,oBAAqBA,IAFhBI,EAAQlR,WCoBRqS,OA7Cf,YAQI,IAPF1F,EAOC,EAPDA,MACA7B,EAMC,EANDA,YACA/I,EAKC,EALDA,KACA2K,EAIC,EAJDA,eACA3B,EAGC,EAHDA,MAGC,IAFDuH,YAEC,MAFM,EAEN,EADD3S,EACC,EADDA,MAQA,OACE,uBAAK8D,UAAU,OAAf,UACE,wBAAO6J,QAASvL,EAAM0B,UAAU,OAAhC,SACGkJ,IAGH,uBAAKlJ,UAAU,iBAAf,UACE,2BACEA,UAbA,GAAN,OAAU9D,EAAQ,8BAAgC,mBAAlD,KAcMmL,YAAaA,EACb5F,GAAInD,EACJsD,MAAO,CAAEqL,OAAe,GAAP4B,EAAY,MAC7BvH,MAAOA,EACPC,SAhBa,SAAC,GAAgB,IAAdsB,EAAa,EAAbA,OACtBI,EAAe,CAAE3K,KAAMuK,EAAOpH,GAAI6F,MAAOuB,EAAOvB,WAiB3CpL,GAAS,sBAAK8D,UAAU,+BAAf,SAA+C9D,WC1BjE,SAAS4S,GAAT,GAAmD,IAA5B7Q,EAA2B,EAA3BA,UAAW8Q,EAAgB,EAAhBA,aAChC,EAA4BtH,mBAAS,IAArC,oBAAOsD,EAAP,KAAea,EAAf,KACA,EAAwBnE,mBAAS,CAAEnL,QAAS,KAA5C,oBAAOhC,EAAP,KAAauR,EAAb,KAcMmD,EAAY,WAChBnD,EAAQ,CAAEvP,QAAS,KACnBsP,EAAU,KAQZrL,qBAAU,YANO,WACf,IAAMwK,EAASD,GAAUxQ,EAAMiQ,IAE/BqB,EAAUb,GACHvO,OAAOC,KAAKsO,GAAQ1C,OAG3B2C,KACC,CAAC1Q,IAEJ,IAAMkS,EAAyC,IAA/BhQ,OAAOC,KAAKsO,GAAQ1C,OAEpC,OACE,sBAAKrI,UAAU,YAAf,SACE,wBACEA,UAAU,sCACV0M,SA7Be,SAACL,GACpBA,EAAEC,iBACGE,IAGLuC,EAAazU,GACb0U,MAqBE,UAIE,8CAEA,eAAC,GAAD,CACE1Q,KAAK,UACL4K,MAAM,yDACND,eAvCe,SAACJ,GACtBgD,GAAQ,SAACvB,GAAD,mBAAC,eAAeA,GAAhB,mBAAuBzB,EAAOvK,KAAOuK,EAAOvB,YAuC9CD,YAAY,4FACZC,MAAOhN,EAAKgC,SAAW,GACvBJ,MAAO6O,EAAOzO,UAEhB,yBACE+E,KAAK,SACLrB,UAAU,sCACVkK,UAAWsC,GAAWvO,EAHxB,2FAeOiF,WAAMC,KAAK2L,ICpBXG,OArCf,YAAqC,IAAXxW,EAAU,EAAVA,OAClBiH,EAAWU,cACXsO,EAAuBpO,aJ6Ee,SAAC7B,GAAD,OAC5CA,EAAMkQ,SAAS1Q,aI7ET0Q,EAAWrO,aJuEkB,SAAC7B,GACpC,GAAIA,EAAMkQ,SAAS3Q,SACjB,OAAOS,EAAMkQ,SAAS3Q,YIvExBuC,qBAAU,WACRb,EJ2B4B,SAACjH,GAAD,8CAAY,WAAOiH,GAAP,iBAAAtF,EAAA,6DAC1CsF,EAASsO,MADiC,kBAGdT,GAAgBG,YAAYjV,GAHd,gBAGhC6D,EAHgC,EAGhCA,QACRoD,EAASwO,GAAuB5R,IAJQ,gDAMxCoD,EAASuO,GAAsB,KAAMtO,UANG,yDAAZ,sDI3BnBuP,CAAiBzW,MACzB,CAACA,IAEJ,IAIM0W,EAAiB/G,mBAAQuG,EAAU,CAAC,cAAe,CAAC,SAE1D,OACE,uCACE,sBAAK3O,UAAU,YAAf,SACE,eAAC,GAAD,CACE+O,aAVa,SAACzU,GJkCK,IAACH,EIjC1BuF,GJiC0BvF,EIjCH,aAAE1B,UAAW6B,GJiCX,uCAAa,WAAOoF,GAAP,uBAAAtF,EAAA,6DACxCsF,EAAS4O,MAEO7M,EAAgBtH,EAAxB1B,OAAY6D,EAAYnC,EAAZmC,QAEdmR,EAAU,CACdnR,UACAqR,OAAQlM,GAP8B,kBAUZ8L,GAAgBC,cAAcC,GAVlB,gBAU9BnR,EAV8B,EAU9BA,QACRoD,EAASyO,GAAkB7R,IAXW,kDAatCoD,EAASuO,GAAsB,KAAMtO,UAbC,0DAAb,yDIvBnB1B,UAAWyQ,MAGf,sBAAK1O,UAAU,YAAf,SACE,uBAAKA,UAAU,aAAf,UACE,2CACA,wBACA,eAAC,GAAD,CAASyO,gBAAiBU,aCvBrBC,OAff,SAAsBC,GACpB,IAAQpK,EAAsBoK,EAAtBpK,kBACR,OACE,sBAAKjF,UAAU,YAAf,SACE,uBAAKA,UAAU,kEAAf,UACE,qBAAIA,UAAU,aAAd,SACE,yDAGF,qBAAIA,UAAU,YAAd,SAA2BiF,UCWpBqK,OAlBf,YAAqC,IAAd5M,EAAa,EAAbA,UACrB,OACE,sBAAK1C,UAAU,YAAf,SACE,uBAAKA,UAAU,kEAAf,UACE,qBAAIA,UAAU,aAAd,SACE,gDAEF,oBAAGA,UAAU,YAAb,SACE,eAAC,GAAD,CAAa0C,UAAWA,MAE1B,+BCmCO6M,OAzCf,SAAsBF,GACpB,IAAQ/Q,EAAuC+Q,EAAvC/Q,KAAM4G,EAAiCmK,EAAjCnK,KAAML,EAA2BwK,EAA3BxK,WAAYtI,EAAe8S,EAAf9S,IAAKsQ,EAAUwC,EAAVxC,MAC/BnB,EAAcpL,a3CqKkB,SAAC7B,GACvC,OAAIA,EAAMoB,MAAM7B,SACPS,EAAMoB,MAAM7B,SAAS8B,MAC1B,SAACT,GAAD,OAAUA,EAAK9C,MAAQkC,EAAMoB,MAAM9D,KAAKtD,UAGrC,Q2C1KP,OACE,sBAAKuH,UAAU,YAAf,SACE,uBAAKA,UAAU,YAAf,UACG0L,EAAYnP,MAAQA,GACnB,eAAC,KAAD,CACE4H,GAAI,CACFqL,SAAU7R,UAAoBpB,EAAM,QACpCkC,MAAO4Q,GAHX,SAME,yBAAQrP,UAAU,qDAAlB,SACE,oBAAGA,UAAU,mBAKnB,uBAAKA,UAAU,sEAAf,UACE,eAAC,GAAD,CAAW6M,MAAOA,IAClB,uBAAK7M,UAAU,OAAf,UACE,8BAAK1B,IACL,oBAAG0B,UAAU,sBAAb,SAAoC6E,EAAWvG,OAC/C,uBAAK0B,UAAU,aAAf,UACE,oBACEA,UAAU,qCACVC,KAAK,WAEP,oBAAGD,UAAU,gCAAgCC,KAAK,WAClD,uBAAMD,UAAU,OAAhB,SAAwBkF,mBCrCvBuK,GCWQ,SAAC,GAAgB,IAAdhX,EAAa,EAAbA,OAClB4W,EAAW/O,YAAYV,EAAYnH,IAEzC,OAAK4W,EAKH,sBAAKrP,UAAU,gBAAf,SACGqP,GACC,uBAAKrP,UAAU,iBAAf,UACE,uBAAKA,UAAU,gBAAf,UACE,eAAC,GAAD,eAAkBqP,IACjBA,EAAS3M,WACR,eAAC,GAAD,CAAaA,UAAW2M,EAAS3M,YAEnC,eAAC,GAAD,eAAkB2M,OAGpB,sBAAKrP,UAAU,YAAf,SACE,eAAC,GAAD,CAAgBvH,OAAQ4W,EAAS9S,aAhBlC,eAAC,GAAD,KCkBImT,GAxBG,WAChB,MAAqBC,cAAblO,EAAR,EAAQA,GAAImO,EAAZ,EAAYA,KAEN9H,EAAgBxH,a9C4Jc,SAAC7B,GACrC,OAAOA,EAAMoB,MAAM9D,KAAKtD,U8C3JxB,OACE,eAAC,GAAD,UACGgJ,EACCmO,EACEnO,IAAOqG,EACL,eAAC,GAAD,IAEA,eAAC,IAAD,CAAU3D,GAAE,UAAKxG,EAAL,YAAoBmK,EAApB,WAGd,eAAC,GAAD,CAAgBrP,OAAQgJ,IAG1B,eAAC,GAAD,OCeOoO,OApCf,WACE,IAAMnE,EAAcpL,a/CuKkB,SAAC7B,GACvC,OAAIA,EAAMoB,MAAM7B,SACPS,EAAMoB,MAAM7B,SAAS8B,MAC1B,SAACT,GAAD,OAAUA,EAAK9C,MAAQkC,EAAMoB,MAAM9D,KAAKtD,UAGrC,Q+C5KP,EAA4BgP,oBAAS,GAArC,oBAAOqI,EAAP,KAAeC,EAAf,KAIA,OAAKrE,EAKH,uBAAK1L,UAAU,WAAWsB,QART,WACjByO,GAAU,SAACC,GAAD,OAAgBA,MAO1B,UACE,uBAAKhQ,UAAU,gDAAf,UACE,sBAAKA,UAAU,OAAf,SAAuB0L,EAAYpN,OACnC,sBACEwO,IAAKpB,EAAYmB,MACjBE,IAAI,aACJE,OAAO,KACPjN,UAAU,qCAGd,uBAAKA,UAAS,8BAAyB8P,EAAS,OAAS,IAAzD,UACE,eAAC,KAAD,CACE3L,GAAE,UAAKxG,EAAL,YAAoB+N,EAAYnP,KAClCyD,UAAU,gBAFZ,qBAMA,eAAC,KAAD,CAAMmE,GAAIzG,EAAcsC,UAAU,gBAAlC,2BArBG,eAAC,GAAD,KC0BIiQ,GAjCA,WACb,IAAM/R,EAAaoC,ahD2JkB,SAAC7B,GACtC,OAAOA,EAAMoB,MAAM3B,cgD3JnB,OACE,sBAAK8B,UAAU,wBAAf,SACE,uBAAKA,UAAU,kBAAf,UACE,sBAAIA,UAAU,MAAd,UACE,qBAAIA,UAAU,WAAd,SACE,eAAC,KAAD,CAAMA,UAAU,YAAYmE,GAAI3G,EAAhC,oBAIDU,GACC,qBAAI8B,UAAU,WAAd,SACE,eAAC,KAAD,CAAMA,UAAU,WAAWmE,GAAIxG,EAA/B,wBAMN,uBAAKqC,UAAU,mDAAf,UACG9B,GAAc,eAAC,GAAD,KAEbA,GACA,eAAC,KAAD,CAAM8B,UAAU,WAAWmE,GAAI1G,EAA/B,4BCSGyS,OApCf,YAAuE,IAAjD5R,EAAgD,EAAhDA,KAAMgJ,EAA0C,EAA1CA,MAAO2B,EAAmC,EAAnCA,eAAgB9I,EAAmB,EAAnBA,SAAUjE,EAAS,EAATA,MAQ3D,OACE,uBAAK8D,UAAU,kBAAf,UACE,wBACEA,UAAU,mBACVqB,KAAK,WACLiG,MAAM,GACNsC,QAAStC,EACT7F,GAAInD,EACJiJ,SAfe,WACnB0B,EAAe,CAAE3K,KAAMA,EAAMgJ,OAAQA,OAgBnC,wBAAOtH,UAbH,GAAN,OAAU9D,EAAQ,8BAAgC,mBAAlD,KAauC2N,QAASvL,EAA9C,SACG6B,IAGFjE,GAAS,sBAAK8D,UAAU,mBAAf,SAAmC9D,QCqEpCiU,OApFf,WACE,IAAMzQ,EAAWU,cACXgQ,EAAY9P,alD2Kc,SAAC7B,GAAD,OAAWA,EAAMoB,MAAM3D,SkD1KvD,EAAwBuL,mBAAS,CAAEjN,MAAO,GAAIC,SAAU,GAAI4V,QAAQ,IAApE,oBAAO/V,EAAP,KAAauR,EAAb,KACA,EAA4BpE,mBAAS,IAArC,oBAAOsD,EAAP,KAAea,EAAf,KACM3C,EAAiB,SAACJ,GACtBgD,GAAQ,SAACvB,GAAD,mBAAC,eAAeA,GAAhB,mBAAuBzB,EAAOvK,KAAOuK,EAAOvB,YAEtD/G,qBAAU,WACR3D,IAAMV,MAAMkU,KACX,CAACA,IAEJ,IAWME,EAAuB,CAC3B9V,MAAO,CACLgQ,WAAY,CACV7K,QAAS,sBAGblF,SAAU,CACR+P,WAAY,CAAE7K,QAAS,0BAIrBqL,EAAW,WACf,IAAMD,EAASD,GAAUxQ,EAAMgW,GAG/B,OAFA1E,EAAUb,GAE4B,IAA/BvO,OAAOC,KAAKsO,GAAQ1C,QAG7B9H,qBAAU,WAER,OADAyK,IACO,eACN,CAAC1Q,IAEJ,IAAMkS,EAAyC,IAA/BhQ,OAAOC,KAAKsO,GAAQ1C,OACpC,OACE,wBAAMqE,SApCa,SAACL,GAGpB,GAFAA,EAAEC,iBACctB,IAChB,CAGA,IAAMuF,EAAW3S,EAAQ4S,SAAS/R,MAC9Bb,EAAQ4S,SAAS/R,MAAMgS,KAAKjB,SAC5BhS,EACJkC,ElDyEF,SAAC,GAAD,IAAGpF,EAAH,EAAGA,KAAMiW,EAAT,EAASA,SAAT,8CACA,WAAO7Q,GAAP,2BAAAtF,EAAA,6DACUI,EAAoBF,EAApBE,MAAOC,EAAaH,EAAbG,SACfiF,EAASb,KAFX,kBAIuB5E,EAAYM,MAAM,CAAEC,QAAOC,aAJlD,OAIUH,EAJV,OAKIjC,EAAoBC,SAASgC,GAC7BoF,EAASZ,EAAmB,CAAErG,OAAQ6B,EAAK7B,UAC3CmF,EAAQqB,KAAKsR,GAPjB,oDAS8B,KAAMlU,SAAS/B,KAAK4B,MAAtCwU,EATZ,EASYA,KAAM/Q,EATlB,EASkBA,QACD,MAAT+Q,GACIC,EAAe7S,EAAkB6B,GACvCD,EAASX,EAAkB4R,KAE3BjR,EAASX,EAAkB,KAAMY,UAdvC,0DADA,sDkDzEWiR,CAAM,CAAEtW,OAAMiW,gBA2BOvQ,UAAU,qBAAxC,UACE,qBAAIA,UAAU,OAAd,mBACA,eAAC,GAAD,CACE1B,KAAK,QACLgJ,MAAOhN,EAAKE,MACZyO,eAAgBA,EAChBC,MAAM,wKACNhN,MAAO6O,EAAOvQ,QAEhB,eAAC,GAAD,CACE8D,KAAK,WACLgJ,MAAOhN,EAAKG,SACZwO,eAAgBA,EAChBC,MAAM,qGACN7H,KAAK,WACLnF,MAAO6O,EAAOtQ,WAGhB,eAAC,GAAD,CACE6D,KAAK,SACLgJ,MAAOhN,EAAK+V,OACZpH,eAAgBA,EAHlB,4HAOA,yBACE5H,KAAK,SACLrB,UAAU,sCACVkK,UAAWsC,EAHb,wBCwDSqE,OA7Hf,WACE,MAAwBpJ,mBAAS,CAC/BjN,MAAO,GACP8D,KAAM,GACN7D,SAAU,GACVoK,WAAY,GACZ8H,IAAK,OACLjK,UAAW,GACXmI,SAAS,IAPX,oBAAOvQ,EAAP,KAAauR,EAAb,KASMnM,EAAWU,cACjB,EAA4BqH,mBAAS,IAArC,oBAAOsD,EAAP,KAAea,EAAf,KAGMkF,EADYxQ,a3C0Bc,SAAC7B,GACjC,OAAOA,EAAMiE,UAAU1E,Y2C1BQtB,KAAI,SAACuP,GAAD,MAAW,CAC5C3E,MAAO2E,EAAK1P,IACZ2M,MAAO+C,EAAK3N,SAERwG,EAAcxE,anCmBkB,SAAC7B,GACvC,OAAOA,EAAMqG,YAAY9G,YmClBnBiL,EAAiB,SAACJ,GACtBgD,GAAQ,SAACvB,GAAD,mBAAC,eAAeA,GAAhB,mBAAuBzB,EAAOvK,KAAOuK,EAAOvB,YAgBhD0D,EAAW,WACf,IAAMD,EAASD,GAAUxQ,EAAMiQ,IAE/B,OADAqB,EAAUb,GAC4B,IAA/BvO,OAAOC,KAAKsO,GAAQ1C,QAG7B9H,qBAAU,WACRyK,MACC,CAAC1Q,IAEJ,IAAMkS,EAAyC,IAA/BhQ,OAAOC,KAAKsO,GAAQ1C,OAEpC,OACE,wBACEqE,SA5BiB,SAACL,GAGpB,GAFAA,EAAEC,iBACctB,IAChB,CAGA,InDiFmB7Q,EmDjFb4W,EAAO,2BACRzW,GADQ,IAEXoI,UAAWpI,EAAKoI,UAAUhG,KAAI,SAACwP,GAAD,OAAOA,EAAE5E,WAGzC5H,GnD4EmBvF,EmD5EH4W,EnD4EE,uCAAa,WAAOrR,GAAP,eAAAtF,EAAA,6DACjCsF,EAASlB,KADwB,kBAGZvE,EAAYC,SAASC,GAHT,OAGzBG,EAHyB,OAI/BjC,EAAoBC,SAASgC,GAC7BoF,EAASZ,EAAmB,CAAErG,OAAQ6B,EAAK7B,UAC3CmF,EAAQqB,KAAKtB,GANkB,kDAQ/B+B,EAASX,EAAkB,KAAMY,UARF,0DAAb,0DmD1DhBK,UAAU,sCAFZ,UAIE,qBAAIA,UAAU,OAAd,sBACA,eAAC,GAAD,CACE1B,KAAK,OACLgJ,MAAOhN,EAAKgE,KACZ2K,eAAgBA,EAChBC,MAAM,yFACNhN,MAAO6O,EAAOzM,OAEhB,eAAC,GAAD,CACEA,KAAK,QACLgJ,MAAOhN,EAAKE,MACZyO,eAAgBA,EAChBC,MAAM,wKACNhN,MAAO6O,EAAOvQ,QAEhB,eAAC,GAAD,CACE8D,KAAK,WACLgJ,MAAOhN,EAAKG,SACZwO,eAAgBA,EAChBC,MAAM,0DACN7H,KAAK,WACLnF,MAAO6O,EAAOtQ,WAEhB,eAAC,GAAD,CACEwO,eAAgBA,EAChBD,QAASlE,EACToE,MAAM,mIACN5B,MAAOhN,EAAKuK,WACZkF,cAAc,YACdzL,KAAK,aACLpC,MAAO6O,EAAOlG,aAGhB,eAAC,GAAD,CACEmE,QAAS,CACP,CAAE1K,KAAM,qBAAOgJ,MAAO,QACtB,CAAEhJ,KAAM,qBAAOgJ,MAAO,UACtB,CAAEhJ,KAAM,uCAAUgJ,MAAO,UAE3BA,MAAOhN,EAAKqS,IACZ1D,eAAgBA,EAChB3K,KAAK,QAGP,eAAC,GAAD,CACEA,KAAK,YACL0K,QAAS8H,EACT7H,eAAgBA,EAChBC,MAAM,sGAGR,eAAC,GAAD,CACE5K,KAAK,UACLgJ,MAAOhN,EAAKuQ,QACZ5B,eAAgBA,EAChB/M,MAAO6O,EAAOF,QAJhB,2MASA,yBACExJ,KAAK,SACLrB,UAAU,sCACVkK,UAAWsC,EAHb,wBClFSwE,GAxCD,WACZ,IAAQ3P,EAASsO,cAATtO,KACR,EAAgCoG,mBAAkB,aAATpG,EAAsBA,EAAO,SAAtE,oBAAO4P,EAAP,KAAiBC,EAAjB,KACMC,EAAiB,WACrBD,GAAY,SAAC5G,GAAD,MAAoB,aAATA,EAAsB,QAAU,eAGzD,OACE,sBAAKtK,UAAU,iBAAf,SACE,sBAAKA,UAAU,OAAf,SACE,uBAAKA,UAAU,mCAAf,UACgB,aAAbiR,GACC,uCACE,eAAC,GAAD,IACA,6CACc,IACZ,oBAAGhR,KAAK,SAASD,UAAU,UAAUsB,QAAS6P,EAA9C,2BAOQ,aAAbF,GACC,uCACE,eAAC,GAAD,IACA,uDACwB,IACtB,oBAAGhR,KAAK,SAASD,UAAU,UAAUsB,QAAS6P,EAA9C,mCClBDC,GAfF,WACX,OACE,uBAAKpR,UAAU,iBAAf,UACE,0DAEA,4DACA,kHAIA,8D,oCC8BSqR,OAjCf,YAAsE,IAAjCC,EAAgC,EAA3CpN,UAAsB/D,EAAqB,EAArBA,SAAaoR,EAAQ,mBAC7DrT,EAAaoC,atD0JkB,SAAC7B,GACtC,OAAOA,EAAMoB,MAAM3B,csD1JnB,OACE,eAAC,IAAD,2BACMqT,GADN,IAEEC,OAAQ,SAAC/Q,GACP,OAAKvC,EAYEoT,EAAY,eAACA,EAAD,eAAe7Q,IAAYN,EAV1C,eAAC,IAAD,CACEgE,GAAI,CACFqL,SAAU/R,EACVgB,MAAO,CACLgS,KAAMhQ,EAAM+P,kBCPfiB,OARf,WACE,IAAM/R,EAAWU,cAIjB,OAHAG,qBAAU,WACRb,GvD2IwB,SAACA,GAC3BrH,EAAoBgB,iBACpBqG,EAASR,KACTtB,EAAQqB,KAAKzB,QuD7IV,IACI,eAAC,GAAD,KC4BMkU,GA1BG,SAAC,GAAkB,IAAhBvR,EAAe,EAAfA,SACbT,EAAWU,cACXlC,EAAaoC,axDqJkB,SAAC7B,GACtC,OAAOA,EAAMoB,MAAM3B,cwDrJbyT,EAAoBrR,axD6Je,SAAC7B,GAC1C,OAAOA,EAAMoB,MAAM5B,awDpJnB,OARAsC,qBAAU,WACRb,EAAS8C,MACT9C,ExCiB2B,uCAAM,WAAOA,EAAU+C,GAAjB,mBAAArI,EAAA,yDAC3B+H,EAAcM,IAAWqC,YAAzB3C,WACJH,GAAWG,GAFoB,wBAGjCzC,EAAS6E,MAHwB,kBAMLqN,GAAoB7U,MANf,gBAMvBT,EANuB,EAMvBA,QACRoD,EAAS+E,GAAoBnI,IAPE,kDAS/BoD,EAAS8E,GAAyB,KAAM7E,UATT,0DAAN,yDwChBvBzB,GACFwB,EAASD,OAEV,CAACvB,IAEAyT,EACK,eAAC,GAAD,IAEFxR,GCgBM0R,GAvBH,WACV,OACE,gBAAC,GAAD,WACE,eAAC,GAAD,IACA,sBAAK7R,UAAU,YAAf,SACE,gBAAC,IAAD,WACE,eAAC,GAAD,CACE8R,KAAMnU,qBACNuG,UAAWwL,KAGb,eAAC,IAAD,CAAOoC,KAAMrU,gBAAyByG,UAAW8M,KACjD,eAAC,IAAD,CAAOc,KAAMpU,EAAcwG,UAAWuN,KACtC,eAAC,IAAD,CAAOK,KAAMtU,EAAYuU,OAAK,EAAC7N,UAAWkN,KAC1C,eAAC,IAAD,CAAUjN,GAAI3G,SAIlB,eAAC,IAAD,Q,SCjCAwU,GAAcC,aAAgB,CAClCvP,UAAWH,GACXuC,YAAaJ,GACb7E,MAAON,EACPoP,SAAUN,KCEZ,IAAM6D,GDEGC,YAAe,CACpB3S,QAASwS,KCDbI,IAASZ,OACP,eAAC,IAAMa,WAAP,UACE,eAAC,IAAD,CAAUH,MAAOA,GAAjB,SACE,eAAC,IAAD,CAAQtU,QAASA,EAAjB,SACE,eAAC,GAAD,UAIN0U,SAASC,eAAe,SAG1B/a,M","file":"static/js/main.a6c7a147.chunk.js","sourcesContent":["const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry)\n      getFID(onPerfEntry)\n      getFCP(onPerfEntry)\n      getLCP(onPerfEntry)\n      getTTFB(onPerfEntry)\n    })\n  }\n}\n\nexport default reportWebVitals\n","const TOKEN_KEY = 'jwt_token'\r\nconst REFRESH_KEY = 'jwt_refresh_token'\r\nconst EXPIRES_KEY = 'jwt_expires'\r\nconst USERID_KEY = 'user-local-id'\r\n\r\nexport const setToken = ({\r\n  refreshToken,\r\n  accessToken,\r\n  userId,\r\n  expiresIn = 3600\r\n}) => {\r\n  const expiresDate = new Date().getTime() + expiresIn * 1000\r\n  localStorage.setItem(TOKEN_KEY, accessToken)\r\n  localStorage.setItem(USERID_KEY, userId)\r\n  localStorage.setItem(REFRESH_KEY, refreshToken)\r\n  localStorage.setItem(EXPIRES_KEY, expiresDate)\r\n}\r\n\r\nexport const getAccessToken = () => {\r\n  return localStorage.getItem(TOKEN_KEY)\r\n}\r\nexport const getRefreshToken = () => {\r\n  return localStorage.getItem(REFRESH_KEY)\r\n}\r\nexport const getExpiresIn = () => {\r\n  return localStorage.getItem(EXPIRES_KEY)\r\n}\r\nexport const getUserId = () => {\r\n  return localStorage.getItem(USERID_KEY)\r\n}\r\nexport const removeAuthData = () => {\r\n  localStorage.removeItem(USERID_KEY)\r\n  localStorage.removeItem(EXPIRES_KEY)\r\n  localStorage.removeItem(TOKEN_KEY)\r\n  localStorage.removeItem(REFRESH_KEY)\r\n}\r\n\r\nconst localStorageService = {\r\n  setToken,\r\n  getAccessToken,\r\n  getRefreshToken,\r\n  getExpiresIn,\r\n  getUserId,\r\n  removeAuthData\r\n}\r\nexport default localStorageService\r\n","import axios from 'axios'\r\nimport localStorageService from './localStorage.service'\r\nimport config from '../config.json'\r\n\r\nconst httpAuth = axios.create({\r\n  baseURL: config.apiEndPoint + '/auth',\r\n  params: {\r\n    key: process.env.REACT_APP_FIREBASE_KEY\r\n  }\r\n})\r\n\r\nconst authService = {\r\n  register: async (payload) => {\r\n    const { data } = await httpAuth.post('/signUp', {\r\n      ...payload\r\n    })\r\n    return data\r\n  },\r\n  login: async ({ email, password }) => {\r\n    const { data } = await httpAuth.post('/signInWithPassword', {\r\n      email,\r\n      password,\r\n      returnSecureToken: true\r\n    })\r\n    return data\r\n  },\r\n  refresh: async () => {\r\n    const { data } = await httpAuth.post('/token', {\r\n      grant_type: 'refresh_token',\r\n      refresh_token: localStorageService.getRefreshToken()\r\n    })\r\n    return data\r\n  }\r\n}\r\nexport default authService\r\n","import axios from 'axios'\r\nimport { toast } from 'react-toastify'\r\nimport configFile from '../config.json'\r\nimport authService from './auth.service'\r\nimport localStorageService from './localStorage.service'\r\nconst http = axios.create({\r\n  baseURL: configFile.apiEndPoint\r\n})\r\nhttp.interceptors.request.use(\r\n  async function (config) {\r\n    const expiresDate = localStorageService.getExpiresIn()\r\n    const refreshToken = localStorageService.getRefreshToken()\r\n    const isExpired = refreshToken && expiresDate < Date.now()\r\n\r\n    if (configFile.isFireBase) {\r\n      const containSlash = /\\/$/gi.test(config.url)\r\n      config.url =\r\n        (containSlash ? config.url.slice(0, -1) : config.url) + '.json'\r\n\r\n      if (isExpired) {\r\n        const data = await authService.refresh()\r\n        localStorageService.setToken({\r\n          refreshToken: data.refresh_token,\r\n          idToken: data.id_token,\r\n          localId: data.user_id,\r\n          expiresIn: data.expires_in\r\n        })\r\n      }\r\n      const accessToken = localStorageService.getAccessToken()\r\n      if (accessToken) {\r\n        config.params = { ...config.params, auth: accessToken }\r\n      }\r\n    } else {\r\n      if (isExpired) {\r\n        const data = await authService.refresh()\r\n        localStorageService.setToken(data)\r\n      }\r\n      const accessToken = localStorageService.getAccessToken()\r\n      if (accessToken) {\r\n        config.headers = {\r\n          ...config.headers,\r\n          Authorization: `Bearer ${accessToken}`\r\n        }\r\n      }\r\n    }\r\n    return config\r\n  },\r\n  function (error) {\r\n    return Promise.reject(error)\r\n  }\r\n)\r\nfunction transformData(data) {\r\n  return data && !data._id\r\n    ? Object.keys(data).map((key) => ({ ...data[key] }))\r\n    : data\r\n}\r\nhttp.interceptors.response.use(\r\n  (response) => {\r\n    if (configFile.isFireBase) {\r\n      response.data = { content: transformData(response.data) }\r\n    }\r\n    response.data = { content: response.data }\r\n    return response\r\n  },\r\n  function (error) {\r\n    const expectedError =\r\n      error.response &&\r\n      error.response.status >= 400 &&\r\n      error.response.status < 500\r\n\r\n    if (!expectedError) {\r\n      toast.info('Something went wrong. Please try again later')\r\n    }\r\n    return Promise.reject(error)\r\n  }\r\n)\r\nconst httpServise = {\r\n  get: http.get,\r\n  post: http.post,\r\n  put: http.put,\r\n  delete: http.delete,\r\n  patch: http.patch\r\n}\r\nexport default httpServise\r\n","import httpService from './http.service'\r\nimport localStorageService from './localStorage.service'\r\n\r\nconst userEndpoint = 'user/'\r\n\r\nconst userService = {\r\n  get: async () => {\r\n    const { data } = await httpService.get(userEndpoint)\r\n    return data\r\n  },\r\n  create: async (payload) => {\r\n    const { data } = await httpService.put(userEndpoint + payload._id, payload)\r\n    return data\r\n  },\r\n  getCurrentUser: async () => {\r\n    const { data } = await httpService.get(\r\n      userEndpoint + localStorageService.getUserId()\r\n    )\r\n    return data\r\n  },\r\n  updateUser: async (payload) => {\r\n    const { data } = await httpService.patch(\r\n      userEndpoint + localStorageService.getUserId(),\r\n      {\r\n        ...payload\r\n      }\r\n    )\r\n    return data\r\n  }\r\n}\r\n\r\nexport default userService\r\n","export const MAIN_ROUTE = '/'\nexport const LOGIN_ROUTE = '/login'\nexport const NEW_USER_ROUTE = '/new_user'\nexport const NEW_USER_EDIT_ROUTE = '/new_user/edit'\nexport const LOGOUT_ROUTE = '/logout'\nexport const USERS_ROUTE = '/users'\n","import { createBrowserHistory } from 'history'\r\nconst history = createBrowserHistory()\r\nexport default history\r\n","export default function generateAuthError(error) {\r\n  switch (error) {\r\n    case 'INVALID_PASSWORD':\r\n      return 'Email and password are incorrect'\r\n\r\n    case 'EMAIL_NOT_FOUND':\r\n      return 'Email and password are incorrect'\r\n\r\n    case 'EMAIL_EXISTS':\r\n      return 'Email already exists'\r\n\r\n    default:\r\n      return 'To many attempts'\r\n  }\r\n}\r\n","import { createSlice } from '@reduxjs/toolkit'\r\nimport authService from '../services/auth.service'\r\nimport localStorageService from '../services/localStorage.service'\r\nimport userService from '../services/user.service'\r\nimport { MAIN_ROUTE, USERS_ROUTE } from '../utilits/constants'\r\nimport history from '../utilits/history'\r\nimport generateAuthError from '../utilits/generateAuthError'\r\n\r\nconst initialState = localStorageService.getAccessToken()\r\n  ? {\r\n      entities: null,\r\n      isLoading: true,\r\n      error: null,\r\n      auth: { userId: localStorageService.getUserId() },\r\n      isLoggedIn: true,\r\n      dataLoaded: false\r\n    }\r\n  : {\r\n      entities: null,\r\n      isLoading: false,\r\n      error: null,\r\n      auth: null,\r\n      isLoggedIn: false,\r\n      dataLoaded: false\r\n    }\r\nconst usersSlice = createSlice({\r\n  name: 'users',\r\n  initialState,\r\n  reducers: {\r\n    usersRequested(state) {\r\n      state.isLoading = true\r\n    },\r\n    usersRecieved(state, action) {\r\n      state.entities = action.payload\r\n      state.dataLoaded = true\r\n      state.isLoading = false\r\n    },\r\n    userRequestFailed(state, action) {\r\n      state.error = action.payload\r\n      state.isLoading = false\r\n    },\r\n    authRequested(state) {\r\n      state.error = null\r\n    },\r\n    authRequestSuccess(state, action) {\r\n      state.auth = { ...action.payload }\r\n      state.isLoggedIn = true\r\n      state.isLoading = false\r\n    },\r\n    authRequestFailed(state, action) {\r\n      state.error = action.payload\r\n      state.isLoading = false\r\n    },\r\n    userCreated(state, action) {\r\n      state.entities.push(action.payload)\r\n    },\r\n    userLoggedOut(state) {\r\n      state.entities = null\r\n      state.isLoggedIn = false\r\n      state.auth = null\r\n      state.dataLoaded = false\r\n    },\r\n    updateUserRequested(state) {\r\n      state.isLoading = true\r\n    },\r\n    userUpdatedSuccess(state, action) {\r\n      state.entities = state.entities.map((user) => {\r\n        if (user._id === action.payload._id) {\r\n          return (user = { ...action.payload })\r\n        }\r\n        return user\r\n      })\r\n\r\n      state.isLoading = false\r\n    }\r\n  }\r\n})\r\n\r\nconst { actions, reducer: userReducer } = usersSlice\r\nconst {\r\n  usersRequested,\r\n  usersRecieved,\r\n  userRequestFailed,\r\n  authRequestSuccess,\r\n  authRequestFailed,\r\n  userLoggedOut,\r\n  updateUserRequested,\r\n  userUpdatedSuccess,\r\n  authRequested\r\n} = actions\r\n\r\n/* Functions to dispatch changes to state */\r\n\r\nexport const loadUsersList = () => async (dispatch) => {\r\n  dispatch(usersRequested())\r\n  try {\r\n    const { content } = await userService.get()\r\n    dispatch(usersRecieved(content))\r\n  } catch (error) {\r\n    dispatch(userRequestFailed(error.message))\r\n  }\r\n}\r\n\r\nexport const logIn =\r\n  ({ data, redirect }) =>\r\n  async (dispatch) => {\r\n    const { email, password } = data\r\n    dispatch(authRequested())\r\n    try {\r\n      const data = await authService.login({ email, password })\r\n      localStorageService.setToken(data)\r\n      dispatch(authRequestSuccess({ userId: data.userId }))\r\n      history.push(redirect)\r\n    } catch (error) {\r\n      const { code, message } = error.response.data.error\r\n      if (code === 400) {\r\n        const errorMessage = generateAuthError(message)\r\n        dispatch(authRequestFailed(errorMessage))\r\n      } else {\r\n        dispatch(authRequestFailed(error.message))\r\n      }\r\n    }\r\n  }\r\n\r\nexport const signUp = (payload) => async (dispatch) => {\r\n  dispatch(usersRequested())\r\n  try {\r\n    const data = await authService.register(payload)\r\n    localStorageService.setToken(data)\r\n    dispatch(authRequestSuccess({ userId: data.userId }))\r\n    history.push(USERS_ROUTE)\r\n  } catch (error) {\r\n    dispatch(authRequestFailed(error.message))\r\n  }\r\n}\r\n\r\nexport const updateUser = (payload) => async (dispatch) => {\r\n  dispatch(updateUserRequested())\r\n  try {\r\n    const { content } = await userService.updateUser(payload)\r\n\r\n    dispatch(userUpdatedSuccess(content))\r\n  } catch (error) {\r\n    dispatch(authRequestFailed(error.message))\r\n  }\r\n}\r\n\r\nexport const logOut = () => (dispatch) => {\r\n  localStorageService.removeAuthData()\r\n  dispatch(userLoggedOut())\r\n  history.push(MAIN_ROUTE)\r\n}\r\n\r\n/* Selectors to return curent state */\r\n\r\nexport const getUsersList = () => (state) => {\r\n  return state.users.entities\r\n}\r\nexport const getUserById = (userId) => (state) => {\r\n  if (state.users.entities) {\r\n    return state.users.entities.find((user) => user._id === userId)\r\n  }\r\n}\r\nexport const getUserIsLoggedIn = () => (state) => {\r\n  return state.users.isLoggedIn\r\n}\r\nexport const getDataStatus = () => (state) => {\r\n  return state.users.dataLoaded\r\n}\r\nexport const getCurrentUserId = () => (state) => {\r\n  return state.users.auth.userId\r\n}\r\nexport const getUsersLoadingStatus = () => (state) => {\r\n  return state.users.isLoading\r\n}\r\nexport const getCurrentUserData = () => (state) => {\r\n  if (state.users.entities) {\r\n    return state.users.entities.find(\r\n      (user) => user._id === state.users.auth.userId\r\n    )\r\n  }\r\n  return null\r\n}\r\nexport const getAuthError = () => (state) => state.users.error\r\nexport default userReducer\r\n","import React from 'react'\nconst Loader = () => {\n  return (\n    <div className=\"d-flex vh-100 align-items-center justify-content-center\">\n      <div className=\"spinner-border text-primary\" role=\"status\">\n        <span className=\"visually-hidden\">Loading...</span>\n      </div>\n    </div>\n  )\n}\n\nexport default Loader\n","import React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { getDataStatus, loadUsersList } from '../../../store/users'\r\nimport Loader from '../loader'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst UsersLoader = ({ children }) => {\r\n  const dispatch = useDispatch()\r\n  const dataStatus = useSelector(getDataStatus())\r\n  useEffect(() => {\r\n    if (!dataStatus) {\r\n      dispatch(loadUsersList())\r\n    }\r\n  }, [])\r\n\r\n  if (!dataStatus) {\r\n    return <Loader />\r\n  }\r\n  return children\r\n}\r\nUsersLoader.propTypes = {\r\n  children: PropTypes.oneOfType([\r\n    PropTypes.arrayOf(PropTypes.node),\r\n    PropTypes.node\r\n  ])\r\n}\r\n\r\nexport default UsersLoader\r\n","import React from 'react'\nimport _ from 'lodash'\nimport PropTypes from 'prop-types'\n\nconst Pagination = (props) => {\n  const { pageSize, itemsCount, onPageChange, currentPage } = props\n  const pageCount = Math.ceil(itemsCount / pageSize)\n  const pages = _.range(1, pageCount + 1)\n  if (pageCount === 1) return null\n  return (\n    <nav\n      aria-label=\"Page navigation example\"\n      className=\"d-flex justify-content-center w-100\"\n    >\n      <ul className=\"pagination m-0\">\n        {pages.map((page) => {\n          return (\n            <li\n              className={'page-item ' + (page === currentPage ? 'active' : '')}\n              key={page}\n            >\n              <button\n                type=\"button\"\n                className=\"page-link\"\n                onClick={() => {\n                  onPageChange(page)\n                }}\n              >\n                {page}\n              </button>\n            </li>\n          )\n        })}\n      </ul>\n    </nav>\n  )\n}\nPagination.propTypes = {\n  pageSize: PropTypes.number.isRequired,\n  itemsCount: PropTypes.number.isRequired,\n  onPageChange: PropTypes.func.isRequired,\n  currentPage: PropTypes.number.isRequired\n}\nexport default Pagination\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nconst Bookmark = ({ toggleBookMarkHanble, id, status }) => {\n  return (\n    <button\n      className=\"btn btn-lg  \"\n      onClick={() => {\n        toggleBookMarkHanble(id)\n      }}\n    >\n      {<i className={status ? 'bi bi-bookmark-fill' : 'bi bi-bookmark'}></i>}\n    </button>\n  )\n}\nBookmark.propTypes = {\n  toggleBookMarkHanble: PropTypes.func.isRequired,\n  id: PropTypes.string.isRequired,\n  status: PropTypes.bool\n}\nexport default Bookmark\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nconst Quality = ({ name, color }) => {\n  return (\n    <span\n      style={{ margin: '3px 3px', fontSize: '14px' }}\n      className={`badge bg-${color}`}\n    >\n      {name}\n    </span>\n  )\n}\nQuality.propTypes = {\n  _id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  color: PropTypes.string.isRequired\n}\nexport default Quality\n","import httpService from './http.service'\r\n\r\nconst qualityEndpoint = '/quality'\r\n\r\nconst qualityService = {\r\n  get: async () => {\r\n    const { data } = await httpService.get(qualityEndpoint)\r\n    return data\r\n  }\r\n}\r\nexport default qualityService\r\n","export const isOutDated = (date) => {\r\n  if (Date.now() - date > 10 * 60 * 1000) {\r\n    return true\r\n  }\r\n  return false\r\n}\r\n","import { createSlice } from '@reduxjs/toolkit'\r\nimport qualityService from '../services/quality.service'\r\nimport { isOutDated } from '../utilits/isOutDated'\r\n\r\nconst initialState = {\r\n  entities: null,\r\n  isLoading: true,\r\n  error: null,\r\n  lastFetch: null\r\n}\r\n\r\n/* Slice Reducer */\r\n\r\nconst qualitiesSlice = createSlice({\r\n  name: 'qualities',\r\n  initialState,\r\n  reducers: {\r\n    qualitiesRequested(state) {\r\n      state.isLoading = true\r\n    },\r\n    qualitiesRecieved(state, action) {\r\n      state.entities = action.payload\r\n      state.lastFetch = Date.now()\r\n      state.isLoading = false\r\n    },\r\n    qualitiesRequestFailure(state, action) {\r\n      state.isLoading = false\r\n    }\r\n  }\r\n})\r\n\r\nconst { actions, reducer: qualitiesReducer } = qualitiesSlice\r\n\r\nconst { qualitiesRequested, qualitiesRecieved, qualitiesRequestFailure } =\r\n  actions\r\n\r\n/* Functions to dispatch changes to state */\r\n\r\nexport const loadQualitiesList = () => async (dispatch, getState) => {\r\n  const { lastFetch } = getState().qualities\r\n  if (isOutDated(lastFetch)) {\r\n    dispatch(qualitiesRequested())\r\n    try {\r\n      const { content } = await qualityService.get()\r\n      dispatch(qualitiesRecieved(content))\r\n    } catch (error) {\r\n      dispatch(qualitiesRequestFailure(error.message))\r\n    }\r\n  }\r\n}\r\n\r\n/* Selectors to get current state instance */\r\n\r\nexport const getQualities = () => (state) => {\r\n  return state.qualities.entities\r\n}\r\nexport const getQualitiesLoadingStatus = () => (state) =>\r\n  state.qualities.isLoading\r\n\r\nexport const getQualitiesById = (qualities) => (state) => {\r\n  if (state.qualities.entities) {\r\n    return state.qualities.entities.filter((x) => qualities.includes(x._id))\r\n  }\r\n  return []\r\n}\r\n\r\nexport default qualitiesReducer\r\n","import React, { useEffect } from 'react'\nimport Quality from './quality'\nimport PropTypes from 'prop-types'\nimport { useDispatch, useSelector } from 'react-redux'\nimport {\n  getQualitiesById,\n  getQualitiesLoadingStatus,\n  loadQualitiesList\n} from '../../../store/qualities'\nimport Loader from '../loader'\n\nconst QualityList = ({ qualities: qualitiesArr }) => {\n  const dispatch = useDispatch()\n  const isLoading = useSelector(getQualitiesLoadingStatus())\n  const qualitiesById = useSelector(getQualitiesById(qualitiesArr))\n\n  useEffect(() => {\n    dispatch(loadQualitiesList())\n  }, [])\n\n  if (isLoading) {\n    return <Loader />\n  }\n  return (\n    <>\n      {qualitiesById.map((quality) => {\n        return <Quality key={quality._id} {...quality} />\n      })}\n    </>\n  )\n}\nQualityList.propTypes = {\n  qualities: PropTypes.array\n}\nexport default React.memo(QualityList)\n","import QualityList from './qualityList'\n\nexport default QualityList\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nconst TableHeader = ({ currentSort, setSortBy, columns }) => {\n  const handleSort = (name) => {\n    if (currentSort.iter === name) {\n      setSortBy({\n        ...currentSort,\n        order: currentSort.order === 'asc' ? 'desc' : 'asc'\n      })\n    } else {\n      setSortBy({ iter: name, order: 'asc' })\n    }\n  }\n\n  const renderSortArrow = (currentSort, currentPath) => {\n    if (currentSort.iter === currentPath) {\n      if (currentSort.order === 'asc') {\n        return <i className=\"bi bi-caret-down-fill\"></i>\n      }\n      return <i className=\"bi bi-caret-up-fill\"></i>\n    }\n    return null\n  }\n\n  return (\n    <thead className=\"border-bottom border-dark\">\n      <tr>\n        {Object.keys(columns).map((column) => (\n          <th\n            onClick={\n              columns[column].iter\n                ? () => handleSort(columns[column].iter)\n                : undefined\n            }\n            {...{ role: columns[column].iter && 'button' }}\n            scope=\"col\"\n            className=\"text-start align-middle \"\n            key={column}\n          >\n            <div className=\"justify-content-center d-flex\">\n              {columns[column].name}{' '}\n              {renderSortArrow(currentSort, columns[column].iter)}\n            </div>\n          </th>\n        ))}\n      </tr>\n    </thead>\n  )\n}\nTableHeader.propTypes = {\n  handleSort: PropTypes.func,\n  currentSort: PropTypes.object,\n  setSortBy: PropTypes.func,\n  columns: PropTypes.object\n}\nexport default TableHeader\n","import React from 'react'\nimport { PropTypes } from 'prop-types'\nimport _ from 'lodash'\nimport { Link } from 'react-router-dom'\nimport { USERS_ROUTE } from '../../../utilits/constants'\n\nconst TableBody = ({ users, columns }) => {\n  const renderContent = (item, column) => {\n    if (columns[column].component) {\n      const component = columns[column].component\n      if (typeof component === 'function') {\n        return component(item)\n      }\n      return component\n    }\n    if (columns[column].iter === 'name') {\n      return <Link to={`${USERS_ROUTE}/${item._id}`}>{item.name}</Link>\n    }\n    return _.get(item, columns[column].iter)\n  }\n\n  return (\n    <>\n      <tbody>\n        {users.map((item) => (\n          <tr key={item._id}>\n            {Object.keys(columns).map((column) => (\n              <td key={column}>{renderContent(item, column)}</td>\n            ))}\n          </tr>\n        ))}\n      </tbody>\n    </>\n  )\n}\nTableBody.propTypes = {\n  users: PropTypes.array,\n  columns: PropTypes.object\n}\nexport default TableBody\n","import Table from './table'\nimport TableBody from './tableBody'\nimport TableHeader from './tableHeader'\n\nexport { TableBody, TableHeader }\nexport default Table\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport TableHeader from './tableHeader'\nimport TableBody from './tableBody'\n\nconst Table = ({ users, currentSort, setSortBy, columns, children }) => {\n  return (\n    <table className=\"table\">\n      {children || (\n        <>\n          <TableHeader\n            currentSort={currentSort}\n            setSortBy={setSortBy}\n            columns={columns}\n          />\n          <TableBody {...{ columns, users }} />\n        </>\n      )}\n    </table>\n  )\n}\nTable.propTypes = {\n  children: PropTypes.array,\n  users: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n  currentSort: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n  setSortBy: PropTypes.func,\n  columns: PropTypes.object\n}\nexport default Table\n","import httpService from './http.service'\r\n\r\nconst professionEndpoint = 'profession/'\r\n\r\nconst professionService = {\r\n  get: async () => {\r\n    const { data } = await httpService.get(professionEndpoint)\r\n    return data\r\n  }\r\n}\r\n\r\nexport default professionService\r\n","import { createSlice } from '@reduxjs/toolkit'\r\nimport { isOutDated } from '../utilits/isOutDated'\r\nimport professionsServices from '../services/profession.service'\r\n\r\nconst initialState = {\r\n  entities: null,\r\n  isLoading: true,\r\n  error: null,\r\n  lastFetch: null\r\n}\r\n\r\nconst professionSlice = createSlice({\r\n  name: 'professions',\r\n  initialState,\r\n  reducers: {\r\n    professionsRequested(state) {\r\n      state.isLoading = true\r\n    },\r\n    professionsRequestFailed(state, action) {\r\n      state.error = action.payload\r\n      state.isLoading = false\r\n    },\r\n    professionsRecieved(state, action) {\r\n      state.entities = action.payload\r\n      state.lastFetch = Date.now()\r\n      state.isLoading = false\r\n    }\r\n  }\r\n})\r\n\r\nconst { actions, reducer: professionsReducer } = professionSlice\r\nconst { professionsRequested, professionsRequestFailed, professionsRecieved } =\r\n  actions\r\n\r\n/* Functions to dispatch changes to state */\r\n\r\nexport const loadProfessions = () => async (dispatch, getState) => {\r\n  const { lastFetch } = getState().professions\r\n  if (isOutDated(lastFetch)) {\r\n    dispatch(professionsRequested())\r\n\r\n    try {\r\n      const { content } = await professionsServices.get()\r\n      dispatch(professionsRecieved(content))\r\n    } catch (error) {\r\n      dispatch(professionsRequestFailed(error.message))\r\n    }\r\n  }\r\n}\r\n\r\n/* Selectors to get current status */\r\nexport const getProfessionsList = () => (state) => {\r\n  return state.professions.entities\r\n}\r\nexport const getProfessionsLoadingStatus = () => (state) => {\r\n  return state.professions.isLoading\r\n}\r\nexport const getProfessionsById = (profId) => (state) => {\r\n  if (state.professions.entities) {\r\n    return state.professions.entities.find((prof) => prof._id === profId)\r\n  }\r\n}\r\n\r\nexport default professionsReducer\r\n","import PropTypes from 'prop-types'\r\nimport React from 'react'\r\nimport { getProfessionsById } from '../../store/professions'\r\nimport { useSelector } from 'react-redux'\r\n\r\nfunction Profession({ id }) {\r\n  const profession = useSelector(getProfessionsById(id))\r\n\r\n  return <div>{profession && profession.name}</div>\r\n}\r\nProfession.propTypes = {\r\n  id: PropTypes.string\r\n}\r\nexport default Profession\r\n","import React from 'react'\nimport { PropTypes } from 'prop-types'\n\nimport Bookmark from '../common/Bookmark'\nimport QualityList from './qualities'\nimport Table, { TableHeader, TableBody } from '../../components/common/table'\nimport Profession from '../ui/profession'\n\nconst UsersTable = ({\n  users,\n  currentSort,\n  setSortBy,\n  toggleBookMarkHanble,\n  ...rest\n}) => {\n  const columns = {\n    name: { iter: 'name', name: 'Имя' },\n    qualities: {\n      name: 'Качество',\n      component: (user) => <QualityList qualities={user.qualities} />\n    },\n    professions: {\n      iter: 'profession',\n      name: 'Профессия',\n      component: (user) => <Profession id={user.profession} />\n    },\n    completedMeetings: {\n      iter: 'completedMeetings',\n      name: 'Встретился раз'\n    },\n    rate: { iter: 'rate', name: 'Оценка' },\n    bookmark: {\n      iter: 'status',\n      name: 'Избранное',\n      component: (user) => (\n        <Bookmark\n          toggleBookMarkHanble={toggleBookMarkHanble}\n          id={user._id}\n          status={user.status}\n        />\n      )\n    }\n    // delete: {\n    //   component: (user) => (\n    //     <button\n    //       className=\"btn btn-danger\"\n    //       onClick={() => {\n    //         deleteUserHandler(user._id)\n    //       }}\n    //     >\n    //       Delete\n    //     </button>\n    //   )\n    // }\n  }\n  return (\n    <Table\n      currentSort={currentSort}\n      setSortBy={setSortBy}\n      columns={columns}\n      users={users}\n    >\n      <TableHeader\n        currentSort={currentSort}\n        setSortBy={setSortBy}\n        columns={columns}\n      />\n      <TableBody {...{ columns, users }} />\n    </Table>\n  )\n}\n\nexport default UsersTable\nUsersTable.propTypes = {\n  users: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n  toggleBookMarkHanble: PropTypes.func,\n  currentSort: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n  setSortBy: PropTypes.func\n}\n","export const renderPhrase = (numbers) => {\r\n  let text = ''\r\n\r\n  const lastNumber = Number(numbers.toString().split('').slice(-1))\r\n  if (numbers === 0) return (text = 'Нет никого с кем можно тусануть')\r\n  if (numbers === 1) return `${numbers} человек тусанeт с тобой`\r\n  if (numbers > 1 && numbers < 5) {\r\n    return (text = `${numbers} человека тусанут с тобой`)\r\n  }\r\n\r\n  if (numbers > 14 && [2, 3, 4].includes(lastNumber)) {\r\n    return (text = `${numbers} человека тусанут с тобой`)\r\n  }\r\n  if (numbers > 14 && [1].includes(lastNumber)) {\r\n    return (text = `${numbers} человек тусанeт с тобой`)\r\n  }\r\n\r\n  text = `${numbers} человек тусанyт с тобой`\r\n  return text\r\n}\r\n\r\nexport const spanClass = (lenght) => {\r\n  let text = ''\r\n  lenght === 0 ? (text = 'badge bg-danger') : (text = 'badge bg-primary')\r\n\r\n  return text\r\n}\r\nexport const renderYears = (date) => {\r\n  let text = ''\r\n  const tadayYear = new Date().getFullYear()\r\n  const yearFromUserDate = Number(date.split('-')[0])\r\n\r\n  const difference = tadayYear - yearFromUserDate\r\n  const lastNumber = difference.toString().slice(-1)\r\n  switch (lastNumber) {\r\n    case '1':\r\n      text = 'год'\r\n      break\r\n    case '2':\r\n      text = 'года'\r\n      break\r\n    case '3':\r\n      text = 'года'\r\n      break\r\n    case '4':\r\n      text = 'года'\r\n      break\r\n    case '5':\r\n      text = 'лет'\r\n      break\r\n\r\n    default:\r\n      text = difference > 10 ? 'лет' : 'год'\r\n      break\r\n  }\r\n\r\n  return `(${difference} ${text}) `\r\n}\r\n\r\nexport const getCommentTime = (timeStamp) => {\r\n  const date = new Date(timeStamp)\r\n  const dateNow = new Date()\r\n  const yearDif = dateNow.getFullYear() - date.getFullYear()\r\n\r\n  if (yearDif === 0) {\r\n    const dayDif = dateNow.getDay() - date.getDay()\r\n    if (dayDif === 0) {\r\n      const hourDif = dateNow.getHours() - date.getHours()\r\n      if (hourDif === 0) {\r\n        const minDif = dateNow.getMinutes() - date.getMinutes()\r\n        if (minDif >= 0 && minDif < 5) return '1 минуту назад'\r\n        if (minDif >= 5 && minDif < 10) return '5 минут назад'\r\n        if (minDif >= 10 && minDif < 30) return '10 минут назад'\r\n        return '30 минут назад'\r\n      }\r\n      return `${date.getHours()} : ${date.getMinutes()}`\r\n    }\r\n    return `${date.getDay()} ${date.toLocaleString('default', {\r\n      month: 'long'\r\n    })}`\r\n  }\r\n\r\n  return date.getFullYear() + '.' + (date.getMonth() + 1) + '_' + date.getDate()\r\n}\r\n","import React from 'react'\nimport { renderPhrase, spanClass } from '../../utilits/helpers'\nimport PropTypes from 'prop-types'\n\nconst SearchStatus = ({ userLength }) => {\n  return (\n    <div className=\"d-flex justify-content-center \">\n      <span\n        style={{ fontSize: '20px', margin: '20px' }}\n        className={spanClass(userLength)}\n      >\n        {renderPhrase(userLength)}\n      </span>\n    </div>\n  )\n}\nSearchStatus.propTypes = {\n  userLength: PropTypes.number.isRequired\n}\nexport default SearchStatus\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nconst GroupList = ({\n  professions,\n  onItemSelect,\n  valueProperty,\n  contentProperty,\n  selectedProf,\n  resetProfessionsHandler\n}) => {\n  return (\n    <div className=\"d-flex flex-column flex-shrink-0\">\n      <ul className=\"list-group mt-2\">\n        {!Array.isArray(professions) &&\n          Object.keys(professions).map((key) => {\n            return (\n              <li\n                key={professions[key][valueProperty]}\n                onClick={() => {\n                  onItemSelect(professions[key])\n                }}\n                className={\n                  selectedProf === professions[key]\n                    ? 'list-group-item active'\n                    : 'list-group-item '\n                }\n                role=\"button\"\n              >\n                {professions[key][contentProperty]}\n              </li>\n            )\n          })}\n\n        {professions.map((item) => {\n          return (\n            <li\n              key={item[valueProperty]}\n              onClick={() => {\n                onItemSelect(item)\n              }}\n              className={\n                selectedProf === item\n                  ? 'list-group-item active'\n                  : 'list-group-item '\n              }\n              role=\"button\"\n            >\n              {item[contentProperty]}\n            </li>\n          )\n        })}\n      </ul>\n      <div className=\"d-flex align-items-center justify-content-center\">\n        <button\n          className=\"btn btn-outline-primary mt-2 \"\n          onClick={resetProfessionsHandler}\n        >\n          Reset\n        </button>\n      </div>\n    </div>\n  )\n}\nGroupList.defaultProps = {\n  valueProperty: '_id',\n  contentProperty: 'name'\n}\nGroupList.propTypes = {\n  professions: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n  onItemSelect: PropTypes.func,\n  valueProperty: PropTypes.string.isRequired,\n  contentProperty: PropTypes.string.isRequired,\n  selectedProf: PropTypes.object,\n  resetProfessionsHandler: PropTypes.func\n}\nexport default GroupList\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nfunction SearchBar({ searchValue, getSearchValueHandler }) {\n  return (\n    <input\n      type=\"text\"\n      className=\"form-control\"\n      placeholder=\"Search...\"\n      value={searchValue}\n      onChange={getSearchValueHandler}\n    />\n  )\n}\n\nSearchBar.propTypes = {\n  getSearchValueHandler: PropTypes.func,\n  searchValue: PropTypes.string\n}\n\nexport default SearchBar\n","import Users from './Users'\n\nexport default Users\n","import React, { useState, useEffect } from 'react'\nimport Pagination from '../../components/common/Pagination'\nimport { paginate } from '../../utilits/paginate'\nimport PropTypes from 'prop-types'\nimport UsersTable from '../../components/ui/usersTable'\nimport SearchStatus from '../../components/ui/searchStatus'\nimport GroupList from '../../components/common/groupList'\nimport _ from 'lodash'\nimport SearchBar from '../../components/SearchBar'\n\nimport Loader from '../../components/ui/loader'\nimport { useSelector } from 'react-redux'\nimport {\n  getProfessionsList,\n  getProfessionsLoadingStatus\n} from '../../store/professions'\nimport { getCurrentUserId, getUsersList } from '../../store/users'\n\nconst Users = () => {\n  const [currentPage, setCurrentPage] = useState(1)\n  const [sortBy, setSortBy] = useState({ iter: 'name', order: 'asc' })\n  const [selectedProf, setSelectedProf] = useState()\n  const [searchValue, setSearchValue] = useState('')\n\n  const getSearchValueHandler = (event) => {\n    setSelectedProf()\n    setSearchValue(event.target.value)\n  }\n\n  const users = useSelector(getUsersList())\n  const currentUserId = useSelector(getCurrentUserId())\n\n  const professions = useSelector(getProfessionsList())\n  const profLoading = useSelector(getProfessionsLoadingStatus())\n\n  useEffect(() => {\n    setCurrentPage(1)\n  }, [selectedProf])\n\n  const resetProfessionsHandler = () => {\n    setSearchValue('')\n    setSelectedProf()\n  }\n  const professionSelectHandle = (item) => {\n    setSearchValue('')\n    setSelectedProf(item)\n  }\n  const pageChangehandle = (pageIndex) => {\n    setCurrentPage(pageIndex)\n  }\n\n  const toggleBookMarkHanble = (id) => {\n    const newUsers = [...users]\n    newUsers.filter((user) => {\n      if (user._id === id) {\n        user.status = !user.status\n        return user\n      }\n      return user\n    })\n  }\n\n  const pageSize = 3\n  const filterUsers = (data) => {\n    let filteredUsers = data\n\n    if (selectedProf) {\n      filteredUsers = data.filter(\n        (user) => user.profession === selectedProf._id\n      )\n    } else if (searchValue) {\n      filteredUsers = data.filter((user) =>\n        user.name.toLowerCase().includes(searchValue.toLowerCase())\n      )\n    }\n    return filteredUsers.filter((user) => user._id !== currentUserId)\n  }\n\n  const filteredUsers = filterUsers(users)\n\n  const sortedUsers = _.orderBy(filteredUsers, [sortBy.iter], [sortBy.order])\n  const userLength = sortedUsers.length\n\n  const cporUsers = paginate(sortedUsers, currentPage, pageSize)\n\n  if (profLoading) {\n    return <Loader />\n  }\n\n  return (\n    <div className=\"container shadow mt-4\">\n      <div className=\"row mb-4\">\n        <SearchStatus userLength={userLength} />\n        <div className=\"col-md-2 mb-3\">\n          {\n            <GroupList\n              professions={professions}\n              onItemSelect={professionSelectHandle}\n              selectedProf={selectedProf}\n              resetProfessionsHandler={resetProfessionsHandler}\n            />\n          }\n        </div>\n        <div className=\"col-md-10\">\n          <SearchBar\n            searchValue={searchValue}\n            getSearchValueHandler={getSearchValueHandler}\n          />\n          <div>\n            <UsersTable\n              users={cporUsers}\n              setSortBy={setSortBy}\n              currentSort={sortBy}\n              toggleBookMarkHanble={toggleBookMarkHanble}\n            />\n            <div className=\"mb-3\">\n              <Pagination\n                itemsCount={userLength}\n                pageSize={pageSize}\n                onPageChange={pageChangehandle}\n                currentPage={currentPage}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\nUsers.propTypes = {\n  users: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n  selectedProf: PropTypes.object,\n  setCount: PropTypes.func,\n  professions: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n  professionSelectHandle: PropTypes.func,\n  resetProfessionsHandler: PropTypes.func\n}\nexport default Users\n","import _ from 'lodash'\n\nexport function paginate(items, pageNumber, pageSize) {\n  const startIndex = (pageNumber - 1) * pageSize\n  // _.slice(items, startIndex)\n  // _.take(_.slice(items, startIndex), pageSize)\n  return _(items).slice(startIndex).take(pageSize).value()\n}\n","import React from 'react'\r\nimport Select from 'react-select'\r\nimport PropTypes from 'prop-types'\r\n\r\nfunction MultiSelectField({\r\n  options,\r\n  name,\r\n  onChangeHandle,\r\n  label,\r\n  defaultValue,\r\n  error\r\n}) {\r\n  const optionsArr =\r\n    !Array.isArray(options) && typeof options === 'object'\r\n      ? Object.keys(options).map((option) => ({\r\n          value: options[option]._id,\r\n          label: options[option].name\r\n        }))\r\n      : options\r\n  const handleChange = (value) => {\r\n    onChangeHandle({ name: name, value })\r\n  }\r\n  // const defaultValueToArray =\r\n  //   defaultValue.map((item) => ({\r\n  //     value: item._id,\r\n  //     label: item.name\r\n  //   })) || []\r\n  const getInputClasses = () => {\r\n    return `${error ? 'is-invalid' : ''} `\r\n  }\r\n\r\n  return (\r\n    <div className=\"mb-4\">\r\n      <label className=\"form-label me-3\">{label}</label>\r\n      <Select\r\n        closeMenuOnSelect={true}\r\n        isMulti\r\n        name={name}\r\n        options={optionsArr}\r\n        classNamePrefix=\"select\"\r\n        onChange={handleChange}\r\n        defaultValue={defaultValue}\r\n        className={getInputClasses()}\r\n      />\r\n      {error && <div className=\"invalid-feedback\">{error}</div>}\r\n    </div>\r\n  )\r\n}\r\nMultiSelectField.propTypes = {\r\n  name: PropTypes.string,\r\n  label: PropTypes.string,\r\n  options: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\r\n  defaultValue: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\r\n  onChangeHandle: PropTypes.func,\r\n  error: PropTypes.string\r\n}\r\n\r\nexport default MultiSelectField\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nfunction RadioField({\r\n  options,\r\n  name,\r\n  onChangeHandle,\r\n  value,\r\n  label = 'Выбирите пол'\r\n}) {\r\n  const handleChange = ({ target }) => {\r\n    onChangeHandle({ name: target.name, value: target.value })\r\n  }\r\n\r\n  return (\r\n    <div className=\"mt-3 mb-3\">\r\n      <label className=\"form-label me-3\">{label}</label>\r\n      <div>\r\n        {options &&\r\n          options.map((option, i) => {\r\n            return (\r\n              <div key={i} className=\"form-check form-check-inline\">\r\n                <input\r\n                  className=\"form-check-input\"\r\n                  type=\"radio\"\r\n                  name={name}\r\n                  id={option.name + '_' + option.value}\r\n                  value={option.value}\r\n                  checked={option.value === value}\r\n                  onChange={handleChange}\r\n                />\r\n                <label\r\n                  className=\"form-check-label\"\r\n                  htmlFor={option.name + '_' + option.value}\r\n                >\r\n                  {option.name}\r\n                </label>\r\n              </div>\r\n            )\r\n          })}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nRadioField.propTypes = {\r\n  options: PropTypes.PropTypes.array,\r\n  name: PropTypes.string,\r\n  onChangeHandle: PropTypes.func,\r\n  value: PropTypes.string,\r\n  label: PropTypes.string\r\n}\r\n\r\nexport default RadioField\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport Loader from '../../ui/loader'\r\n\r\nfunction SelectField({\r\n  defaultOption,\r\n  onChangeHandle,\r\n  options,\r\n  label,\r\n  value,\r\n  error,\r\n  name,\r\n  loading\r\n}) {\r\n  const getInputClasses = () => {\r\n    return `${error ? 'form-select is-invalid' : 'form-select'} `\r\n  }\r\n  const optionsArr =\r\n    !Array.isArray(options) && typeof options === 'object'\r\n      ? Object.keys(options).map((optionName) => ({\r\n          name: optionName,\r\n          value: options[optionName]._id,\r\n          key: options[optionName]._id\r\n        }))\r\n      : options\r\n\r\n  const handleChange = ({ target }) => {\r\n    onChangeHandle({ name: target.name, value: target.value })\r\n  }\r\n  if (typeof value === 'object') {\r\n    value = value._id\r\n  }\r\n  if (loading) {\r\n    return <Loader />\r\n  }\r\n\r\n  return (\r\n    <div className=\"d-flex flex-column mt-3\">\r\n      <label htmlFor=\"validationCustom04\" className=\"form-label\">\r\n        {label}\r\n      </label>\r\n      <select\r\n        className={getInputClasses()}\r\n        id=\"validationCustom04\"\r\n        value={value}\r\n        onChange={handleChange}\r\n        name={name}\r\n      >\r\n        <option disabled value=\"\">\r\n          {defaultOption}\r\n        </option>\r\n        {optionsArr &&\r\n          optionsArr.map((option) => {\r\n            return (\r\n              <option key={option._id} value={option._id}>\r\n                {option.name}\r\n              </option>\r\n            )\r\n          })}\r\n      </select>\r\n      {error && <div className=\"invalid-feedback\">{error}</div>}\r\n    </div>\r\n  )\r\n}\r\nSelectField.defaultOption = { error: `Please select something` }\r\n\r\nSelectField.propTypes = {\r\n  defaultOption: PropTypes.string,\r\n  onChangeHandle: PropTypes.func,\r\n  options: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\r\n  label: PropTypes.string,\r\n  value: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\r\n  error: PropTypes.string,\r\n  name: PropTypes.string,\r\n  loading: PropTypes.bool\r\n}\r\n\r\nexport default SelectField\r\n","import React, { useState } from 'react'\nimport PropTypes from 'prop-types'\n\nfunction TextField({ label, name, onChangeHandle, value, type, error }) {\n  const getInputClasses = () => {\n    return `${error ? 'form-control is-invalid' : 'form-control'} `\n  }\n  const [showPassword, setShowPassword] = useState(false)\n\n  const handleChange = ({ target }) => {\n    onChangeHandle({ name: target.name, value: target.value })\n  }\n\n  const toggleShowPassword = () => {\n    setShowPassword((prev) => !prev)\n  }\n\n  return (\n    <div className=\"d-flex flex-column mt-3\">\n      <label htmlFor={name} className=\"mb-2\">\n        {label}\n      </label>\n      <div className=\"input-group has-validation\">\n        <input\n          type={showPassword ? 'text' : type}\n          id={name}\n          value={value}\n          name={name}\n          onChange={handleChange}\n          className={getInputClasses()}\n        />\n        {type === 'password' && (\n          <span\n            className=\"btn btn-outline-secondary \"\n            type=\"button\"\n            onClick={toggleShowPassword}\n          >\n            <i className={showPassword ? 'bi bi-eye' : 'bi bi-eye-slash'}></i>\n          </span>\n        )}\n\n        {error && <div className=\"invalid-feedback text-danger\">{error}</div>}\n      </div>\n    </div>\n  )\n}\nTextField.defaultProps = { type: 'text' }\nTextField.propTypes = {\n  label: PropTypes.string,\n  name: PropTypes.string,\n  onChangeHandle: PropTypes.func,\n  value: PropTypes.string,\n  type: PropTypes.string,\n  error: PropTypes.string\n}\n\nexport default TextField\n","export const validatorConfig = {\n  email: {\n    isRequired: {\n      message: 'Электронная почта обязательна для заполнения'\n    },\n    isEmail: {\n      message: 'Проверьте правильность вашего email'\n    }\n  },\n  password: {\n    isRequired: { message: 'Пароль обязателен для заполнения' },\n    isCapitalLetter: { message: 'Пароль должен содержать загланую букву' },\n    isNumber: { message: 'Пароль должен содержать цыфру' },\n    min: {\n      message: 'Пароль должен быть не меньше 8 символов',\n      value: 8\n    }\n  },\n  profession: {\n    isRequired: { message: 'Профессия обязательна к выбору' }\n  },\n  licence: {\n    isRequired: {\n      message: 'Вы не можете использовать наш сервис без принятия лицензии'\n    }\n  },\n  name: {\n    isRequired: {\n      message: 'Имя обязательно для заполнения'\n    }\n  },\n  qualities: {\n    isRequired: {\n      message: 'Выбирете хотя б одно качество'\n    }\n  },\n\n  content: {\n    isRequired: {\n      message: 'Поле обязательно для заполнения'\n    }\n  }\n}\n","export const validator = (data, config) => {\n  const errors = {}\n  function validate(method, data, config) {\n    let statusValidate\n    switch (method) {\n      case 'isRequired': {\n        try {\n          if (typeof data === 'boolean') {\n            statusValidate = !data\n          } else {\n            statusValidate =\n              typeof data === 'object'\n                ? Object.keys(data).length === 0\n                : Array.isArray(data)\n                ? data.length === 0\n                : data.trim() === ''\n          }\n        } catch (error) {\n          console.log(error.message)\n        }\n\n        break\n      }\n      case 'isEmail':\n        {\n          const emailRegExp = /^\\S+@\\S+\\.\\S+$/g\n          statusValidate = !emailRegExp.test(data)\n        }\n        break\n      case 'isCapitalLetter':\n        {\n          const passwordRegExp = /[A-Z]+/g\n          statusValidate = !passwordRegExp.test(data)\n        }\n        break\n      case 'isNumber':\n        {\n          const passwordRegExp = /\\d+/g\n          statusValidate = !passwordRegExp.test(data)\n        }\n        break\n      case 'min':\n        statusValidate = data.length < config.value\n        break\n      case 'isCorrectDate':\n        statusValidate = Number(data.split('-')[0]) > new Date().getFullYear()\n        break\n      case 'isValidLink':\n        {\n          const linkRegExp = /^\\S+:\\/\\/\\S+\\.\\S+/g\n          statusValidate = !linkRegExp.test(data)\n        }\n        break\n\n      default:\n        break\n    }\n    if (statusValidate) return config.message\n  }\n\n  for (const fieldName in data) {\n    for (const validateMethod in config[fieldName]) {\n      const error = validate(\n        validateMethod,\n        data[fieldName],\n        config[fieldName][validateMethod]\n      )\n      if (error && !errors[fieldName]) {\n        errors[fieldName] = error\n      }\n    }\n  }\n  return errors\n}\n","import React, { useEffect, useState } from 'react'\r\nimport MultiSelectField from '../../components/common/form/MultiSelectField'\r\nimport RadioField from '../../components/common/form/RadioField'\r\nimport SelectField from '../../components/common/form/SelectField'\r\nimport TextField from '../../components/common/form/TextField'\r\nimport { validatorConfig } from '../../utilits/validatorConfig'\r\nimport { validator } from '../../utilits/validator'\r\nimport PropTypes from 'prop-types'\r\n\r\nimport { useHistory } from 'react-router-dom'\r\nimport Loader from '../../components/ui/loader'\r\nimport { USERS_ROUTE } from '../../utilits/constants'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { getQualities, getQualitiesLoadingStatus } from '../../store/qualities'\r\nimport {\r\n  getProfessionsList,\r\n  getProfessionsLoadingStatus\r\n} from '../../store/professions'\r\nimport {\r\n  getCurrentUserData,\r\n  getUsersLoadingStatus,\r\n  updateUser\r\n} from '../../store/users'\r\n\r\nfunction EditPage() {\r\n  const dispatch = useDispatch()\r\n  const history = useHistory()\r\n  const loading = useSelector(getUsersLoadingStatus())\r\n  const currentUser = useSelector(getCurrentUserData())\r\n\r\n  const qualities = useSelector(getQualities())\r\n  const qualitiesLoading = useSelector(getQualitiesLoadingStatus())\r\n  const professions = useSelector(getProfessionsList())\r\n  const profLoading = useSelector(getProfessionsLoadingStatus())\r\n\r\n  const [errors, setErrors] = useState({})\r\n  const [data, setData] = useState()\r\n  const [isLoading, setLoading] = useState(true)\r\n\r\n  useEffect(() => {\r\n    if (!loading && !qualitiesLoading && !profLoading && currentUser && !data) {\r\n      setData({\r\n        ...currentUser,\r\n        qualities: transformQualitiesData(currentUser.qualities),\r\n        profession: transformProfessionData(currentUser.profession)\r\n      })\r\n    }\r\n  }, [qualitiesLoading, profLoading, currentUser, data, loading])\r\n\r\n  useEffect(() => {\r\n    if (data && isLoading) {\r\n      setLoading(false)\r\n    }\r\n  }, [data, isLoading])\r\n\r\n  const transformQualitiesData = (data) => {\r\n    return qualities\r\n      .filter((qual) => data.includes(qual._id))\r\n      .map((q) => ({ value: q._id, label: q.name }))\r\n  }\r\n  const transformProfessionData = (data) => {\r\n    return professions.find((prof) => prof._id === data)\r\n  }\r\n\r\n  const qualitiesList = qualities.map((qual) => ({\r\n    value: qual._id,\r\n    label: qual.name\r\n  }))\r\n\r\n  const onChangeHandle = (target) => {\r\n    setData((prev) => ({\r\n      ...prev,\r\n      [target.name]:\r\n        target.name === 'profession'\r\n          ? professions.find((profession) => profession._id === target.value)\r\n          : target.value\r\n    }))\r\n  }\r\n\r\n  const submitHandle = async (e) => {\r\n    try {\r\n      e.preventDefault()\r\n      const isValid = validate()\r\n      if (!isValid) {\r\n        return\r\n      }\r\n\r\n      const formData = {\r\n        ...data,\r\n        profession: data.profession._id,\r\n        qualities: data.qualities.map((qual) => qual.value)\r\n      }\r\n\r\n      dispatch(updateUser(formData))\r\n\r\n      history.push(USERS_ROUTE + '/' + currentUser._id)\r\n    } catch (error) {\r\n      console.log(error)\r\n    }\r\n  }\r\n\r\n  const validate = () => {\r\n    const errors = validator(data, validatorConfig)\r\n    setErrors(errors)\r\n    return Object.keys(errors).length === 0\r\n  }\r\n\r\n  useEffect(() => {\r\n    validate()\r\n    return () => {}\r\n  }, [data])\r\n\r\n  const isValid = Object.keys(errors).length === 0\r\n\r\n  if (isLoading) {\r\n    return <Loader />\r\n  }\r\n  return (\r\n    <div className=\"container \">\r\n      <div className=\"row d-flex justify-content-start m-4\">\r\n        <div className=\"col-md-2\">\r\n          <button className=\"btn btn-primary\" onClick={() => history.goBack()}>\r\n            <i className=\"bi bi-arrow-left\"></i>\r\n            <span>Назад</span>\r\n          </button>\r\n        </div>\r\n        <div\r\n          className=\"col-md-6 text-start p-4 shadow\r\n        \"\r\n        >\r\n          <form\r\n            onSubmit={submitHandle}\r\n            className=\"d-flex flex-column needs-validation\"\r\n          >\r\n            <h3 className=\"mb-4\">Edit</h3>\r\n            <TextField\r\n              name=\"name\"\r\n              value={data.name}\r\n              onChangeHandle={onChangeHandle}\r\n              label=\"Ваше имя\"\r\n              error={errors.name}\r\n            />\r\n            <TextField\r\n              name=\"email\"\r\n              value={data.email}\r\n              onChangeHandle={onChangeHandle}\r\n              label=\"Ваша електронная почта\"\r\n              type=\"email\"\r\n              error={errors.email}\r\n            />\r\n            <SelectField\r\n              onChangeHandle={onChangeHandle}\r\n              options={professions}\r\n              label=\"Выбирите вашу профессию\"\r\n              value={data.profession}\r\n              defaultOption={data.profession.name}\r\n              name=\"profession\"\r\n              error={errors.profession}\r\n            />\r\n\r\n            <RadioField\r\n              options={[\r\n                { name: 'Муж', value: 'male' },\r\n                { name: 'Жен', value: 'female' },\r\n                { name: 'Другое', value: 'other' }\r\n              ]}\r\n              value={data.sex}\r\n              onChangeHandle={onChangeHandle}\r\n              name=\"sex\"\r\n            />\r\n\r\n            <MultiSelectField\r\n              name=\"qualities\"\r\n              options={qualitiesList}\r\n              onChangeHandle={onChangeHandle}\r\n              label=\"Выбирите качество\"\r\n              defaultValue={data.qualities}\r\n              error={errors.qualities}\r\n            />\r\n\r\n            <button\r\n              type=\"submit\"\r\n              className=\"mt-3 align-self-end btn btn-primary\"\r\n              disabled={!isValid}\r\n            >\r\n              Submit\r\n            </button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\nEditPage.propTypes = {\r\n  user: PropTypes.object,\r\n  props: PropTypes.object,\r\n  location: PropTypes.object,\r\n  state: PropTypes.object\r\n}\r\n\r\nexport default EditPage\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nfunction UserImage({ image }) {\r\n  return (\r\n    <img\r\n      src={image}\r\n      className=\"rounded-circle shadow-1-strong me-3\"\r\n      alt=\"avatar\"\r\n      width=\"65\"\r\n      height=\"65\"\r\n    />\r\n  )\r\n}\r\nUserImage.propTypes = {\r\n  image: PropTypes.string\r\n}\r\n\r\nexport default UserImage\r\n","import React from 'react'\r\nimport UserImage from '../ui/UserImage'\r\nimport PropTypes from 'prop-types'\r\nimport { getCommentTime } from '../../utilits/helpers'\r\nimport { useSelector } from 'react-redux'\r\nimport { getCurrentUserId, getUserById } from '../../store/users'\r\n\r\nfunction SingleCommentForUser({\r\n  userId,\r\n  content,\r\n  created_at: createdAt,\r\n  handleRemoveComment,\r\n  _id\r\n}) {\r\n  const user = useSelector(getUserById(userId))\r\n  const currentUserId = useSelector(getCurrentUserId())\r\n\r\n  return (\r\n    <div className=\"bg-light card-body  mb-3\">\r\n      <div className=\"row\">\r\n        <div className=\"col\">\r\n          <div className=\"d-flex flex-start \">\r\n            <UserImage image={user.image} />\r\n            <div className=\"flex-grow-1 flex-shrink-1\">\r\n              <div className=\"mb-4\">\r\n                <div className=\"d-flex justify-content-between align-items-center\">\r\n                  <p className=\"mb-1 \">\r\n                    {user.name}\r\n                    <span className=\"small ms-3\">\r\n                      {getCommentTime(createdAt)}\r\n                    </span>\r\n                  </p>\r\n                  {currentUserId === userId && (\r\n                    <button\r\n                      className=\"btn btn-sm text-primary d-flex align-items-center\r\n                  \"\r\n                      onClick={() => handleRemoveComment(_id)}\r\n                    >\r\n                      <i className=\"bi bi-x-lg\"></i>\r\n                    </button>\r\n                  )}\r\n                </div>\r\n                <p className=\"small mb-0\">{content}</p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\nSingleCommentForUser.propTypes = {\r\n  allUsers: PropTypes.oneOfType([PropTypes.array, PropTypes.object]),\r\n  userId: PropTypes.string,\r\n  _id: PropTypes.string,\r\n  pageId: PropTypes.string,\r\n  content: PropTypes.string,\r\n  loading: PropTypes.bool,\r\n  handleRemoveComment: PropTypes.func,\r\n  created_at: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\r\n}\r\nexport default React.memo(SingleCommentForUser)\r\n","import httpService from './http.service'\r\n\r\nconst commentsEndpoint = 'comment/'\r\n\r\nconst commentsService = {\r\n  createComment: async (comment) => {\r\n    const { data } = await httpService.post(commentsEndpoint, comment)\r\n    return data\r\n  },\r\n  getComments: async (pageId) => {\r\n    const { data } = await httpService.get(commentsEndpoint, {\r\n      params: {\r\n        orderBy: 'pageId',\r\n        equalTo: pageId\r\n      }\r\n    })\r\n    return data\r\n  },\r\n  deleteComment: async (commentId) => {\r\n    const { data } = await httpService.delete(commentsEndpoint + commentId)\r\n    return data\r\n  }\r\n}\r\nexport default commentsService\r\n","import { createAction, createSlice } from '@reduxjs/toolkit'\r\nimport commentsService from '../services/comment.service'\r\n\r\nconst commentsSlice = createSlice({\r\n  name: 'comments',\r\n  initialState: {\r\n    entities: [],\r\n    isLoading: true,\r\n    error: null\r\n  },\r\n  reducers: {\r\n    commentsServiceRequested(state, action) {\r\n      state.isLoading = true\r\n    },\r\n    commentsRequestFailed(state, action) {\r\n      state.error = action.payload\r\n      state.isLoading = false\r\n    },\r\n    commentsRequestSuccess(state, action) {\r\n      state.entities = action.payload\r\n      state.isLoading = false\r\n    },\r\n    newCommentCreated(state, action) {\r\n      state.entities.push(action.payload)\r\n      state.isLoading = false\r\n    },\r\n    commentDeleted(state, action) {\r\n      state.isLoading = false\r\n      state.entities = state.entities.filter(\r\n        (comment) => comment._id !== action.payload\r\n      )\r\n    }\r\n  }\r\n})\r\n\r\nconst { actions, reducer: commentsReducer } = commentsSlice\r\nconst createCommentRequested = createAction('comments/createCommentRequested')\r\n\r\nconst {\r\n  commentsServiceRequested,\r\n  commentsRequestFailed,\r\n  commentsRequestSuccess,\r\n  newCommentCreated,\r\n  commentDeleted\r\n} = actions\r\n/* functions to dispatch changes to state */\r\nexport const loadCommentsList = (userId) => async (dispatch) => {\r\n  dispatch(commentsServiceRequested())\r\n  try {\r\n    const { content } = await commentsService.getComments(userId)\r\n    dispatch(commentsRequestSuccess(content))\r\n  } catch (error) {\r\n    dispatch(commentsRequestFailed(error.message))\r\n  }\r\n}\r\n\r\nexport const createComment = (payload) => async (dispatch) => {\r\n  dispatch(createCommentRequested())\r\n\r\n  const { userId: id, content } = payload\r\n\r\n  const comment = {\r\n    content,\r\n    pageId: id\r\n  }\r\n  try {\r\n    const { content } = await commentsService.createComment(comment)\r\n    dispatch(newCommentCreated(content))\r\n  } catch (error) {\r\n    dispatch(commentsRequestFailed(error.message))\r\n  }\r\n}\r\n\r\nexport const deleteComment = (commentId) => async (dispatch) => {\r\n  dispatch(commentsServiceRequested())\r\n  try {\r\n    const { content } = await commentsService.deleteComment(commentId)\r\n\r\n    if (!content) {\r\n      dispatch(commentDeleted(commentId))\r\n    }\r\n  } catch (error) {\r\n    dispatch(commentsRequestFailed(error.message))\r\n  }\r\n}\r\n\r\n/* selectors */\r\nexport const getCommentsList = () => (state) => {\r\n  if (state.comments.entities) {\r\n    return state.comments.entities\r\n  }\r\n}\r\nexport const getCommentsLoadingStatus = () => (state) =>\r\n  state.comments.isLoading\r\n\r\nexport default commentsReducer\r\n","import React from 'react'\r\n\r\nimport PropTypes from 'prop-types'\r\nimport SingleCommentForUser from './SingleCommentForUser'\r\n\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { deleteComment, getCommentsLoadingStatus } from '../../store/comments'\r\n\r\nfunction Comment({ commentsForUser }) {\r\n  const dispatch = useDispatch()\r\n  const commentLoadingStatus = useSelector(getCommentsLoadingStatus())\r\n\r\n  const handleRemoveComment = (id) => {\r\n    dispatch(deleteComment(id))\r\n  }\r\n\r\n  if (commentLoadingStatus) {\r\n    return <p>Loading....</p>\r\n  }\r\n\r\n  if (commentsForUser.length === 0) {\r\n    return <p>Никто еще не оставлял комментарии, вы будете первым</p>\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {commentsForUser.map((comment) => (\r\n        <SingleCommentForUser\r\n          key={comment._id}\r\n          {...comment}\r\n          handleRemoveComment={handleRemoveComment}\r\n        />\r\n      ))}\r\n    </>\r\n  )\r\n}\r\nComment.propTypes = {\r\n  id: PropTypes.string,\r\n  loading: PropTypes.bool,\r\n  allUsers: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\r\n  commentsForUser: PropTypes.array,\r\n  setCommentsForUser: PropTypes.func,\r\n  getUsersCommentsFromDB: PropTypes.func\r\n}\r\nexport default Comment\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nfunction TextArea({\r\n  label,\r\n  placeholder,\r\n  name,\r\n  onChangeHandle,\r\n  value,\r\n  rows = 3,\r\n  error\r\n}) {\r\n  const getInputClasses = () => {\r\n    return `${error ? 'form-control p-1 is-invalid' : 'form-control p-1'} `\r\n  }\r\n  const handleChange = ({ target }) => {\r\n    onChangeHandle({ name: target.id, value: target.value })\r\n  }\r\n  return (\r\n    <div className=\"my-3\">\r\n      <label htmlFor={name} className=\"mb-3\">\r\n        {label}\r\n      </label>\r\n\r\n      <div className=\"form-floating \">\r\n        <textarea\r\n          className={getInputClasses()}\r\n          placeholder={placeholder}\r\n          id={name}\r\n          style={{ height: rows * 24 + 'px' }}\r\n          value={value}\r\n          onChange={handleChange}\r\n        ></textarea>\r\n        {error && <div className=\"invalid-feedback text-danger\">{error}</div>}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\nTextArea.propTypes = {\r\n  label: PropTypes.string,\r\n  placeholder: PropTypes.string,\r\n  name: PropTypes.string,\r\n  onChangeHandle: PropTypes.func,\r\n  value: PropTypes.string,\r\n  type: PropTypes.string,\r\n  error: PropTypes.string,\r\n  rows: PropTypes.number\r\n}\r\nexport default TextArea\r\n","import React, { useEffect, useState } from 'react'\r\nimport { validatorConfig } from '../../../utilits/validatorConfig'\r\nimport PropTypes from 'prop-types'\r\n\r\nimport TextArea from '../../common/form/TextArea'\r\nimport { validator } from '../../../utilits/validator'\r\n\r\nfunction CommentForm({ isLoading, handleSubmit }) {\r\n  const [errors, setErrors] = useState({})\r\n  const [data, setData] = useState({ content: '' })\r\n\r\n  const onChangeHandle = (target) => {\r\n    setData((prev) => ({ ...prev, [target.name]: target.value }))\r\n  }\r\n  const submitHandle = (e) => {\r\n    e.preventDefault()\r\n    if (!isValid) {\r\n      return\r\n    }\r\n    handleSubmit(data)\r\n    clearForm()\r\n  }\r\n\r\n  const clearForm = () => {\r\n    setData({ content: '' })\r\n    setErrors({})\r\n  }\r\n  const validate = () => {\r\n    const errors = validator(data, validatorConfig)\r\n\r\n    setErrors(errors)\r\n    return Object.keys(errors).length === 0\r\n  }\r\n  useEffect(() => {\r\n    validate()\r\n  }, [data])\r\n\r\n  const isValid = Object.keys(errors).length === 0\r\n\r\n  return (\r\n    <div className=\"card-body\">\r\n      <form\r\n        className=\"d-flex flex-column needs-validation\"\r\n        onSubmit={submitHandle}\r\n      >\r\n        <h2>New Comment</h2>\r\n\r\n        <TextArea\r\n          name=\"content\"\r\n          label=\"Сообщение\"\r\n          onChangeHandle={onChangeHandle}\r\n          placeholder=\"Ваш комментарий ...\"\r\n          value={data.content || ''}\r\n          error={errors.content}\r\n        />\r\n        <button\r\n          type=\"submit\"\r\n          className=\"mt-3 align-self-end btn btn-primary\"\r\n          disabled={!isValid || isLoading}\r\n        >\r\n          Опубликовать\r\n        </button>\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\nCommentForm.propTypes = {\r\n  isLoading: PropTypes.bool.isRequired,\r\n  handleSubmit: PropTypes.func.isRequired\r\n}\r\nexport default React.memo(CommentForm)\r\n","import React, { useEffect } from 'react'\r\nimport Comment from './Comment'\r\nimport PropTypes from 'prop-types'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport {\r\n  createComment,\r\n  getCommentsList,\r\n  getCommentsLoadingStatus,\r\n  loadCommentsList\r\n} from '../../store/comments'\r\nimport { orderBy } from 'lodash'\r\nimport CommentForm from '../ui/form/CommentForm'\r\n\r\nfunction CommentSection({ userId }) {\r\n  const dispatch = useDispatch()\r\n  const commentLoadingStatus = useSelector(getCommentsLoadingStatus())\r\n  const comments = useSelector(getCommentsList())\r\n\r\n  useEffect(() => {\r\n    dispatch(loadCommentsList(userId))\r\n  }, [userId])\r\n\r\n  const submitHandle = (data) => {\r\n    dispatch(createComment({ userId, ...data }))\r\n  }\r\n\r\n  const sortedComments = orderBy(comments, ['created_at'], ['desc'])\r\n\r\n  return (\r\n    <>\r\n      <div className=\"card mb-2\">\r\n        <CommentForm\r\n          handleSubmit={submitHandle}\r\n          isLoading={commentLoadingStatus}\r\n        />\r\n      </div>\r\n      <div className=\"card mb-3\">\r\n        <div className=\"card-body \">\r\n          <h2>Comments</h2>\r\n          <hr />\r\n          <Comment commentsForUser={sortedComments} />\r\n        </div>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\nCommentSection.propTypes = {\r\n  userId: PropTypes.string\r\n}\r\n\r\nexport default CommentSection\r\n","import React from 'react'\r\n\r\nfunction MeetingsCard(userById) {\r\n  const { completedMeetings } = userById\r\n  return (\r\n    <div className=\"card mb-3\">\r\n      <div className=\"card-body d-flex flex-column justify-content-center text-center\">\r\n        <h5 className=\"card-title\">\r\n          <span>Completed meetings</span>\r\n        </h5>\r\n\r\n        <h1 className=\"display-1\">{completedMeetings}</h1>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default MeetingsCard\r\n","import React from 'react'\r\nimport QualityList from '../ui/qualities/qualityList'\r\nimport PropTypes from 'prop-types'\r\n\r\nfunction QualityCard({ qualities }) {\r\n  return (\r\n    <div className=\"card mb-3\">\r\n      <div className=\"card-body d-flex flex-column justify-content-center text-center\">\r\n        <h5 className=\"card-title\">\r\n          <span>Qualities</span>\r\n        </h5>\r\n        <p className=\"card-text\">\r\n          <QualityList qualities={qualities} />\r\n        </p>\r\n        <div></div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\nQualityCard.propTypes = {\r\n  qualities: PropTypes.array\r\n}\r\nexport default QualityCard\r\n","import React from 'react'\r\nimport UserImage from '../ui/UserImage'\r\nimport PropTypes from 'prop-types'\r\nimport { USERS_ROUTE } from '../../utilits/constants'\r\nimport { Link } from 'react-router-dom'\r\nimport { getCurrentUserData } from '../../store/users'\r\nimport { useSelector } from 'react-redux'\r\n\r\nfunction UserInfoCard(userById) {\r\n  const { name, rate, profession, _id, image } = userById\r\n  const currentUser = useSelector(getCurrentUserData())\r\n  return (\r\n    <div className=\"card mb-3\">\r\n      <div className=\"card-body\">\r\n        {currentUser._id === _id && (\r\n          <Link\r\n            to={{\r\n              pathname: USERS_ROUTE + '/' + _id + '/edit',\r\n              state: userById\r\n            }}\r\n          >\r\n            <button className=\"position-absolute top-0 end-0 btn btn-light btn-sm\">\r\n              <i className=\"bi bi-gear\"></i>\r\n            </button>\r\n          </Link>\r\n        )}\r\n\r\n        <div className=\"d-flex flex-column align-items-center text-center position-relative\">\r\n          <UserImage image={image} />\r\n          <div className=\"mt-3\">\r\n            <h4>{name}</h4>\r\n            <p className=\"text-secondary mb-1\">{profession.name}</p>\r\n            <div className=\"text-muted\">\r\n              <i\r\n                className=\"bi bi-caret-down-fill text-primary\"\r\n                role=\"button\"\r\n              ></i>\r\n              <i className=\"bi bi-caret-up text-secondary\" role=\"button\"></i>\r\n              <span className=\"ms-2\">{rate}</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\nUserInfoCard.propTypes = {\r\n  userById: PropTypes.object\r\n}\r\nexport default UserInfoCard\r\n","import SingleUserPage from './singleUserPage'\nexport default SingleUserPage\n","import React from 'react'\n\nimport CommentSection from '../../components/user/CommenSection'\nimport MeetingsCard from '../../components/user/MeetingsCard'\nimport QualityCard from '../../components/user/QualityCard'\nimport UserInfoCard from '../../components/user/UserInfoCard'\n\nimport PropTypes from 'prop-types'\nimport Loader from '../../components/ui/loader'\nimport { useSelector } from 'react-redux'\nimport { getUserById } from '../../store/users'\n\nconst SingleUserPage = ({ userId }) => {\n  const userById = useSelector(getUserById(userId))\n\n  if (!userById) {\n    return <Loader />\n  }\n\n  return (\n    <div className=\"container p-4\">\n      {userById && (\n        <div className=\"row gutters-sm\">\n          <div className=\"col-md-4 mb-3\">\n            <UserInfoCard {...userById} />\n            {userById.qualities && (\n              <QualityCard qualities={userById.qualities} />\n            )}\n            <MeetingsCard {...userById} />\n          </div>\n\n          <div className=\"col-md-8 \">\n            <CommentSection userId={userById._id} />\n          </div>\n        </div>\n      )}\n    </div>\n  )\n}\nSingleUserPage.propTypes = {\n  userId: PropTypes.string\n}\n\nexport default SingleUserPage\n","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport { Redirect, useParams } from 'react-router-dom'\nimport UsersLoader from '../components/ui/HOC/usersLoader'\nimport Users from '../pages/usersListPage'\nimport { getCurrentUserId } from '../store/users'\nimport { USERS_ROUTE } from '../utilits/constants'\nimport EditPage from './editPage/EditPage'\nimport SingleUserPage from './usersPage'\n\nconst UsersPage = () => {\n  const { id, edit } = useParams()\n\n  const currentUserId = useSelector(getCurrentUserId())\n\n  return (\n    <UsersLoader>\n      {id ? (\n        edit ? (\n          id === currentUserId ? (\n            <EditPage />\n          ) : (\n            <Redirect to={`${USERS_ROUTE}/${currentUserId}/edit`} />\n          )\n        ) : (\n          <SingleUserPage userId={id} />\n        )\n      ) : (\n        <Users />\n      )}\n    </UsersLoader>\n  )\n}\n\nexport default UsersPage\n","import React, { useState } from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport { getCurrentUserData } from '../store/users'\r\nimport { LOGOUT_ROUTE, USERS_ROUTE } from '../utilits/constants'\r\nimport Loader from './ui/loader'\r\n\r\nfunction NavProfile() {\r\n  const currentUser = useSelector(getCurrentUserData())\r\n  const [isOpen, setIsOpen] = useState(false)\r\n  const toggleMenu = () => {\r\n    setIsOpen((prevState) => !prevState)\r\n  }\r\n  if (!currentUser) {\r\n    return <Loader />\r\n  }\r\n\r\n  return (\r\n    <div className=\"dropdown\" onClick={toggleMenu}>\r\n      <div className=\"btn dropdown-toggle d-flex align-items-center\">\r\n        <div className=\"me-3\">{currentUser.name}</div>\r\n        <img\r\n          src={currentUser.image}\r\n          alt=\"user image\"\r\n          height=\"40\"\r\n          className=\"img-responsive rounded-circle\"\r\n        />\r\n      </div>\r\n      <div className={`w-100 dropdown-menu ${isOpen ? 'show' : ''}`}>\r\n        <Link\r\n          to={`${USERS_ROUTE}/${currentUser._id}`}\r\n          className=\"dropdown-item\"\r\n        >\r\n          Profile\r\n        </Link>\r\n        <Link to={LOGOUT_ROUTE} className=\"dropdown-item\">\r\n          Log Out\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default NavProfile\r\n","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport { LOGIN_ROUTE, MAIN_ROUTE, USERS_ROUTE } from '../utilits/constants'\nimport NavProfile from './NavProfile'\nimport { useSelector } from 'react-redux'\nimport { getUserIsLoggedIn } from '../store/users'\n\nconst NavBar = () => {\n  const isLoggedIn = useSelector(getUserIsLoggedIn())\n  return (\n    <nav className=\"navbar bg-light mb-3 \">\n      <div className=\"container-fluid\">\n        <ul className=\"nav\">\n          <li className=\"nav-item\">\n            <Link className=\"nav-link \" to={MAIN_ROUTE}>\n              Main\n            </Link>\n          </li>\n          {isLoggedIn && (\n            <li className=\"nav-item\">\n              <Link className=\"nav-link\" to={USERS_ROUTE}>\n                Users\n              </Link>\n            </li>\n          )}\n        </ul>\n        <div className=\"d-flex align-items-center justify-content-center\">\n          {isLoggedIn && <NavProfile />}\n\n          {!isLoggedIn && (\n            <Link className=\"nav-link\" to={LOGIN_ROUTE}>\n              Login\n            </Link>\n          )}\n        </div>\n      </div>\n    </nav>\n  )\n}\n\nexport default NavBar\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nfunction CheckField({ name, value, onChangeHandle, children, error }) {\r\n  const handleChange = () => {\r\n    onChangeHandle({ name: name, value: !value })\r\n  }\r\n  const getInputClasses = () => {\r\n    return `${error ? 'form-check-label is-invalid' : 'form-check-label'} `\r\n  }\r\n\r\n  return (\r\n    <div className=\"form-check my-3\">\r\n      <input\r\n        className=\"form-check-input\"\r\n        type=\"checkbox\"\r\n        value=\"\"\r\n        checked={value}\r\n        id={name}\r\n        onChange={handleChange}\r\n      />\r\n      <label className={getInputClasses()} htmlFor={name}>\r\n        {children}\r\n      </label>\r\n\r\n      {error && <div className=\"invalid-feedback\">{error}</div>}\r\n    </div>\r\n  )\r\n}\r\nCheckField.propTypes = {\r\n  name: PropTypes.string,\r\n  error: PropTypes.string,\r\n  value: PropTypes.bool,\r\n  onChangeHandle: PropTypes.func,\r\n  children: PropTypes.oneOfType([\r\n    PropTypes.arrayOf(PropTypes.node),\r\n    PropTypes.node\r\n  ])\r\n}\r\nexport default CheckField\r\n","import React, { useEffect, useState } from 'react'\nimport TextField from '../../common/form/TextField'\nimport { validator } from '../../../utilits/validator'\nimport CheckField from '../../common/form/CheckField'\nimport { MAIN_ROUTE } from '../../../utilits/constants'\nimport { getAuthError, logIn } from '../../../store/users'\nimport { useDispatch, useSelector } from 'react-redux'\nimport history from '../../../utilits/history'\nimport { toast } from 'react-toastify'\n\nfunction LoginForm() {\n  const dispatch = useDispatch()\n  const authError = useSelector(getAuthError())\n  const [data, setData] = useState({ email: '', password: '', stayOn: false })\n  const [errors, setErrors] = useState({})\n  const onChangeHandle = (target) => {\n    setData((prev) => ({ ...prev, [target.name]: target.value }))\n  }\n  useEffect(() => {\n    toast.error(authError)\n  }, [authError])\n\n  const submitHandle = (e) => {\n    e.preventDefault()\n    const isValid = validate()\n    if (!isValid) {\n      return\n    }\n    const redirect = history.location.state\n      ? history.location.state.from.pathname\n      : MAIN_ROUTE\n    dispatch(logIn({ data, redirect }))\n  }\n  const loginValidatorConfig = {\n    email: {\n      isRequired: {\n        message: 'Email is required'\n      }\n    },\n    password: {\n      isRequired: { message: 'Password is required' }\n    }\n  }\n\n  const validate = () => {\n    const errors = validator(data, loginValidatorConfig)\n    setErrors(errors)\n\n    return Object.keys(errors).length === 0\n  }\n\n  useEffect(() => {\n    validate()\n    return () => {}\n  }, [data])\n\n  const isValid = Object.keys(errors).length === 0\n  return (\n    <form onSubmit={submitHandle} className=\"d-flex flex-column\">\n      <h3 className=\"mb-4\">Login</h3>\n      <TextField\n        name=\"email\"\n        value={data.email}\n        onChangeHandle={onChangeHandle}\n        label=\"Введите вашу электронную почту\"\n        error={errors.email}\n      />\n      <TextField\n        name=\"password\"\n        value={data.password}\n        onChangeHandle={onChangeHandle}\n        label=\"Введите ваш пароль\"\n        type=\"password\"\n        error={errors.password}\n      />\n\n      <CheckField\n        name=\"stayOn\"\n        value={data.stayOn}\n        onChangeHandle={onChangeHandle}\n      >\n        Оставаться в системе\n      </CheckField>\n      <button\n        type=\"submit\"\n        className=\"mt-3 align-self-end btn btn-primary\"\n        disabled={!isValid}\n      >\n        Submit\n      </button>\n    </form>\n  )\n}\n\nexport default LoginForm\n","import React, { useEffect, useState } from 'react'\nimport TextField from '../../common/form/TextField'\nimport { validator } from '../../../utilits/validator'\nimport { validatorConfig } from '../../../utilits/validatorConfig'\nimport SelectField from '../../common/form/SelectField'\nimport RadioField from '../../common/form/RadioField'\nimport MultiSelectField from '../../common/form/MultiSelectField'\nimport CheckField from '../../common/form/CheckField'\n\nimport { useDispatch, useSelector } from 'react-redux'\nimport { getQualities } from '../../../store/qualities'\nimport { getProfessionsList } from '../../../store/professions'\nimport { signUp } from '../../../store/users'\n\nfunction RegisterForm() {\n  const [data, setData] = useState({\n    email: '',\n    name: '',\n    password: '',\n    profession: '',\n    sex: 'male',\n    qualities: [],\n    licence: false\n  })\n  const dispatch = useDispatch()\n  const [errors, setErrors] = useState({})\n\n  const qualities = useSelector(getQualities())\n  const newQualities = qualities.map((qual) => ({\n    value: qual._id,\n    label: qual.name\n  }))\n  const professions = useSelector(getProfessionsList())\n\n  const onChangeHandle = (target) => {\n    setData((prev) => ({ ...prev, [target.name]: target.value }))\n  }\n  const submitHandle = (e) => {\n    e.preventDefault()\n    const isValid = validate()\n    if (!isValid) {\n      return\n    }\n    const newData = {\n      ...data,\n      qualities: data.qualities.map((q) => q.value)\n    }\n\n    dispatch(signUp(newData))\n  }\n\n  const validate = () => {\n    const errors = validator(data, validatorConfig)\n    setErrors(errors)\n    return Object.keys(errors).length === 0\n  }\n\n  useEffect(() => {\n    validate()\n  }, [data])\n\n  const isValid = Object.keys(errors).length === 0\n\n  return (\n    <form\n      onSubmit={submitHandle}\n      className=\"d-flex flex-column needs-validation\"\n    >\n      <h3 className=\"mb-4\">Register</h3>\n      <TextField\n        name=\"name\"\n        value={data.name}\n        onChangeHandle={onChangeHandle}\n        label=\"Введите ваше имя\"\n        error={errors.name}\n      />\n      <TextField\n        name=\"email\"\n        value={data.email}\n        onChangeHandle={onChangeHandle}\n        label=\"Введите вашу электронную почту\"\n        error={errors.email}\n      />\n      <TextField\n        name=\"password\"\n        value={data.password}\n        onChangeHandle={onChangeHandle}\n        label=\"Ваш пароль\"\n        type=\"password\"\n        error={errors.password}\n      />\n      <SelectField\n        onChangeHandle={onChangeHandle}\n        options={professions}\n        label=\"Выбирите вашу профессию\"\n        value={data.profession}\n        defaultOption=\"Choose...\"\n        name=\"profession\"\n        error={errors.profession}\n      />\n\n      <RadioField\n        options={[\n          { name: 'Муж', value: 'male' },\n          { name: 'Жен', value: 'female' },\n          { name: 'Другое', value: 'other' }\n        ]}\n        value={data.sex}\n        onChangeHandle={onChangeHandle}\n        name=\"sex\"\n      />\n\n      <MultiSelectField\n        name=\"qualities\"\n        options={newQualities}\n        onChangeHandle={onChangeHandle}\n        label=\"Выбирите качество\"\n      />\n\n      <CheckField\n        name=\"licence\"\n        value={data.licence}\n        onChangeHandle={onChangeHandle}\n        error={errors.licence}\n      >\n        Подтвердить соглашение с лицензией\n      </CheckField>\n\n      <button\n        type=\"submit\"\n        className=\"mt-3 align-self-end btn btn-primary\"\n        disabled={!isValid}\n      >\n        Submit\n      </button>\n    </form>\n  )\n}\n\nexport default RegisterForm\n","import React, { useState } from 'react'\n\nimport LoginForm from '../components/ui/form/LoginForm'\nimport { useParams } from 'react-router'\nimport RegisterForm from '../components/ui/form/RegisterForm'\n\nconst Login = () => {\n  const { type } = useParams()\n  const [formType, setFormType] = useState(type === 'register' ? type : 'login')\n  const toggleFormType = () => {\n    setFormType((prev) => (prev === 'register' ? 'login' : 'register'))\n  }\n\n  return (\n    <div className=\"container my-4\">\n      <div className=\"row \">\n        <div className=\"col-md-6  offset-md-3 shadow p-4\">\n          {formType === 'register' && (\n            <>\n              <RegisterForm />\n              <p>\n                Registered?{' '}\n                <a role=\"button\" className=\"fw-bold\" onClick={toggleFormType}>\n                  Sign in\n                </a>\n              </p>\n            </>\n          )}\n\n          {formType !== 'register' && (\n            <>\n              <LoginForm />\n              <p>\n                Dont have an account?{' '}\n                <a role=\"button\" className=\"fw-bold\" onClick={toggleFormType}>\n                  Sign up\n                </a>\n              </p>\n            </>\n          )}\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Login\n","import React from 'react'\nconst Main = () => {\n  return (\n    <div className=\"container mt-5\">\n      <h1>Fast company social app</h1>\n\n      <p>Welcome to my pet project.</p>\n      <p>\n        This is a very simple social app demo where you can find someone to hang\n        around.\n      </p>\n      <p>Please proceed to login.</p>\n    </div>\n  )\n}\n\nexport default Main\n","import React from 'react'\r\nimport { Redirect, Route } from 'react-router-dom'\r\n\r\nimport { LOGIN_ROUTE } from '../utilits/constants'\r\nimport PropTypes from 'prop-types'\r\nimport { getUserIsLoggedIn } from '../store/users'\r\nimport { useSelector } from 'react-redux'\r\n\r\nfunction ProtectedRoute({ component: Component, children, ...rest }) {\r\n  const isLoggedIn = useSelector(getUserIsLoggedIn())\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(props) => {\r\n        if (!isLoggedIn) {\r\n          return (\r\n            <Redirect\r\n              to={{\r\n                pathname: LOGIN_ROUTE,\r\n                state: {\r\n                  from: props.location\r\n                }\r\n              }}\r\n            />\r\n          )\r\n        }\r\n        return Component ? <Component {...props} /> : children\r\n      }}\r\n    />\r\n  )\r\n}\r\n\r\nProtectedRoute.propTypes = {\r\n  component: PropTypes.func,\r\n  children: PropTypes.oneOfType([\r\n    PropTypes.arrayOf(PropTypes.node),\r\n    PropTypes.node\r\n  ]),\r\n  location: PropTypes.object\r\n}\r\n\r\nexport default ProtectedRoute\r\n","import React, { useEffect } from 'react'\r\nimport Loader from '../components/ui/loader'\r\nimport { useDispatch } from 'react-redux'\r\nimport { logOut } from '../store/users'\r\n\r\nfunction LogOut() {\r\n  const dispatch = useDispatch()\r\n  useEffect(() => {\r\n    dispatch(logOut())\r\n  }, [])\r\n  return <Loader />\r\n}\r\n\r\nexport default LogOut\r\n","import React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport {\r\n  getUserIsLoggedIn,\r\n  getUsersLoadingStatus,\r\n  loadUsersList\r\n} from '../../../store/users'\r\nimport Loader from '../loader'\r\nimport PropTypes from 'prop-types'\r\nimport { loadQualitiesList } from '../../../store/qualities'\r\nimport { loadProfessions } from '../../../store/professions'\r\n\r\nconst AppLoader = ({ children }) => {\r\n  const dispatch = useDispatch()\r\n  const isLoggedIn = useSelector(getUserIsLoggedIn())\r\n  const userLoadingStatus = useSelector(getUsersLoadingStatus())\r\n\r\n  useEffect(() => {\r\n    dispatch(loadQualitiesList())\r\n    dispatch(loadProfessions())\r\n    if (isLoggedIn) {\r\n      dispatch(loadUsersList())\r\n    }\r\n  }, [isLoggedIn])\r\n\r\n  if (userLoadingStatus) {\r\n    return <Loader />\r\n  }\r\n  return children\r\n}\r\n\r\nAppLoader.propTypes = {\r\n  children: PropTypes.oneOfType([\r\n    PropTypes.arrayOf(PropTypes.node),\r\n    PropTypes.node\r\n  ])\r\n}\r\n\r\nexport default AppLoader\r\n","import React from 'react'\nimport UsersPage from './pages/users'\nimport NavBar from './components/NavBar'\nimport Login from './pages/login'\nimport Main from './pages/main'\nimport { ToastContainer } from 'react-toastify'\nimport { Redirect, Route, Switch } from 'react-router-dom'\nimport {\n  LOGIN_ROUTE,\n  LOGOUT_ROUTE,\n  MAIN_ROUTE,\n  USERS_ROUTE\n} from './utilits/constants'\n\nimport 'react-toastify/dist/ReactToastify.css'\n\nimport ProtectedRoute from './components/ProtectedRoute'\nimport LogOut from './pages/LogOut'\n\nimport AppLoader from './components/ui/HOC/appLoader'\n\nconst App = () => {\n  return (\n    <AppLoader>\n      <NavBar />\n      <div className=\"col-md-12\">\n        <Switch>\n          <ProtectedRoute\n            path={USERS_ROUTE + '/:id?/:edit?'}\n            component={UsersPage}\n          />\n\n          <Route path={LOGIN_ROUTE + '/:type?'} component={Login} />\n          <Route path={LOGOUT_ROUTE} component={LogOut} />\n          <Route path={MAIN_ROUTE} exact component={Main} />\n          <Redirect to={MAIN_ROUTE} />\n        </Switch>\n      </div>\n\n      <ToastContainer />\n    </AppLoader>\n  )\n}\n\nexport default App\n","import { combineReducers, configureStore } from '@reduxjs/toolkit'\r\nimport commentsReducer from './comments'\r\nimport professionsReducer from './professions'\r\nimport qualitiesReducer from './qualities'\r\nimport userReducer from './users'\r\n\r\nconst rootReducer = combineReducers({\r\n  qualities: qualitiesReducer,\r\n  professions: professionsReducer,\r\n  users: userReducer,\r\n  comments: commentsReducer\r\n})\r\n\r\nexport function createStore() {\r\n  return configureStore({\r\n    reducer: rootReducer\r\n  })\r\n}\r\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport reportWebVitals from './reportWebVitals'\nimport 'bootstrap/dist/css/bootstrap.css'\nimport App from './App'\nimport { Router } from 'react-router-dom'\nimport { createStore } from './store/createStore'\nimport { Provider } from 'react-redux'\n\nimport history from './utilits/history'\n\nconst store = createStore()\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <Router history={history}>\n        <App />\n      </Router>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\nreportWebVitals()\n"],"sourceRoot":""}