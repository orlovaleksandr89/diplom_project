{"version":3,"sources":["reportWebVitals.js","services/localStorage.service.js","components/ui/loader.jsx","utilits/constants.js","hooks/useAuth.jsx","services/http.service.js","services/user.service.js","hooks/useUsers.jsx","components/common/Pagination.jsx","components/common/Bookmark.jsx","components/ui/qualities/quality.jsx","services/quality.service.js","hooks/useQualities.jsx","components/ui/qualities/qualityList.jsx","components/ui/qualities/index.js","components/common/table/tableHeader.jsx","components/common/table/tableBody.jsx","components/common/table/index.js","components/common/table/table.jsx","services/profession.service.js","hooks/useProfession.jsx","components/ui/profession.jsx","components/ui/usersTable.jsx","utilits/helpers.js","components/ui/searchStatus.jsx","components/common/groupList.jsx","components/SearchBar.jsx","pages/usersListPage/index.js","pages/usersListPage/Users.jsx","utilits/paginate.js","components/ui/UserImage.jsx","components/user/SingleCommentForUser.jsx","services/comment.service.js","hooks/useComments.jsx","components/user/Comment.jsx","components/common/form/TextArea.jsx","utilits/validatorConfig.js","utilits/validator.js","components/user/CommenSection.jsx","components/user/MeetingsCard.jsx","components/user/QualityCard.jsx","components/user/UserInfoCard.jsx","pages/usersPage/index.js","pages/usersPage/singleUserPage.jsx","pages/users.jsx","components/NavProfile.jsx","components/NavBar.jsx","components/common/form/TextField.jsx","components/common/form/CheckField.jsx","components/ui/form/LoginForm.jsx","components/common/form/SelectField.jsx","components/common/form/RadioField.jsx","components/common/form/MultiSelectField.jsx","components/ui/form/RegisterForm.jsx","pages/login.jsx","utilits/mockData.js","pages/main.jsx","pages/editPage/EditPage.jsx","pages/editPage/index.js","components/ProtectedRoute.jsx","pages/LogOut.jsx","App.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","TOKEN_KEY","REFRESH_KEY","EXPIRES_KEY","USERID_KEY","setToken","refreshToken","idToken","localId","expiresIn","expiresDate","Date","getTime","localStorage","setItem","localStorageService","getAccessToken","getItem","getRefreshToken","getExpiresIn","getUserId","removeAuthData","removeItem","Loader","className","role","MAIN_ROUTE","LOGIN_ROUTE","LOGOUT_ROUTE","USERS_ROUTE","AuthContext","React","createContext","httpAuth","axios","create","useAuth","useContext","AuthProvider","children","useState","undefined","currentUser","setCurrentUser","error","setError","isLoading","setIsLoading","history","useHistory","useEffect","toast","getUserData","a","userService","getCurrentUser","content","errorCatcher","randomInt","min","max","Math","floor","random","email","password","rest","url","process","REACT_APP_FIREBASE_KEY","post","returnSecureToken","data","createUser","_id","rate","completedMeetings","image","toString","substring","response","code","message","errorObj","console","log","formData","updateUser","Provider","value","signUp","login","logOut","push","http","baseURL","configFile","apiEndPoint","interceptors","request","use","config","isFireBase","containSlash","test","slice","now","grant_type","refresh_token","id_token","user_id","expires_in","accessToken","params","auth","Promise","reject","Object","keys","map","key","status","info","httpServise","get","put","delete","userEndpoint","httpService","payload","UserContext","useUsers","UserProvider","users","setUsers","loading","setLoading","userServise","getUsers","getUserById","id","find","user","Pagination","props","pageSize","itemsCount","onPageChange","currentPage","pageCount","ceil","pages","_","range","page","type","onClick","Bookmark","toggleBookMarkHanble","Quality","name","color","style","margin","fontSize","qualityService","qualityContext","useQualities","QualityProvider","qualities","setQualities","qualitiesLoading","getQualities","QualityList","qualitiesArr","intersection","filter","x","includes","quality","i","TableHeader","currentSort","setSortBy","columns","renderSortArrow","currentPath","iter","order","column","scope","TableBody","renderContent","item","component","to","Table","professionService","ProfessionContext","useProfessions","ProfessionProvider","professions","setProfessions","profLoading","getProfessions","getProfessionById","Profession","profession","UsersTable","bookmark","renderPhrase","numbers","lastNumber","Number","split","getCommentTime","timeStamp","date","parseInt","dateNow","getFullYear","getDay","getHours","minDif","getMinutes","toLocaleString","month","getMonth","getDate","SearchStatus","lenght","userLength","GroupList","onItemSelect","valueProperty","contentProperty","selectedProf","resetProfessionsHandler","Array","isArray","defaultProps","SearchBar","searchValue","getSearchValueHandler","placeholder","onChange","Users","setCurrentPage","sortBy","setSelectedProf","setSearchValue","filteredUsers","toLowerCase","filterUsers","sortedUsers","orderBy","length","cporUsers","items","pageNumber","startIndex","take","paginate","event","target","pageIndex","UserImage","src","alt","width","height","SingleCommentForUser","userId","createdAt","created_at","handleRemoveComment","commentsEndpoint","commentsService","createComment","comment","getComments","pageId","equalTo","deleteComment","commentId","CommentContext","useComments","CommentsProvider","useParams","comments","setComments","nanoid","prevstate","prevState","Comment","commentsForUser","TextArea","label","onChangeHandle","rows","htmlFor","validatorConfig","isRequired","isEmail","isCapitalLetter","isNumber","licence","validator","errors","validate","method","statusValidate","trim","fieldName","validateMethod","CommentSection","setData","setErrors","submitHandle","e","preventDefault","isValid","clearForm","onSubmit","prev","disabled","MeetingsCard","userById","QualityCard","UserInfoCard","pathname","state","SingleUserPage","UsersPage","NavProfile","isOpen","setIsOpen","NavBar","TextField","showPassword","setShowPassword","CheckField","checked","LoginForm","stayOn","location","from","SelectField","defaultOption","options","optionsArr","optionName","option","RadioField","handleChange","MultiSelectField","defaultValue","defaultValueToArray","closeMenuOnSelect","isMulti","classNamePrefix","RegisterForm","sex","newQualities","qual","newData","q","Login","formType","setFormType","toggleFormType","useMockData","statusConst","setStatus","progress","setProgress","count","setCount","summaryCount","incrementCount","prof","newProgress","updateProgress","initialize","Main","EditPage","defaultUserQualities","userMapedQualities","goBack","ProtectedRoute","Component","render","LogOut","App","path","exact","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a9c044fe.chunk.js","sourcesContent":["const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry)\n      getFID(onPerfEntry)\n      getFCP(onPerfEntry)\n      getLCP(onPerfEntry)\n      getTTFB(onPerfEntry)\n    })\n  }\n}\n\nexport default reportWebVitals\n","const TOKEN_KEY = 'jwt_token'\r\nconst REFRESH_KEY = 'jwt_refresh_token'\r\nconst EXPIRES_KEY = 'jwt_expires'\r\nconst USERID_KEY = 'user-local-id'\r\n\r\nexport const setToken = ({\r\n  refreshToken,\r\n  idToken,\r\n  localId,\r\n  expiresIn = 3600\r\n}) => {\r\n  const expiresDate = new Date().getTime() + expiresIn * 1000\r\n  localStorage.setItem(TOKEN_KEY, idToken)\r\n  localStorage.setItem(USERID_KEY, localId)\r\n  localStorage.setItem(REFRESH_KEY, refreshToken)\r\n  localStorage.setItem(EXPIRES_KEY, expiresDate)\r\n}\r\n\r\nexport const getAccessToken = () => {\r\n  return localStorage.getItem(TOKEN_KEY)\r\n}\r\nexport const getRefreshToken = () => {\r\n  return localStorage.getItem(REFRESH_KEY)\r\n}\r\nexport const getExpiresIn = () => {\r\n  return localStorage.getItem(EXPIRES_KEY)\r\n}\r\nexport const getUserId = () => {\r\n  return localStorage.getItem(USERID_KEY)\r\n}\r\nexport const removeAuthData = () => {\r\n  localStorage.removeItem(USERID_KEY)\r\n  localStorage.removeItem(EXPIRES_KEY)\r\n  localStorage.removeItem(TOKEN_KEY)\r\n  localStorage.removeItem(REFRESH_KEY)\r\n}\r\n\r\nconst localStorageService = {\r\n  setToken,\r\n  getAccessToken,\r\n  getRefreshToken,\r\n  getExpiresIn,\r\n  getUserId,\r\n  removeAuthData\r\n}\r\nexport default localStorageService\r\n","import React from 'react'\nconst Loader = () => {\n  return (\n    <div className=\"d-flex vh-100 align-items-center justify-content-center\">\n      <div className=\"spinner-border text-primary\" role=\"status\">\n        <span className=\"visually-hidden\">Loading...</span>\n      </div>\n    </div>\n  )\n}\n\nexport default Loader\n","export const MAIN_ROUTE = '/fast_company'\nexport const LOGIN_ROUTE = '/fast_company/login'\nexport const NEW_USER_ROUTE = '/fast_company/new_user'\nexport const NEW_USER_EDIT_ROUTE = '/fast_company/new_user/edit'\nexport const LOGOUT_ROUTE = '/logout'\nexport const USERS_ROUTE = '/fast_company/users'\n","import React, { useContext, useEffect, useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport axios from 'axios'\r\nimport { useHistory } from 'react-router-dom'\r\nimport userService from '../services/user.service'\r\nimport { toast } from 'react-toastify'\r\nimport localStorageService, { setToken } from '../services/localStorage.service'\r\nimport Loader from '../components/ui/loader'\r\nimport { MAIN_ROUTE } from '../utilits/constants'\r\n\r\nconst AuthContext = React.createContext()\r\nexport const httpAuth = axios.create()\r\nexport const useAuth = () => {\r\n  return useContext(AuthContext)\r\n}\r\n\r\nconst AuthProvider = ({ children }) => {\r\n  const [currentUser, setCurrentUser] = useState(undefined)\r\n  const [error, setError] = useState(null)\r\n  const [isLoading, setIsLoading] = useState(true)\r\n  const history = useHistory()\r\n\r\n  useEffect(() => {\r\n    if (error !== null) {\r\n      toast.error(error)\r\n      setError(null)\r\n    }\r\n  }, [error])\r\n\r\n  const getUserData = async () => {\r\n    try {\r\n      const { content } = await userService.getCurrentUser()\r\n      setCurrentUser(content)\r\n    } catch (error) {\r\n      errorCatcher(error)\r\n    } finally {\r\n      setIsLoading(false)\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (localStorageService.getAccessToken()) {\r\n      getUserData()\r\n    } else {\r\n      setIsLoading(false)\r\n    }\r\n  }, [])\r\n\r\n  const randomInt = (min, max) => {\r\n    return Math.floor(Math.random() * (max - min + 1) + min)\r\n  }\r\n\r\n  async function signUp({ email, password, ...rest }) {\r\n    const url = `https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=${process.env.REACT_APP_FIREBASE_KEY}`\r\n    try {\r\n      const { data } = await httpAuth.post(url, {\r\n        email,\r\n        password,\r\n        returnSecureToken: true\r\n      })\r\n      setToken(data)\r\n\r\n      await createUser({\r\n        _id: data.localId,\r\n        email,\r\n        rate: randomInt(1, 5),\r\n        completedMeetings: randomInt(0, 100),\r\n        image: `https://avatars.dicebear.com/api/avataaars/${(Math.random() + 1)\r\n          .toString(36)\r\n          .substring(7)}.svg`,\r\n        ...rest\r\n      })\r\n    } catch (error) {\r\n      errorCatcher(error)\r\n      const { code, message } = error.response.data.error\r\n      if (code === 400) {\r\n        if (message === 'EMAIL_EXISTS') {\r\n          const errorObj = {\r\n            email: 'User with this email already exist'\r\n          }\r\n          throw errorObj\r\n        }\r\n      }\r\n    }\r\n  }\r\n  async function createUser(data) {\r\n    try {\r\n      const { content } = await userService.create(data)\r\n      setCurrentUser(content)\r\n    } catch (error) {\r\n      errorCatcher(error)\r\n    }\r\n  }\r\n  function errorCatcher(error) {\r\n    const { message } = error.response.data\r\n    setError(message)\r\n  }\r\n\r\n  async function login({ email, password }) {\r\n    const url = `https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=${process.env.REACT_APP_FIREBASE_KEY}`\r\n    try {\r\n      const { data } = await httpAuth.post(url, {\r\n        email,\r\n        password,\r\n        returnSecureToken: true\r\n      })\r\n      setToken(data)\r\n      await getUserData()\r\n    } catch (error) {\r\n      errorCatcher(error)\r\n      const { code, message } = error.response.data.error\r\n      if (code === 400) {\r\n        let errorObj = {}\r\n        if (message === 'EMAIL_NOT_FOUND') {\r\n          errorObj = { ...errorObj, email: 'Please check your email' }\r\n          throw errorObj\r\n        }\r\n        if (message === 'INVALID_PASSWORD') {\r\n          errorObj = { ...errorObj, password: 'Please check your password' }\r\n          throw errorObj\r\n        }\r\n      }\r\n      console.log(code, message)\r\n    }\r\n  }\r\n  async function updateUser(formData) {\r\n    try {\r\n      const { content } = await userService.updateUser(formData)\r\n      if (content) {\r\n        await getUserData()\r\n      }\r\n    } catch (error) {\r\n      errorCatcher(error)\r\n    }\r\n  }\r\n\r\n  function logOut() {\r\n    localStorageService.removeAuthData()\r\n    setCurrentUser(null)\r\n    history.push(MAIN_ROUTE)\r\n  }\r\n\r\n  return (\r\n    <AuthContext.Provider\r\n      value={{ signUp, currentUser, login, logOut, updateUser }}\r\n    >\r\n      {!isLoading ? children : <Loader />}\r\n    </AuthContext.Provider>\r\n  )\r\n}\r\n\r\nAuthProvider.propTypes = {\r\n  children: PropTypes.oneOfType([\r\n    PropTypes.arrayOf(PropTypes.node),\r\n    PropTypes.node\r\n  ])\r\n}\r\n\r\nexport default AuthProvider\r\n","import axios from 'axios'\r\nimport { toast } from 'react-toastify'\r\nimport configFile from '../config.json'\r\nimport { httpAuth } from '../hooks/useAuth'\r\nimport localStorageService from './localStorage.service'\r\nconst http = axios.create({\r\n  baseURL: configFile.apiEndPoint\r\n})\r\n\r\nhttp.interceptors.request.use(\r\n  async function (config) {\r\n    if (configFile.isFireBase) {\r\n      const containSlash = /\\/$/gi.test(config.url)\r\n      config.url =\r\n        (containSlash ? config.url.slice(0, -1) : config.url) + '.json'\r\n      const expiresDate = localStorageService.getExpiresIn()\r\n      const refreshToken = localStorageService.getRefreshToken()\r\n      if (refreshToken && expiresDate < Date.now()) {\r\n        const { data } = await httpAuth.post(\r\n          `https://securetoken.googleapis.com/v1/token?key=${process.env.REACT_APP_FIREBASE_KEY}`,\r\n          {\r\n            grant_type: 'refresh_token',\r\n            refresh_token: refreshToken\r\n          }\r\n        )\r\n        localStorageService.setToken({\r\n          refreshToken: data.refresh_token,\r\n          idToken: data.id_token,\r\n          localId: data.user_id,\r\n          expiresIn: data.expires_in\r\n        })\r\n      }\r\n      const accessToken = localStorageService.getAccessToken()\r\n      if (accessToken) {\r\n        config.params = { ...config.params, auth: accessToken }\r\n      }\r\n    }\r\n    return config\r\n  },\r\n  function (error) {\r\n    return Promise.reject(error)\r\n  }\r\n)\r\nfunction transformData(data) {\r\n  return data && !data._id\r\n    ? Object.keys(data).map((key) => ({ ...data[key] }))\r\n    : data\r\n}\r\nhttp.interceptors.response.use(\r\n  (response) => {\r\n    if (configFile.isFireBase) {\r\n      response.data = { content: transformData(response.data) }\r\n    }\r\n    return response\r\n  },\r\n  function (error) {\r\n    const expectedError =\r\n      error.response &&\r\n      error.response.status >= 400 &&\r\n      error.response.status < 500\r\n\r\n    if (!expectedError) {\r\n      toast.info('Something went wrong. Please try again later')\r\n    }\r\n    return Promise.reject(error)\r\n  }\r\n)\r\nconst httpServise = {\r\n  get: http.get,\r\n  post: http.post,\r\n  put: http.put,\r\n  delete: http.delete\r\n}\r\nexport default httpServise\r\n","import httpService from './http.service'\r\nimport localStorageService from './localStorage.service'\r\n\r\nconst userEndpoint = 'user/'\r\n\r\nconst userService = {\r\n  get: async () => {\r\n    const { data } = await httpService.get(userEndpoint)\r\n    return data\r\n  },\r\n  create: async (payload) => {\r\n    const { data } = await httpService.put(userEndpoint + payload._id, payload)\r\n    return data\r\n  },\r\n  getCurrentUser: async () => {\r\n    const { data } = await httpService.get(\r\n      userEndpoint + localStorageService.getUserId()\r\n    )\r\n    return data\r\n  },\r\n  updateUser: async (payload) => {\r\n    const { data } = await httpService.put(userEndpoint + payload._id, {\r\n      ...payload\r\n    })\r\n    return data\r\n  }\r\n}\r\n\r\nexport default userService\r\n","import React, { useContext, useEffect, useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport userServise from '../services/user.service'\r\nimport { toast } from 'react-toastify'\r\nimport Loader from '../components/ui/loader'\r\nimport { useAuth } from './useAuth'\r\n\r\nconst UserContext = React.createContext()\r\n\r\nexport const useUsers = () => {\r\n  return useContext(UserContext)\r\n}\r\n\r\nconst UserProvider = ({ children }) => {\r\n  const [users, setUsers] = useState([])\r\n  const [loading, setLoading] = useState(true)\r\n  const [error, setError] = useState(null)\r\n  const { currentUser } = useAuth()\r\n\r\n  useEffect(() => {\r\n    getUsers()\r\n  }, [currentUser])\r\n\r\n  useEffect(() => {\r\n    if (error !== null) {\r\n      toast.error(error)\r\n      setError(null)\r\n    }\r\n  }, [error])\r\n\r\n  async function getUsers() {\r\n    try {\r\n      const { content } = await userServise.get()\r\n      setUsers(content)\r\n      setLoading(false)\r\n    } catch (error) {\r\n      errorCatcher(error)\r\n    }\r\n  }\r\n  function getUserById(id) {\r\n    return users.find((user) => user._id === id)\r\n  }\r\n\r\n  function errorCatcher(error) {\r\n    const { message } = error.response.data\r\n    setError(message)\r\n    setLoading(false)\r\n  }\r\n  return (\r\n    <UserContext.Provider value={{ users, getUserById }}>\r\n      {!loading ? children : <Loader />}\r\n    </UserContext.Provider>\r\n  )\r\n}\r\n\r\nUserProvider.propTypes = {\r\n  children: PropTypes.oneOfType([\r\n    PropTypes.arrayOf(PropTypes.node),\r\n    PropTypes.node\r\n  ])\r\n}\r\n\r\nexport default UserProvider\r\n","import React from 'react'\nimport _ from 'lodash'\nimport PropTypes from 'prop-types'\n\nconst Pagination = (props) => {\n  const { pageSize, itemsCount, onPageChange, currentPage } = props\n  const pageCount = Math.ceil(itemsCount / pageSize)\n  const pages = _.range(1, pageCount + 1)\n  if (pageCount === 1) return null\n  return (\n    <nav\n      aria-label=\"Page navigation example\"\n      className=\"d-flex justify-content-center w-100\"\n    >\n      <ul className=\"pagination m-0\">\n        {pages.map((page) => {\n          return (\n            <li\n              className={'page-item ' + (page === currentPage ? 'active' : '')}\n              key={page}\n            >\n              <button\n                type=\"button\"\n                className=\"page-link\"\n                onClick={() => {\n                  onPageChange(page)\n                }}\n              >\n                {page}\n              </button>\n            </li>\n          )\n        })}\n      </ul>\n    </nav>\n  )\n}\nPagination.propTypes = {\n  pageSize: PropTypes.number.isRequired,\n  itemsCount: PropTypes.number.isRequired,\n  onPageChange: PropTypes.func.isRequired,\n  currentPage: PropTypes.number.isRequired\n}\nexport default Pagination\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nconst Bookmark = ({ toggleBookMarkHanble, id, status }) => {\n  return (\n    <button\n      className=\"btn btn-lg  \"\n      onClick={() => {\n        toggleBookMarkHanble(id)\n      }}\n    >\n      {<i className={status ? 'bi bi-bookmark-fill' : 'bi bi-bookmark'}></i>}\n    </button>\n  )\n}\nBookmark.propTypes = {\n  toggleBookMarkHanble: PropTypes.func.isRequired,\n  id: PropTypes.string.isRequired,\n  status: PropTypes.bool\n}\nexport default Bookmark\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nconst Quality = ({ name, color }) => {\n  return (\n    <span\n      style={{ margin: '3px 3px', fontSize: '14px' }}\n      className={`badge bg-${color}`}\n    >\n      {name}\n    </span>\n  )\n}\nQuality.propTypes = {\n  _id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  color: PropTypes.string.isRequired\n}\nexport default Quality\n","import httpService from './http.service'\r\n\r\nconst qualityEndpoint = 'quality/'\r\n\r\nconst qualityService = {\r\n  get: async () => {\r\n    const { data } = await httpService.get(qualityEndpoint)\r\n    return data\r\n  }\r\n}\r\nexport default qualityService\r\n","import React, { useContext, useEffect, useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { toast } from 'react-toastify'\r\nimport qualityService from '../services/quality.service'\r\n\r\nconst qualityContext = React.createContext()\r\nexport const useQualities = () => {\r\n  return useContext(qualityContext)\r\n}\r\n\r\nconst QualityProvider = ({ children }) => {\r\n  const [qualities, setQualities] = useState([])\r\n  const [qualitiesLoading, setLoading] = useState(true)\r\n  const [error, setError] = useState(null)\r\n  useEffect(() => {\r\n    getQualities()\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    if (error !== null) {\r\n      toast.error(error)\r\n      setError(null)\r\n    }\r\n  }, [error])\r\n\r\n  async function getQualities() {\r\n    try {\r\n      const { content } = await qualityService.get()\r\n      setQualities(content)\r\n      setLoading(false)\r\n    } catch (error) {\r\n      errorCatcher(error)\r\n    }\r\n  }\r\n  // function getqualityById(id) {\r\n  //   return qualitys.find((x) => x._id === id)\r\n  // }\r\n  function errorCatcher(error) {\r\n    const { message } = error.response.data\r\n    setError(message)\r\n    setLoading(false)\r\n  }\r\n\r\n  return (\r\n    <qualityContext.Provider value={{ qualities, qualitiesLoading }}>\r\n      {children}\r\n    </qualityContext.Provider>\r\n  )\r\n}\r\nQualityProvider.propTypes = {\r\n  children: PropTypes.oneOfType([\r\n    PropTypes.arrayOf(PropTypes.node),\r\n    PropTypes.node\r\n  ])\r\n}\r\nexport default QualityProvider\r\n","import React from 'react'\nimport Quality from './quality'\nimport PropTypes from 'prop-types'\nimport { useQualities } from '../../../hooks/useQualities'\n\nconst QualityList = ({ qualities: qualitiesArr }) => {\n  const { qualities } = useQualities()\n\n  const intersection = qualities.filter((x) => qualitiesArr.includes(x._id))\n  return (\n    <>\n      {intersection.map((quality, i) => {\n        return <Quality key={i} {...quality} />\n      })}\n    </>\n  )\n}\nQualityList.propTypes = {\n  qualities: PropTypes.array\n}\nexport default QualityList\n","import QualityList from './qualityList'\n\nexport default QualityList\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nconst TableHeader = ({ currentSort, setSortBy, columns }) => {\n  const handleSort = (name) => {\n    if (currentSort.iter === name) {\n      setSortBy({\n        ...currentSort,\n        order: currentSort.order === 'asc' ? 'desc' : 'asc'\n      })\n    } else {\n      setSortBy({ iter: name, order: 'asc' })\n    }\n  }\n\n  const renderSortArrow = (currentSort, currentPath) => {\n    if (currentSort.iter === currentPath) {\n      if (currentSort.order === 'asc') {\n        return <i className=\"bi bi-caret-down-fill\"></i>\n      }\n      return <i className=\"bi bi-caret-up-fill\"></i>\n    }\n    return null\n  }\n\n  return (\n    <thead className=\"border-bottom border-dark\">\n      <tr>\n        {Object.keys(columns).map((column) => (\n          <th\n            onClick={\n              columns[column].iter\n                ? () => handleSort(columns[column].iter)\n                : undefined\n            }\n            {...{ role: columns[column].iter && 'button' }}\n            scope=\"col\"\n            className=\"text-start align-middle \"\n            key={column}\n          >\n            <div className=\"justify-content-center d-flex\">\n              {columns[column].name}{' '}\n              {renderSortArrow(currentSort, columns[column].iter)}\n            </div>\n          </th>\n        ))}\n      </tr>\n    </thead>\n  )\n}\nTableHeader.propTypes = {\n  handleSort: PropTypes.func,\n  currentSort: PropTypes.object,\n  setSortBy: PropTypes.func,\n  columns: PropTypes.object\n}\nexport default TableHeader\n","import React from 'react'\nimport { PropTypes } from 'prop-types'\nimport _ from 'lodash'\nimport { Link } from 'react-router-dom'\nimport { USERS_ROUTE } from '../../../utilits/constants'\n\nconst TableBody = ({ users, columns }) => {\n  const renderContent = (item, column) => {\n    if (columns[column].component) {\n      const component = columns[column].component\n      if (typeof component === 'function') {\n        return component(item)\n      }\n      return component\n    }\n    if (columns[column].iter === 'name') {\n      return <Link to={`${USERS_ROUTE}/${item._id}`}>{item.name}</Link>\n    }\n    return _.get(item, columns[column].iter)\n  }\n\n  return (\n    <>\n      <tbody>\n        {users.map((item) => (\n          <tr key={item._id}>\n            {Object.keys(columns).map((column) => (\n              <td key={column}>{renderContent(item, column)}</td>\n            ))}\n          </tr>\n        ))}\n      </tbody>\n    </>\n  )\n}\nTableBody.propTypes = {\n  users: PropTypes.array,\n  columns: PropTypes.object\n}\nexport default TableBody\n","import Table from './table'\nimport TableBody from './tableBody'\nimport TableHeader from './tableHeader'\n\nexport { TableBody, TableHeader }\nexport default Table\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport TableHeader from './tableHeader'\nimport TableBody from './tableBody'\n\nconst Table = ({ users, currentSort, setSortBy, columns, children }) => {\n  return (\n    <table className=\"table\">\n      {children || (\n        <>\n          <TableHeader\n            currentSort={currentSort}\n            setSortBy={setSortBy}\n            columns={columns}\n          />\n          <TableBody {...{ columns, users }} />\n        </>\n      )}\n    </table>\n  )\n}\nTable.propTypes = {\n  children: PropTypes.array,\n  users: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n  currentSort: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n  setSortBy: PropTypes.func,\n  columns: PropTypes.object\n}\nexport default Table\n","import httpService from './http.service'\r\n\r\nconst professionEndpoint = 'profession/'\r\n\r\nconst professionService = {\r\n  get: async () => {\r\n    const { data } = await httpService.get(professionEndpoint)\r\n    return data\r\n  }\r\n}\r\n\r\nexport default professionService\r\n","import React, { useContext, useEffect, useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { toast } from 'react-toastify'\r\nimport professionService from '../services/profession.service'\r\n\r\nconst ProfessionContext = React.createContext()\r\nexport const useProfessions = () => {\r\n  return useContext(ProfessionContext)\r\n}\r\n\r\nconst ProfessionProvider = ({ children }) => {\r\n  const [professions, setProfessions] = useState([])\r\n  const [profLoading, setLoading] = useState(true)\r\n  const [error, setError] = useState(null)\r\n  useEffect(() => {\r\n    getProfessions()\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    if (error !== null) {\r\n      toast.error(error)\r\n      setError(null)\r\n    }\r\n  }, [error])\r\n\r\n  async function getProfessions() {\r\n    try {\r\n      setLoading(true)\r\n      const { content } = await professionService.get()\r\n      setProfessions(content)\r\n      setLoading(false)\r\n    } catch (error) {\r\n      errorCatcher(error)\r\n    }\r\n  }\r\n  function getProfessionById(id) {\r\n    return professions.find((x) => x._id === id)\r\n  }\r\n  function errorCatcher(error) {\r\n    const { message } = error.response.data\r\n    setError(message)\r\n    setLoading(false)\r\n  }\r\n\r\n  return (\r\n    <ProfessionContext.Provider\r\n      value={{ professions, profLoading, getProfessionById }}\r\n    >\r\n      {children}\r\n    </ProfessionContext.Provider>\r\n  )\r\n}\r\nProfessionProvider.propTypes = {\r\n  children: PropTypes.oneOfType([\r\n    PropTypes.arrayOf(PropTypes.node),\r\n    PropTypes.node\r\n  ])\r\n}\r\nexport default ProfessionProvider\r\n","import PropTypes from 'prop-types'\r\nimport React from 'react'\r\nimport { useProfessions } from '../../hooks/useProfession'\r\n\r\nfunction Profession({ id }) {\r\n  const { getProfessionById } = useProfessions()\r\n\r\n  const profession = getProfessionById(id)\r\n\r\n  return <div>{profession && profession.name}</div>\r\n}\r\nProfession.propTypes = {\r\n  id: PropTypes.string\r\n}\r\nexport default Profession\r\n","import React from 'react'\nimport { PropTypes } from 'prop-types'\n\nimport Bookmark from '../common/Bookmark'\nimport QualityList from './qualities'\nimport Table, { TableHeader, TableBody } from '../../components/common/table'\nimport Profession from '../ui/profession'\n\nconst UsersTable = ({\n  users,\n  currentSort,\n  setSortBy,\n  toggleBookMarkHanble,\n  ...rest\n}) => {\n  const columns = {\n    name: { iter: 'name', name: 'Имя' },\n    qualities: {\n      name: 'Качество',\n      component: (user) => <QualityList qualities={user.qualities} />\n    },\n    professions: {\n      iter: 'profession',\n      name: 'Профессия',\n      component: (user) => <Profession id={user.profession} />\n    },\n    completedMeetings: {\n      iter: 'completedMeetings',\n      name: 'Встретился раз'\n    },\n    rate: { iter: 'rate', name: 'Оценка' },\n    bookmark: {\n      iter: 'status',\n      name: 'Избранное',\n      component: (user) => (\n        <Bookmark\n          toggleBookMarkHanble={toggleBookMarkHanble}\n          id={user._id}\n          status={user.status}\n        />\n      )\n    }\n    // delete: {\n    //   component: (user) => (\n    //     <button\n    //       className=\"btn btn-danger\"\n    //       onClick={() => {\n    //         deleteUserHandler(user._id)\n    //       }}\n    //     >\n    //       Delete\n    //     </button>\n    //   )\n    // }\n  }\n  return (\n    <Table\n      currentSort={currentSort}\n      setSortBy={setSortBy}\n      columns={columns}\n      users={users}\n    >\n      <TableHeader\n        currentSort={currentSort}\n        setSortBy={setSortBy}\n        columns={columns}\n      />\n      <TableBody {...{ columns, users }} />\n    </Table>\n  )\n}\n\nexport default UsersTable\nUsersTable.propTypes = {\n  users: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n  toggleBookMarkHanble: PropTypes.func,\n  currentSort: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n  setSortBy: PropTypes.func\n}\n","export const renderPhrase = (numbers) => {\n  let text = ''\n\n  const lastNumber = Number(numbers.toString().split('').slice(-1))\n  if (numbers === 0) return (text = 'Нет никого с кем можно тусануть')\n  if (numbers === 1) return `${numbers} человек тусанeт с тобой`\n  if (numbers > 1 && numbers < 5) {\n    return (text = `${numbers} человека тусанут с тобой`)\n  }\n\n  if (numbers > 14 && [2, 3, 4].includes(lastNumber)) {\n    return (text = `${numbers} человека тусанут с тобой`)\n  }\n  if (numbers > 14 && [1].includes(lastNumber)) {\n    return (text = `${numbers} человек тусанeт с тобой`)\n  }\n\n  text = `${numbers} человек тусанyт с тобой`\n  return text\n}\n\nexport const spanClass = (lenght) => {\n  let text = ''\n  lenght === 0 ? (text = 'badge bg-danger') : (text = 'badge bg-primary')\n\n  return text\n}\nexport const renderYears = (date) => {\n  let text = ''\n  const tadayYear = new Date().getFullYear()\n  const yearFromUserDate = Number(date.split('-')[0])\n\n  const difference = tadayYear - yearFromUserDate\n  const lastNumber = difference.toString().slice(-1)\n  switch (lastNumber) {\n    case '1':\n      text = 'год'\n      break\n    case '2':\n      text = 'года'\n      break\n    case '3':\n      text = 'года'\n      break\n    case '4':\n      text = 'года'\n      break\n    case '5':\n      text = 'лет'\n      break\n\n    default:\n      text = difference > 10 ? 'лет' : 'год'\n      break\n  }\n\n  return `(${difference} ${text}) `\n}\n\nexport const getCommentTime = (timeStamp) => {\n  const date = new Date(parseInt(timeStamp))\n  const dateNow = new Date()\n  const yearDif = dateNow.getFullYear() - date.getFullYear()\n\n  if (yearDif === 0) {\n    const dayDif = dateNow.getDay() - date.getDay()\n    if (dayDif === 0) {\n      const hourDif = dateNow.getHours() - date.getHours()\n      if (hourDif === 0) {\n        const minDif = dateNow.getMinutes() - date.getMinutes()\n        if (minDif >= 0 && minDif < 5) return '1 минуту назад'\n        if (minDif >= 5 && minDif < 10) return '5 минут назад'\n        if (minDif >= 10 && minDif < 30) return '10 минут назад'\n        return '30 минут назад'\n      }\n      return `${date.getHours()} : ${date.getMinutes()}`\n    }\n    return `${date.getDay()} ${date.toLocaleString('default', {\n      month: 'long'\n    })}`\n  }\n\n  return date.getFullYear() + '.' + (date.getMonth() + 1) + '_' + date.getDate()\n}\n","import React from 'react'\nimport { renderPhrase, spanClass } from '../../utilits/helpers'\nimport PropTypes from 'prop-types'\n\nconst SearchStatus = ({ userLength }) => {\n  return (\n    <div className=\"d-flex justify-content-center \">\n      <span\n        style={{ fontSize: '20px', margin: '20px' }}\n        className={spanClass(userLength)}\n      >\n        {renderPhrase(userLength)}\n      </span>\n    </div>\n  )\n}\nSearchStatus.propTypes = {\n  userLength: PropTypes.number.isRequired\n}\nexport default SearchStatus\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nconst GroupList = ({\n  professions,\n  onItemSelect,\n  valueProperty,\n  contentProperty,\n  selectedProf,\n  resetProfessionsHandler\n}) => {\n  return (\n    <div className=\"d-flex flex-column flex-shrink-0\">\n      <ul className=\"list-group mt-2\">\n        {!Array.isArray(professions) &&\n          Object.keys(professions).map((key) => {\n            return (\n              <li\n                key={professions[key][valueProperty]}\n                onClick={() => {\n                  onItemSelect(professions[key])\n                }}\n                className={\n                  selectedProf === professions[key]\n                    ? 'list-group-item active'\n                    : 'list-group-item '\n                }\n                role=\"button\"\n              >\n                {professions[key][contentProperty]}\n              </li>\n            )\n          })}\n\n        {professions.map((item) => {\n          return (\n            <li\n              key={item[valueProperty]}\n              onClick={() => {\n                onItemSelect(item)\n              }}\n              className={\n                selectedProf === item\n                  ? 'list-group-item active'\n                  : 'list-group-item '\n              }\n              role=\"button\"\n            >\n              {item[contentProperty]}\n            </li>\n          )\n        })}\n      </ul>\n      <div className=\"d-flex align-items-center justify-content-center\">\n        <button\n          className=\"btn btn-outline-primary mt-2 \"\n          onClick={resetProfessionsHandler}\n        >\n          Reset\n        </button>\n      </div>\n    </div>\n  )\n}\nGroupList.defaultProps = {\n  valueProperty: '_id',\n  contentProperty: 'name'\n}\nGroupList.propTypes = {\n  professions: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n  onItemSelect: PropTypes.func,\n  valueProperty: PropTypes.string.isRequired,\n  contentProperty: PropTypes.string.isRequired,\n  selectedProf: PropTypes.object,\n  resetProfessionsHandler: PropTypes.func\n}\nexport default GroupList\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nfunction SearchBar({ searchValue, getSearchValueHandler }) {\n  return (\n    <input\n      type=\"text\"\n      className=\"form-control\"\n      placeholder=\"Search...\"\n      value={searchValue}\n      onChange={getSearchValueHandler}\n    />\n  )\n}\n\nSearchBar.propTypes = {\n  getSearchValueHandler: PropTypes.func,\n  searchValue: PropTypes.string\n}\n\nexport default SearchBar\n","import Users from './Users'\n\nexport default Users\n","import React, { useState, useEffect } from 'react'\nimport Pagination from '../../components/common/Pagination'\nimport { paginate } from '../../utilits/paginate'\nimport PropTypes from 'prop-types'\nimport UsersTable from '../../components/ui/usersTable'\nimport SearchStatus from '../../components/ui/searchStatus'\nimport GroupList from '../../components/common/groupList'\nimport _ from 'lodash'\nimport SearchBar from '../../components/SearchBar'\nimport { useUsers } from '../../hooks/useUsers'\nimport { useProfessions } from '../../hooks/useProfession'\nimport Loader from '../../components/ui/loader'\nimport { useAuth } from '../../hooks/useAuth'\n\nconst Users = () => {\n  const [currentPage, setCurrentPage] = useState(1)\n  const [sortBy, setSortBy] = useState({ iter: 'name', order: 'asc' })\n  const [selectedProf, setSelectedProf] = useState()\n  const [searchValue, setSearchValue] = useState('')\n\n  const getSearchValueHandler = () => {\n    setSelectedProf()\n    setSearchValue(event.target.value)\n  }\n  const { users } = useUsers()\n  const { currentUser } = useAuth()\n  const { professions, profLoading } = useProfessions()\n\n  useEffect(() => {\n    setCurrentPage(1)\n  }, [selectedProf])\n\n  const resetProfessionsHandler = () => {\n    setSearchValue('')\n    setSelectedProf()\n  }\n  const professionSelectHandle = (item) => {\n    setSearchValue('')\n    setSelectedProf(item)\n  }\n  const pageChangehandle = (pageIndex) => {\n    setCurrentPage(pageIndex)\n  }\n\n  const toggleBookMarkHanble = (id) => {\n    const newUsers = [...users]\n    newUsers.filter((user) => {\n      if (user._id === id) {\n        user.status = !user.status\n        return user\n      }\n      return user\n    })\n  }\n\n  const pageSize = 3\n  const filterUsers = (data) => {\n    let filteredUsers = data\n\n    if (selectedProf) {\n      filteredUsers = data.filter(\n        (user) => user.profession === selectedProf._id\n      )\n    } else if (searchValue) {\n      filteredUsers = data.filter((user) =>\n        user.name.toLowerCase().includes(searchValue.toLowerCase())\n      )\n    }\n    return filteredUsers.filter((user) => user._id !== currentUser._id)\n  }\n\n  const filteredUsers = filterUsers(users)\n\n  const sortedUsers = _.orderBy(filteredUsers, [sortBy.iter], [sortBy.order])\n  const userLength = sortedUsers.length\n\n  const cporUsers = paginate(sortedUsers, currentPage, pageSize)\n\n  if (profLoading) {\n    return <Loader />\n  }\n\n  return (\n    <div className=\"container shadow mt-4\">\n      <div className=\"row mb-4\">\n        <SearchStatus userLength={userLength} />\n        <div className=\"col-md-2 mb-3\">\n          {\n            <GroupList\n              professions={professions}\n              onItemSelect={professionSelectHandle}\n              selectedProf={selectedProf}\n              resetProfessionsHandler={resetProfessionsHandler}\n            />\n          }\n        </div>\n        <div className=\"col-md-10\">\n          <SearchBar\n            searchValue={searchValue}\n            getSearchValueHandler={getSearchValueHandler}\n          />\n          <div>\n            <UsersTable\n              users={cporUsers}\n              setSortBy={setSortBy}\n              currentSort={sortBy}\n              toggleBookMarkHanble={toggleBookMarkHanble}\n            />\n            <div className=\"mb-3\">\n              <Pagination\n                itemsCount={userLength}\n                pageSize={pageSize}\n                onPageChange={pageChangehandle}\n                currentPage={currentPage}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\nUsers.propTypes = {\n  users: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n  selectedProf: PropTypes.object,\n  setCount: PropTypes.func,\n  professions: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n  professionSelectHandle: PropTypes.func,\n  resetProfessionsHandler: PropTypes.func\n}\nexport default Users\n","import _ from 'lodash'\n\nexport function paginate(items, pageNumber, pageSize) {\n  const startIndex = (pageNumber - 1) * pageSize\n  // _.slice(items, startIndex)\n  // _.take(_.slice(items, startIndex), pageSize)\n  return _(items).slice(startIndex).take(pageSize).value()\n}\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nfunction UserImage({ image }) {\r\n  return (\r\n    <img\r\n      src={image}\r\n      className=\"rounded-circle shadow-1-strong me-3\"\r\n      alt=\"avatar\"\r\n      width=\"65\"\r\n      height=\"65\"\r\n    />\r\n  )\r\n}\r\nUserImage.propTypes = {\r\n  image: PropTypes.string\r\n}\r\n\r\nexport default UserImage\r\n","import React from 'react'\r\nimport UserImage from '../ui/UserImage'\r\nimport PropTypes from 'prop-types'\r\nimport { getCommentTime } from '../../utilits/helpers'\r\nimport { useUsers } from '../../hooks/useUsers'\r\nimport { useAuth } from '../../hooks/useAuth'\r\n\r\nfunction SingleCommentForUser({\r\n  userId,\r\n  content,\r\n  created_at: createdAt,\r\n  handleRemoveComment,\r\n  _id\r\n}) {\r\n  const { getUserById } = useUsers()\r\n  const user = getUserById(userId)\r\n  const { currentUser } = useAuth()\r\n\r\n  return (\r\n    <div className=\"bg-light card-body  mb-3\">\r\n      <div className=\"row\">\r\n        <div className=\"col\">\r\n          <div className=\"d-flex flex-start \">\r\n            <UserImage image={user.image} />\r\n            <div className=\"flex-grow-1 flex-shrink-1\">\r\n              <div className=\"mb-4\">\r\n                <div className=\"d-flex justify-content-between align-items-center\">\r\n                  <p className=\"mb-1 \">\r\n                    {user.name}\r\n                    <span className=\"small ms-3\">\r\n                      {getCommentTime(createdAt)}\r\n                    </span>\r\n                  </p>\r\n                  {currentUser._id === userId && (\r\n                    <button\r\n                      className=\"btn btn-sm text-primary d-flex align-items-center\r\n                  \"\r\n                      onClick={() => handleRemoveComment(_id)}\r\n                    >\r\n                      <i className=\"bi bi-x-lg\"></i>\r\n                    </button>\r\n                  )}\r\n                </div>\r\n                <p className=\"small mb-0\">{content}</p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\nSingleCommentForUser.propTypes = {\r\n  allUsers: PropTypes.oneOfType([PropTypes.array, PropTypes.object]),\r\n  userId: PropTypes.string,\r\n  _id: PropTypes.string,\r\n  pageId: PropTypes.string,\r\n  content: PropTypes.string,\r\n  loading: PropTypes.bool,\r\n  handleRemoveComment: PropTypes.func,\r\n  created_at: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\r\n}\r\nexport default SingleCommentForUser\r\n","import httpService from './http.service'\r\n\r\nconst commentsEndpoint = 'comments/'\r\n\r\nconst commentsService = {\r\n  createComment: async (comment) => {\r\n    const { data } = await httpService.put(\r\n      commentsEndpoint + comment._id,\r\n      comment\r\n    )\r\n    return data\r\n  },\r\n  getComments: async (pageId) => {\r\n    const { data } = await httpService.get(commentsEndpoint, {\r\n      params: {\r\n        orderBy: '\"pageId\"',\r\n        equalTo: `\"${pageId}\"`\r\n      }\r\n    })\r\n    return data\r\n  },\r\n  deleteComment: async (commentId) => {\r\n    const { data } = await httpService.delete(commentsEndpoint + commentId)\r\n    return data\r\n  }\r\n}\r\nexport default commentsService\r\n","import React, { useState, useContext, useEffect } from 'react'\r\nimport { nanoid } from 'nanoid'\r\nimport PropTypes from 'prop-types'\r\nimport { useParams } from 'react-router-dom'\r\nimport { useAuth } from './useAuth'\r\nimport { toast } from 'react-toastify'\r\nimport commentsService from '../services/comment.service'\r\n// import Loader from '../components/ui/loader'\r\n\r\nconst CommentContext = React.createContext()\r\n\r\nexport const useComments = () => {\r\n  return useContext(CommentContext)\r\n}\r\n\r\nexport const CommentsProvider = ({ children }) => {\r\n  const { id } = useParams()\r\n  const { currentUser } = useAuth()\r\n  const [, setLoading] = useState(true)\r\n  const [comments, setComments] = useState([])\r\n  const [error, setError] = useState(null)\r\n  useEffect(() => {\r\n    if (error !== null) {\r\n      toast.error(error)\r\n      setError(null)\r\n    }\r\n  }, [error])\r\n\r\n  useEffect(() => {\r\n    getComments(id)\r\n    return () => {\r\n      setLoading(false)\r\n    }\r\n  }, [id])\r\n\r\n  async function createComment(data) {\r\n    const comment = {\r\n      ...data,\r\n      pageId: id,\r\n      created_at: Date.now(),\r\n      userId: currentUser._id,\r\n      _id: nanoid()\r\n    }\r\n    try {\r\n      setLoading(true)\r\n      const { content } = await commentsService.createComment(comment)\r\n      setComments((prevstate) => [content, ...prevstate])\r\n    } catch (error) {\r\n      errorCatcher(error)\r\n    } finally {\r\n      setLoading(false)\r\n    }\r\n  }\r\n  async function getComments(userId) {\r\n    try {\r\n      const { content } = await commentsService.getComments(userId)\r\n      setComments(content)\r\n    } catch (error) {\r\n      errorCatcher(error)\r\n    } finally {\r\n      setLoading(false)\r\n    }\r\n  }\r\n  async function deleteComment(commentId) {\r\n    try {\r\n      const { content } = await commentsService.deleteComment(commentId)\r\n      if (content === null) {\r\n        setComments((prevState) =>\r\n          prevState.filter((comment) => comment._id !== commentId)\r\n        )\r\n      }\r\n    } catch (error) {\r\n      errorCatcher(error)\r\n    }\r\n  }\r\n\r\n  function errorCatcher(error) {\r\n    const { message } = error.response.data\r\n    setError(message)\r\n    setLoading(false)\r\n  }\r\n\r\n  return (\r\n    <CommentContext.Provider value={{ comments, createComment, deleteComment }}>\r\n      {children}\r\n    </CommentContext.Provider>\r\n  )\r\n}\r\nCommentsProvider.propTypes = {\r\n  children: PropTypes.oneOfType([\r\n    PropTypes.arrayOf(PropTypes.node),\r\n    PropTypes.node\r\n  ])\r\n}\r\n","import React from 'react'\r\n\r\nimport PropTypes from 'prop-types'\r\nimport SingleCommentForUser from './SingleCommentForUser'\r\nimport { useComments } from '../../hooks/useComments'\r\n\r\nfunction Comment({ commentsForUser }) {\r\n  const { deleteComment } = useComments()\r\n  if (commentsForUser.length === 0) {\r\n    return <div>Нет комментариев, вы будете первым</div>\r\n  }\r\n\r\n  const handleRemoveComment = (id) => {\r\n    deleteComment(id)\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {commentsForUser.map((comment) => (\r\n        <SingleCommentForUser\r\n          key={comment._id}\r\n          {...comment}\r\n          handleRemoveComment={handleRemoveComment}\r\n        />\r\n      ))}\r\n    </>\r\n  )\r\n}\r\nComment.propTypes = {\r\n  id: PropTypes.string,\r\n  loading: PropTypes.bool,\r\n  allUsers: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\r\n  commentsForUser: PropTypes.array,\r\n  setCommentsForUser: PropTypes.func,\r\n  getUsersCommentsFromDB: PropTypes.func\r\n}\r\nexport default Comment\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nfunction TextArea({\r\n  label,\r\n  placeholder,\r\n  name,\r\n  onChangeHandle,\r\n  value,\r\n  rows = 3,\r\n  error\r\n}) {\r\n  const getInputClasses = () => {\r\n    return `${error ? 'form-control p-1 is-invalid' : 'form-control p-1'} `\r\n  }\r\n  const handleChange = ({ target }) => {\r\n    onChangeHandle({ name: target.id, value: target.value })\r\n  }\r\n  return (\r\n    <div className=\"my-3\">\r\n      <label htmlFor={name} className=\"mb-3\">\r\n        {label}\r\n      </label>\r\n\r\n      <div className=\"form-floating \">\r\n        <textarea\r\n          className={getInputClasses()}\r\n          placeholder={placeholder}\r\n          id={name}\r\n          style={{ height: rows * 24 + 'px' }}\r\n          value={value}\r\n          onChange={handleChange}\r\n        ></textarea>\r\n        {error && <div className=\"invalid-feedback text-danger\">{error}</div>}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\nTextArea.propTypes = {\r\n  label: PropTypes.string,\r\n  placeholder: PropTypes.string,\r\n  name: PropTypes.string,\r\n  onChangeHandle: PropTypes.func,\r\n  value: PropTypes.string,\r\n  type: PropTypes.string,\r\n  error: PropTypes.string,\r\n  rows: PropTypes.number\r\n}\r\nexport default TextArea\r\n","export const validatorConfig = {\n  email: {\n    isRequired: {\n      message: 'Электронная почта обязательна для заполнения'\n    },\n    isEmail: {\n      message: 'Проверьте правильность вашего email'\n    }\n  },\n  password: {\n    isRequired: { message: 'Пароль обязателен для заполнения' },\n    isCapitalLetter: { message: 'Пароль должен содержать загланую букву' },\n    isNumber: { message: 'Пароль должен содержать цыфру' },\n    min: {\n      message: 'Пароль должен быть не меньше 8 символов',\n      value: 8\n    }\n  },\n  profession: {\n    isRequired: { message: 'Профессия обязательна к выбору' }\n  },\n  licence: {\n    isRequired: {\n      message: 'Вы не можете использовать наш сервис без принятия лицензии'\n    }\n  },\n  name: {\n    isRequired: {\n      message: 'Имя обязательно для заполнения'\n    }\n  },\n  qualities: {\n    isRequired: {\n      message: 'Выбирете хотя б одно качество'\n    }\n  },\n  // userId: {\n  //   isRequired: {\n  //     message: 'Выбирете хотя б одного пользователя'\n  //   }\n  // },\n  content: {\n    isRequired: {\n      message: 'Поле обязательно для заполнения'\n    }\n  }\n}\n","export const validator = (data, config) => {\n  const errors = {}\n  function validate(method, data, config) {\n    let statusValidate\n    switch (method) {\n      case 'isRequired': {\n        try {\n          if (typeof data === 'boolean') {\n            statusValidate = !data\n          } else {\n            statusValidate =\n              typeof data === 'object'\n                ? Object.keys(data).length === 0\n                : Array.isArray(data)\n                ? data.length === 0\n                : data.trim() === ''\n          }\n        } catch (error) {\n          console.log(error.message)\n        }\n\n        break\n      }\n      case 'isEmail':\n        {\n          const emailRegExp = /^\\S+@\\S+\\.\\S+$/g\n          statusValidate = !emailRegExp.test(data)\n        }\n        break\n      case 'isCapitalLetter':\n        {\n          const passwordRegExp = /[A-Z]+/g\n          statusValidate = !passwordRegExp.test(data)\n        }\n        break\n      case 'isNumber':\n        {\n          const passwordRegExp = /\\d+/g\n          statusValidate = !passwordRegExp.test(data)\n        }\n        break\n      case 'min':\n        statusValidate = data.length < config.value\n        break\n      case 'isCorrectDate':\n        statusValidate = Number(data.split('-')[0]) > new Date().getFullYear()\n        break\n      case 'isValidLink':\n        {\n          const linkRegExp = /^\\S+:\\/\\/\\S+\\.\\S+/g\n          statusValidate = !linkRegExp.test(data)\n        }\n        break\n\n      default:\n        break\n    }\n    if (statusValidate) return config.message\n  }\n\n  for (const fieldName in data) {\n    for (const validateMethod in config[fieldName]) {\n      const error = validate(\n        validateMethod,\n        data[fieldName],\n        config[fieldName][validateMethod]\n      )\n      if (error && !errors[fieldName]) {\n        errors[fieldName] = error\n      }\n    }\n  }\n  return errors\n}\n","import React, { useEffect, useState } from 'react'\r\nimport Comment from './Comment'\r\nimport TextArea from '../common/form/TextArea'\r\nimport PropTypes from 'prop-types'\r\nimport { validatorConfig } from '../../utilits/validatorConfig'\r\nimport { validator } from '../../utilits/validator'\r\nimport { useComments } from '../../hooks/useComments'\r\n\r\nfunction CommentSection() {\r\n  const [data, setData] = useState({ content: '' })\r\n  const [errors, setErrors] = useState({})\r\n\r\n  const { createComment, comments } = useComments()\r\n\r\n  const submitHandle = async (e) => {\r\n    try {\r\n      e.preventDefault()\r\n      if (!isValid) {\r\n        return\r\n      }\r\n      await createComment(data)\r\n      clearForm()\r\n    } catch (error) {\r\n      console.log(error)\r\n    }\r\n  }\r\n  const clearForm = () => {\r\n    setData({ content: '' })\r\n    setErrors({})\r\n  }\r\n\r\n  const onChangeHandle = (target) => {\r\n    setData((prev) => ({ ...prev, [target.name]: target.value }))\r\n  }\r\n\r\n  const validate = () => {\r\n    const errors = validator(data, validatorConfig)\r\n\r\n    setErrors(errors)\r\n    return Object.keys(errors).length === 0\r\n  }\r\n  useEffect(() => {\r\n    validate()\r\n  }, [data])\r\n\r\n  const isValid = Object.keys(errors).length === 0\r\n\r\n  return (\r\n    <>\r\n      <div className=\"card mb-2\" onSubmit={submitHandle}>\r\n        <div className=\"card-body \">\r\n          <form className=\"d-flex flex-column needs-validation\">\r\n            <h2>New Comment</h2>\r\n\r\n            <TextArea\r\n              name=\"content\"\r\n              label=\"Сообщение\"\r\n              onChangeHandle={onChangeHandle}\r\n              placeholder=\"Ваш комментарий ...\"\r\n              value={data.content || ''}\r\n              error={errors.content}\r\n            />\r\n            <button\r\n              type=\"submit\"\r\n              className=\"mt-3 align-self-end btn btn-primary\"\r\n              disabled={!isValid}\r\n            >\r\n              Опубликовать\r\n            </button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n      <div className=\"card mb-3\">\r\n        <div className=\"card-body \">\r\n          <h2>Comments</h2>\r\n          <hr />\r\n          <Comment commentsForUser={comments} />\r\n        </div>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\nCommentSection.propTypes = {\r\n  allUsers: PropTypes.object,\r\n  id: PropTypes.string\r\n}\r\n\r\nexport default CommentSection\r\n","import React from 'react'\r\n\r\nfunction MeetingsCard(userById) {\r\n  const { completedMeetings } = userById\r\n  return (\r\n    <div className=\"card mb-3\">\r\n      <div className=\"card-body d-flex flex-column justify-content-center text-center\">\r\n        <h5 className=\"card-title\">\r\n          <span>Completed meetings</span>\r\n        </h5>\r\n\r\n        <h1 className=\"display-1\">{completedMeetings}</h1>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default MeetingsCard\r\n","import React from 'react'\r\nimport QualityList from '../ui/qualities/qualityList'\r\nimport PropTypes from 'prop-types'\r\n\r\nfunction QualityCard({ qualities }) {\r\n  return (\r\n    <div className=\"card mb-3\">\r\n      <div className=\"card-body d-flex flex-column justify-content-center text-center\">\r\n        <h5 className=\"card-title\">\r\n          <span>Qualities</span>\r\n        </h5>\r\n        <p className=\"card-text\">\r\n          <QualityList qualities={qualities} />\r\n        </p>\r\n        <div></div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\nQualityCard.propTypes = {\r\n  qualities: PropTypes.array\r\n}\r\nexport default QualityCard\r\n","import React from 'react'\r\nimport UserImage from '../ui/UserImage'\r\nimport PropTypes from 'prop-types'\r\nimport { USERS_ROUTE } from '../../utilits/constants'\r\nimport { Link } from 'react-router-dom'\r\nimport { useAuth } from '../../hooks/useAuth'\r\n\r\nfunction UserInfoCard(userById) {\r\n  const { name, rate, profession, _id, image } = userById\r\n  const { currentUser } = useAuth()\r\n  return (\r\n    <div className=\"card mb-3\">\r\n      <div className=\"card-body\">\r\n        {currentUser._id === _id && (\r\n          <Link\r\n            to={{\r\n              pathname: USERS_ROUTE + '/' + _id + '/edit',\r\n              state: userById\r\n            }}\r\n          >\r\n            <button className=\"position-absolute top-0 end-0 btn btn-light btn-sm\">\r\n              <i className=\"bi bi-gear\"></i>\r\n            </button>\r\n          </Link>\r\n        )}\r\n\r\n        <div className=\"d-flex flex-column align-items-center text-center position-relative\">\r\n          <UserImage image={image} />\r\n          <div className=\"mt-3\">\r\n            <h4>{name}</h4>\r\n            <p className=\"text-secondary mb-1\">{profession.name}</p>\r\n            <div className=\"text-muted\">\r\n              <i\r\n                className=\"bi bi-caret-down-fill text-primary\"\r\n                role=\"button\"\r\n              ></i>\r\n              <i className=\"bi bi-caret-up text-secondary\" role=\"button\"></i>\r\n              <span className=\"ms-2\">{rate}</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\nUserInfoCard.propTypes = {\r\n  userById: PropTypes.object\r\n}\r\nexport default UserInfoCard\r\n","import SingleUserPage from './singleUserPage'\nexport default SingleUserPage\n","import React from 'react'\nimport { useUsers } from '../../hooks/useUsers'\nimport CommentSection from '../../components/user/CommenSection'\nimport MeetingsCard from '../../components/user/MeetingsCard'\nimport QualityCard from '../../components/user/QualityCard'\nimport UserInfoCard from '../../components/user/UserInfoCard'\nimport { useParams } from 'react-router-dom'\nimport { CommentsProvider } from '../../hooks/useComments'\n\nconst SingleUserPage = () => {\n  const { id } = useParams()\n\n  const { getUserById } = useUsers()\n  const userById = getUserById(id)\n  console.log(userById)\n\n  return (\n    <div className=\"container p-4\">\n      <div className=\"row gutters-sm\">\n        <div className=\"col-md-4 mb-3\">\n          <UserInfoCard {...userById} />\n          <QualityCard qualities={userById.qualities} />\n          <MeetingsCard {...userById} />\n        </div>\n\n        <div className=\"col-md-8 \">\n          <CommentsProvider>\n            <CommentSection />\n          </CommentsProvider>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default SingleUserPage\n","import React from 'react'\nimport { useParams } from 'react-router-dom'\nimport UserProvider from '../hooks/useUsers'\nimport Users from '../pages/usersListPage'\nimport SingleUserPage from './usersPage'\n\nconst UsersPage = () => {\n  const { id } = useParams()\n\n  return (\n    <UserProvider>\n      <div>{id ? <SingleUserPage userId={id} /> : <Users />}</div>\n    </UserProvider>\n  )\n}\n\nexport default UsersPage\n","import React, { useState } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { useAuth } from '../hooks/useAuth'\r\nimport { LOGOUT_ROUTE, USERS_ROUTE } from '../utilits/constants'\r\n\r\nfunction NavProfile() {\r\n  const { currentUser } = useAuth()\r\n  const [isOpen, setIsOpen] = useState(false)\r\n  const toggleMenu = () => {\r\n    setIsOpen((prevState) => !prevState)\r\n  }\r\n\r\n  return (\r\n    <div className=\"dropdown\" onClick={toggleMenu}>\r\n      <div className=\"btn dropdown-toggle d-flex align-items-center\">\r\n        <div className=\"me-3\">{currentUser.name}</div>\r\n        <img\r\n          src={currentUser.image}\r\n          alt=\"user image\"\r\n          height=\"40\"\r\n          className=\"img-responsive rounded-circle\"\r\n        />\r\n      </div>\r\n      <div className={`w-100 dropdown-menu ${isOpen ? 'show' : ''}`}>\r\n        <Link\r\n          to={`${USERS_ROUTE}/${currentUser._id}`}\r\n          className=\"dropdown-item\"\r\n        >\r\n          Profile\r\n        </Link>\r\n        <Link to={LOGOUT_ROUTE} className=\"dropdown-item\">\r\n          Log Out\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default NavProfile\r\n","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport { LOGIN_ROUTE, MAIN_ROUTE, USERS_ROUTE } from '../utilits/constants'\nimport { useAuth } from '../hooks/useAuth'\nimport NavProfile from './NavProfile'\n\nconst NavBar = () => {\n  const { currentUser } = useAuth()\n  return (\n    <nav className=\"navbar bg-light mb-3 \">\n      <div className=\"container-fluid\">\n        <ul className=\"nav\">\n          <li className=\"nav-item\">\n            <Link className=\"nav-link \" to={MAIN_ROUTE}>\n              Main\n            </Link>\n          </li>\n          {currentUser && (\n            <li className=\"nav-item\">\n              <Link className=\"nav-link\" to={USERS_ROUTE}>\n                Users\n              </Link>\n            </li>\n          )}\n        </ul>\n        <div className=\"d-flex align-items-center justify-content-center\">\n          {currentUser && <NavProfile />}\n\n          {!currentUser && (\n            <Link className=\"nav-link\" to={LOGIN_ROUTE}>\n              Login\n            </Link>\n          )}\n        </div>\n      </div>\n    </nav>\n  )\n}\n\nexport default NavBar\n","import React, { useState } from 'react'\nimport PropTypes from 'prop-types'\n\nfunction TextField({ label, name, onChangeHandle, value, type, error }) {\n  const getInputClasses = () => {\n    return `${error ? 'form-control is-invalid' : 'form-control'} `\n  }\n  const [showPassword, setShowPassword] = useState(false)\n\n  const handleChange = ({ target }) => {\n    onChangeHandle({ name: target.name, value: target.value })\n  }\n\n  const toggleShowPassword = () => {\n    setShowPassword((prev) => !prev)\n  }\n\n  return (\n    <div className=\"d-flex flex-column mt-3\">\n      <label htmlFor={name} className=\"mb-2\">\n        {label}\n      </label>\n      <div className=\"input-group has-validation\">\n        <input\n          type={showPassword ? 'text' : type}\n          id={name}\n          value={value}\n          name={name}\n          onChange={handleChange}\n          className={getInputClasses()}\n        />\n        {type === 'password' && (\n          <span\n            className=\"btn btn-outline-secondary \"\n            type=\"button\"\n            onClick={toggleShowPassword}\n          >\n            <i className={showPassword ? 'bi bi-eye' : 'bi bi-eye-slash'}></i>\n          </span>\n        )}\n\n        {error && <div className=\"invalid-feedback text-danger\">{error}</div>}\n      </div>\n    </div>\n  )\n}\nTextField.defaultProps = { type: 'text' }\nTextField.propTypes = {\n  label: PropTypes.string,\n  name: PropTypes.string,\n  onChangeHandle: PropTypes.func,\n  value: PropTypes.string,\n  type: PropTypes.string,\n  error: PropTypes.string\n}\n\nexport default TextField\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nfunction CheckField({ name, value, onChangeHandle, children, error }) {\r\n  const handleChange = () => {\r\n    onChangeHandle({ name: name, value: !value })\r\n  }\r\n  const getInputClasses = () => {\r\n    return `${error ? 'form-check-label is-invalid' : 'form-check-label'} `\r\n  }\r\n\r\n  return (\r\n    <div className=\"form-check my-3\">\r\n      <input\r\n        className=\"form-check-input\"\r\n        type=\"checkbox\"\r\n        value=\"\"\r\n        checked={value}\r\n        id={name}\r\n        onChange={handleChange}\r\n      />\r\n      <label className={getInputClasses()} htmlFor={name}>\r\n        {children}\r\n      </label>\r\n\r\n      {error && <div className=\"invalid-feedback\">{error}</div>}\r\n    </div>\r\n  )\r\n}\r\nCheckField.propTypes = {\r\n  name: PropTypes.string,\r\n  error: PropTypes.string,\r\n  value: PropTypes.bool,\r\n  onChangeHandle: PropTypes.func,\r\n  children: PropTypes.oneOfType([\r\n    PropTypes.arrayOf(PropTypes.node),\r\n    PropTypes.node\r\n  ])\r\n}\r\nexport default CheckField\r\n","import React, { useEffect, useState } from 'react'\nimport TextField from '../../common/form/TextField'\nimport { validator } from '../../../utilits/validator'\nimport { validatorConfig } from '../../../utilits/validatorConfig'\nimport CheckField from '../../common/form/CheckField'\nimport { useAuth } from '../../../hooks/useAuth'\nimport { useHistory } from 'react-router-dom'\nimport { MAIN_ROUTE } from '../../../utilits/constants'\n\nfunction LoginForm() {\n  const history = useHistory()\n  const [data, setData] = useState({ email: '', password: '', stayOn: false })\n  const [errors, setErrors] = useState({})\n  const onChangeHandle = (target) => {\n    setData((prev) => ({ ...prev, [target.name]: target.value }))\n  }\n  const { login } = useAuth()\n\n  const submitHandle = async (e) => {\n    try {\n      e.preventDefault()\n      const isValid = validate()\n      if (!isValid) {\n        return\n      }\n\n      await login(data)\n      history.push(\n        history.location.state\n          ? history.location.state.from.pathname\n          : MAIN_ROUTE\n      )\n    } catch (error) {\n      setErrors(error)\n    }\n  }\n\n  const validate = () => {\n    const errors = validator(data, validatorConfig)\n    setErrors(errors)\n\n    return Object.keys(errors).length === 0\n  }\n\n  useEffect(() => {\n    validate()\n    return () => {}\n  }, [data])\n\n  const isValid = Object.keys(errors).length === 0\n  return (\n    <form onSubmit={submitHandle} className=\"d-flex flex-column\">\n      <h3 className=\"mb-4\">Login</h3>\n      <TextField\n        name=\"email\"\n        value={data.email}\n        onChangeHandle={onChangeHandle}\n        label=\"Введите вашу электронную почту\"\n        error={errors.email}\n      />\n      <TextField\n        name=\"password\"\n        value={data.password}\n        onChangeHandle={onChangeHandle}\n        label=\"Введите ваш пароль\"\n        type=\"password\"\n        error={errors.password}\n      />\n\n      <CheckField\n        name=\"stayOn\"\n        value={data.stayOn}\n        onChangeHandle={onChangeHandle}\n      >\n        Оставаться в системе\n      </CheckField>\n      <button\n        type=\"submit\"\n        className=\"mt-3 align-self-end btn btn-primary\"\n        disabled={!isValid}\n      >\n        Submit\n      </button>\n    </form>\n  )\n}\n\nexport default LoginForm\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport Loader from '../../ui/loader'\r\n\r\nfunction SelectField({\r\n  defaultOption,\r\n  onChangeHandle,\r\n  options,\r\n  label,\r\n  value,\r\n  error,\r\n  name,\r\n  loading\r\n}) {\r\n  const getInputClasses = () => {\r\n    return `${error ? 'form-select is-invalid' : 'form-select'} `\r\n  }\r\n  const optionsArr =\r\n    !Array.isArray(options) && typeof options === 'object'\r\n      ? Object.keys(options).map((optionName) => ({\r\n          name: optionName,\r\n          value: options[optionName]._id,\r\n          key: options[optionName]._id\r\n        }))\r\n      : options\r\n\r\n  const handleChange = ({ target }) => {\r\n    onChangeHandle({ name: target.name, value: target.value })\r\n  }\r\n  if (typeof value === 'object') {\r\n    value = value._id\r\n  }\r\n  if (loading) {\r\n    return <Loader />\r\n  }\r\n\r\n  return (\r\n    <div className=\"d-flex flex-column mt-3\">\r\n      <label htmlFor=\"validationCustom04\" className=\"form-label\">\r\n        {label}\r\n      </label>\r\n      <select\r\n        className={getInputClasses()}\r\n        id=\"validationCustom04\"\r\n        value={value}\r\n        onChange={handleChange}\r\n        name={name}\r\n      >\r\n        <option disabled value=\"\">\r\n          {defaultOption}\r\n        </option>\r\n        {optionsArr &&\r\n          optionsArr.map((option) => {\r\n            return (\r\n              <option key={option._id} value={option._id}>\r\n                {option.name}\r\n              </option>\r\n            )\r\n          })}\r\n      </select>\r\n      {error && <div className=\"invalid-feedback\">{error}</div>}\r\n    </div>\r\n  )\r\n}\r\nSelectField.defaultOption = { error: `Please select something` }\r\n\r\nSelectField.propTypes = {\r\n  defaultOption: PropTypes.string,\r\n  onChangeHandle: PropTypes.func,\r\n  options: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\r\n  label: PropTypes.string,\r\n  value: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\r\n  error: PropTypes.string,\r\n  name: PropTypes.string,\r\n  loading: PropTypes.bool\r\n}\r\n\r\nexport default SelectField\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nfunction RadioField({\r\n  options,\r\n  name,\r\n  onChangeHandle,\r\n  value,\r\n  label = 'Выбирите пол'\r\n}) {\r\n  const handleChange = ({ target }) => {\r\n    onChangeHandle({ name: target.name, value: target.value })\r\n  }\r\n\r\n  return (\r\n    <div className=\"mt-3 mb-3\">\r\n      <label className=\"form-label me-3\">{label}</label>\r\n      <div>\r\n        {options &&\r\n          options.map((option, i) => {\r\n            return (\r\n              <div key={i} className=\"form-check form-check-inline\">\r\n                <input\r\n                  className=\"form-check-input\"\r\n                  type=\"radio\"\r\n                  name={name}\r\n                  id={option.name + '_' + option.value}\r\n                  value={option.value}\r\n                  checked={option.value === value}\r\n                  onChange={handleChange}\r\n                />\r\n                <label\r\n                  className=\"form-check-label\"\r\n                  htmlFor={option.name + '_' + option.value}\r\n                >\r\n                  {option.name}\r\n                </label>\r\n              </div>\r\n            )\r\n          })}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nRadioField.propTypes = {\r\n  options: PropTypes.PropTypes.array,\r\n  name: PropTypes.string,\r\n  onChangeHandle: PropTypes.func,\r\n  value: PropTypes.string,\r\n  label: PropTypes.string\r\n}\r\n\r\nexport default RadioField\r\n","import React from 'react'\r\nimport Select from 'react-select'\r\nimport PropTypes from 'prop-types'\r\n\r\nfunction MultiSelectField({\r\n  options,\r\n  name,\r\n  onChangeHandle,\r\n  label,\r\n  defaultValue = [],\r\n  error\r\n}) {\r\n  const optionsArr =\r\n    !Array.isArray(options) && typeof options === 'object'\r\n      ? Object.keys(options).map((option) => ({\r\n          value: options[option]._id,\r\n          label: options[option].name\r\n        }))\r\n      : options\r\n  const handleChange = (value) => {\r\n    onChangeHandle({ name: name, value })\r\n  }\r\n  const defaultValueToArray =\r\n    defaultValue.map((item) => ({\r\n      value: item._id,\r\n      label: item.name\r\n    })) || []\r\n  const getInputClasses = () => {\r\n    return `${error ? 'is-invalid' : ''} `\r\n  }\r\n\r\n  return (\r\n    <div className=\"mb-4\">\r\n      <label className=\"form-label me-3\">{label}</label>\r\n      <Select\r\n        closeMenuOnSelect={true}\r\n        isMulti\r\n        name={name}\r\n        options={optionsArr}\r\n        classNamePrefix=\"select\"\r\n        onChange={handleChange}\r\n        defaultValue={defaultValueToArray}\r\n        className={getInputClasses()}\r\n      />\r\n      {error && <div className=\"invalid-feedback\">{error}</div>}\r\n    </div>\r\n  )\r\n}\r\nMultiSelectField.propTypes = {\r\n  name: PropTypes.string,\r\n  label: PropTypes.string,\r\n  options: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\r\n  defaultValue: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\r\n  onChangeHandle: PropTypes.func,\r\n  error: PropTypes.string\r\n}\r\n\r\nexport default MultiSelectField\r\n","import React, { useEffect, useState } from 'react'\nimport TextField from '../../common/form/TextField'\nimport { validator } from '../../../utilits/validator'\nimport { validatorConfig } from '../../../utilits/validatorConfig'\nimport SelectField from '../../common/form/SelectField'\nimport RadioField from '../../common/form/RadioField'\nimport MultiSelectField from '../../common/form/MultiSelectField'\nimport CheckField from '../../common/form/CheckField'\nimport { useQualities } from '../../../hooks/useQualities'\nimport { useProfessions } from '../../../hooks/useProfession'\nimport { useAuth } from '../../../hooks/useAuth'\nimport { useHistory } from 'react-router-dom'\nimport { MAIN_ROUTE } from '../../../utilits/constants'\n\nfunction RegisterForm() {\n  const history = useHistory()\n  const [data, setData] = useState({\n    email: '',\n    name: '',\n    password: '',\n    profession: '',\n    sex: 'male',\n    qualities: [],\n    licence: false\n  })\n  const [errors, setErrors] = useState({})\n  const { qualities } = useQualities()\n  const newQualities = qualities.map((qual) => ({\n    value: qual._id,\n    label: qual.name\n  }))\n  const { professions } = useProfessions()\n  const { signUp } = useAuth()\n  const onChangeHandle = (target) => {\n    setData((prev) => ({ ...prev, [target.name]: target.value }))\n  }\n  const submitHandle = async (e) => {\n    e.preventDefault()\n    const isValid = validate()\n    if (!isValid) {\n      return\n    }\n    const newData = {\n      ...data,\n      qualities: data.qualities.map((q) => q.value)\n    }\n    try {\n      await signUp(newData)\n      history.push(MAIN_ROUTE)\n    } catch (error) {\n      setErrors(error)\n    }\n  }\n\n  const validate = () => {\n    const errors = validator(data, validatorConfig)\n    setErrors(errors)\n    return Object.keys(errors).length === 0\n  }\n\n  useEffect(() => {\n    validate()\n  }, [data])\n\n  const isValid = Object.keys(errors).length === 0\n\n  return (\n    <form\n      onSubmit={submitHandle}\n      className=\"d-flex flex-column needs-validation\"\n    >\n      <h3 className=\"mb-4\">Register</h3>\n      <TextField\n        name=\"name\"\n        value={data.name}\n        onChangeHandle={onChangeHandle}\n        label=\"Введите ваше имя\"\n        error={errors.name}\n      />\n      <TextField\n        name=\"email\"\n        value={data.email}\n        onChangeHandle={onChangeHandle}\n        label=\"Введите вашу электронную почту\"\n        error={errors.email}\n      />\n      <TextField\n        name=\"password\"\n        value={data.password}\n        onChangeHandle={onChangeHandle}\n        label=\"Ваш пароль\"\n        type=\"password\"\n        error={errors.password}\n      />\n      <SelectField\n        onChangeHandle={onChangeHandle}\n        options={professions}\n        label=\"Выбирите вашу профессию\"\n        value={data.profession}\n        defaultOption=\"Choose...\"\n        name=\"profession\"\n        error={errors.profession}\n      />\n\n      <RadioField\n        options={[\n          { name: 'Муж', value: 'male' },\n          { name: 'Жен', value: 'female' },\n          { name: 'Другое', value: 'other' }\n        ]}\n        value={data.sex}\n        onChangeHandle={onChangeHandle}\n        name=\"sex\"\n      />\n\n      <MultiSelectField\n        name=\"qualities\"\n        options={newQualities}\n        onChangeHandle={onChangeHandle}\n        label=\"Выбирите качество\"\n      />\n\n      <CheckField\n        name=\"licence\"\n        value={data.licence}\n        onChangeHandle={onChangeHandle}\n        error={errors.licence}\n      >\n        Подтвердить соглашение с лицензией\n      </CheckField>\n\n      <button\n        type=\"submit\"\n        className=\"mt-3 align-self-end btn btn-primary\"\n        disabled={!isValid}\n      >\n        Submit\n      </button>\n    </form>\n  )\n}\n\nexport default RegisterForm\n","import React, { useState } from 'react'\n\nimport LoginForm from '../components/ui/form/LoginForm'\nimport { useParams } from 'react-router'\nimport RegisterForm from '../components/ui/form/RegisterForm'\n\nconst Login = () => {\n  const { type } = useParams()\n  const [formType, setFormType] = useState(type === 'register' ? type : 'login')\n  const toggleFormType = () => {\n    setFormType((prev) => (prev === 'register' ? 'login' : 'register'))\n  }\n\n  return (\n    <div className=\"container my-4\">\n      <div className=\"row \">\n        <div className=\"col-md-6  offset-md-3 shadow p-4\">\n          {formType === 'register' && (\n            <>\n              <RegisterForm />\n              <p>\n                Registered?{' '}\n                <a role=\"button\" className=\"fw-bold\" onClick={toggleFormType}>\n                  Sign in\n                </a>\n              </p>\n            </>\n          )}\n\n          {formType !== 'register' && (\n            <>\n              <LoginForm />\n              <p>\n                Dont have an account?{' '}\n                <a role=\"button\" className=\"fw-bold\" onClick={toggleFormType}>\n                  Sign up\n                </a>\n              </p>\n            </>\n          )}\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Login\n","import { useEffect, useState } from 'react'\r\nimport professions from '../mockData/professions.json'\r\nimport qualities from '../mockData/qualities.json'\r\nimport users from '../mockData/users.json'\r\nimport httpServise from '../services/http.service'\r\n\r\nconst useMockData = () => {\r\n  const statusConst = {\r\n    idle: 'Not Started',\r\n    pending: 'In Process',\r\n    success: 'Ready',\r\n    error: 'Error occured'\r\n  }\r\n  const [error, setError] = useState(null)\r\n  const [status, setStatus] = useState(statusConst.idle)\r\n  const [progress, setProgress] = useState(0)\r\n  const [count, setCount] = useState(0)\r\n\r\n  const summaryCount = professions.length + qualities.length + users.length\r\n\r\n  const incrementCount = () => {\r\n    setCount((prev) => prev + 1)\r\n  }\r\n\r\n  const updateProgress = () => {\r\n    if (count !== 0 && status === statusConst.idle) {\r\n      setStatus(statusConst.pending)\r\n    }\r\n    const newProgress = Math.floor((count / summaryCount) * 100)\r\n    if (progress < newProgress) {\r\n      setProgress(() => newProgress)\r\n    }\r\n    if (newProgress === 100) {\r\n      setStatus(statusConst.success)\r\n    }\r\n  }\r\n  useEffect(() => {\r\n    updateProgress()\r\n  }, [count])\r\n\r\n  async function initialize() {\r\n    try {\r\n      for (const prof of professions) {\r\n        await httpServise.put('profession/' + prof._id, prof)\r\n        incrementCount()\r\n      }\r\n      for (const user of users) {\r\n        await httpServise.put('user/' + user._id, user)\r\n        incrementCount()\r\n      }\r\n      for (const quality of qualities) {\r\n        await httpServise.put('quality/' + quality._id, quality)\r\n        incrementCount()\r\n      }\r\n    } catch (error) {\r\n      setError(error)\r\n      setStatus(statusConst.error)\r\n    }\r\n  }\r\n\r\n  return { error, initialize, progress, status }\r\n}\r\n\r\nexport default useMockData\r\n","import React from 'react'\nimport useMockData from '../utilits/mockData'\nconst Main = () => {\n  const { error, initialize, progress, status } = useMockData()\n  const handleClick = () => {\n    initialize()\n  }\n\n  return (\n    <div className=\"container mt-5\">\n      <h1>Main</h1>\n      <ul>\n        <li>Status {status}</li>\n        <li>Progress {progress}%</li>\n        {error && <li>error {error}</li>}\n      </ul>\n      <button className=\"btn-primary\" onClick={handleClick}>\n        Инициализировать\n      </button>\n    </div>\n  )\n}\n\nexport default Main\n","import React, { useEffect, useState } from 'react'\r\nimport MultiSelectField from '../../components/common/form/MultiSelectField'\r\nimport RadioField from '../../components/common/form/RadioField'\r\nimport SelectField from '../../components/common/form/SelectField'\r\nimport TextField from '../../components/common/form/TextField'\r\nimport { validatorConfig } from '../../utilits/validatorConfig'\r\nimport { validator } from '../../utilits/validator'\r\nimport PropTypes from 'prop-types'\r\nimport { useAuth } from '../../hooks/useAuth'\r\nimport { useQualities } from '../../hooks/useQualities'\r\nimport { useProfessions } from '../../hooks/useProfession'\r\nimport { useHistory } from 'react-router-dom'\r\n\r\nfunction EditPage() {\r\n  const history = useHistory()\r\n  const { currentUser, loading, updateUser } = useAuth()\r\n  const { qualities, qualitiesLoading } = useQualities()\r\n  const { professions, loading: profLoading } = useProfessions()\r\n  const [errors, setErrors] = useState({})\r\n  const [data, setData] = useState({\r\n    ...currentUser\r\n  })\r\n\r\n  const newQualities = qualities.map((qual) => ({\r\n    value: qual._id,\r\n    label: qual.name\r\n  }))\r\n  const defaultUserQualities = qualities.filter((q) =>\r\n    currentUser.qualities.includes(q._id)\r\n  )\r\n\r\n  const onChangeHandle = (target) => {\r\n    setData((prev) => ({\r\n      ...prev,\r\n      [target.name]:\r\n        target.name === 'profession'\r\n          ? professions.find((profession) => profession._id === target.value)\r\n          : target.value\r\n    }))\r\n  }\r\n\r\n  const submitHandle = async (e) => {\r\n    try {\r\n      e.preventDefault()\r\n      const isValid = validate()\r\n      if (!isValid) {\r\n        return\r\n      }\r\n      const userMapedQualities = data.qualities.map((qual) => qual.value)\r\n\r\n      const formData = {\r\n        ...data,\r\n        profession: data._id,\r\n        qualities: userMapedQualities\r\n      }\r\n\r\n      await updateUser(formData)\r\n      history.goBack()\r\n    } catch (error) {\r\n      console.log(error)\r\n    }\r\n  }\r\n\r\n  const validate = () => {\r\n    const errors = validator(data, validatorConfig)\r\n    setErrors(errors)\r\n    return Object.keys(errors).length === 0\r\n  }\r\n\r\n  useEffect(() => {\r\n    validate()\r\n    return () => {}\r\n  }, [data])\r\n\r\n  const isValid = Object.keys(errors).length === 0\r\n  return (\r\n    <div className=\"container \">\r\n      {!loading && !qualitiesLoading && !profLoading && (\r\n        <div className=\"row d-flex justify-content-start m-4\">\r\n          <div className=\"col-md-2\">\r\n            <button\r\n              className=\"btn btn-primary\"\r\n              onClick={() => history.goBack()}\r\n            >\r\n              <i className=\"bi bi-arrow-left\"></i>\r\n              <span>Назад</span>\r\n            </button>\r\n          </div>\r\n          <div\r\n            className=\"col-md-6 text-start p-4 shadow\r\n        \"\r\n          >\r\n            <form\r\n              onSubmit={submitHandle}\r\n              className=\"d-flex flex-column needs-validation\"\r\n            >\r\n              <h3 className=\"mb-4\">Edit</h3>\r\n              <TextField\r\n                name=\"name\"\r\n                value={data.name}\r\n                onChangeHandle={onChangeHandle}\r\n                label=\"Ваше имя\"\r\n                error={errors.name}\r\n              />\r\n              <TextField\r\n                name=\"email\"\r\n                value={data.email}\r\n                onChangeHandle={onChangeHandle}\r\n                label=\"Ваша електронная почта\"\r\n                type=\"email\"\r\n                error={errors.email}\r\n              />\r\n              <SelectField\r\n                onChangeHandle={onChangeHandle}\r\n                options={professions}\r\n                label=\"Выбирите вашу профессию\"\r\n                value={data.profession}\r\n                defaultOption={data.profession.name}\r\n                name=\"profession\"\r\n                error={errors.profession}\r\n              />\r\n\r\n              <RadioField\r\n                options={[\r\n                  { name: 'Муж', value: 'male' },\r\n                  { name: 'Жен', value: 'female' },\r\n                  { name: 'Другое', value: 'other' }\r\n                ]}\r\n                value={data.sex}\r\n                onChangeHandle={onChangeHandle}\r\n                name=\"sex\"\r\n              />\r\n\r\n              <MultiSelectField\r\n                name=\"qualities\"\r\n                options={newQualities}\r\n                onChangeHandle={onChangeHandle}\r\n                label=\"Выбирите качество\"\r\n                defaultValue={defaultUserQualities}\r\n                error={errors.qualities}\r\n              />\r\n\r\n              <button\r\n                type=\"submit\"\r\n                className=\"mt-3 align-self-end btn btn-primary\"\r\n                disabled={!isValid}\r\n              >\r\n                Submit\r\n              </button>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\nEditPage.propTypes = {\r\n  user: PropTypes.object,\r\n  props: PropTypes.object,\r\n  location: PropTypes.object,\r\n  state: PropTypes.object\r\n}\r\n\r\nexport default EditPage\r\n","import EditPage from './EditPage'\r\n\r\nexport default EditPage\r\n","import React from 'react'\r\nimport { Redirect, Route } from 'react-router-dom'\r\nimport { useAuth } from '../hooks/useAuth'\r\nimport { LOGIN_ROUTE } from '../utilits/constants'\r\nimport PropTypes from 'prop-types'\r\n\r\nfunction ProtectedRoute({ component: Component, children, ...rest }) {\r\n  const { currentUser } = useAuth()\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(props) => {\r\n        if (!currentUser) {\r\n          return (\r\n            <Redirect\r\n              to={{\r\n                pathname: LOGIN_ROUTE,\r\n                state: {\r\n                  from: props.location\r\n                }\r\n              }}\r\n            />\r\n          )\r\n        }\r\n        return Component ? <Component {...props} /> : children\r\n      }}\r\n    />\r\n  )\r\n}\r\n\r\nProtectedRoute.propTypes = {\r\n  component: PropTypes.func,\r\n  children: PropTypes.oneOfType([\r\n    PropTypes.arrayOf(PropTypes.node),\r\n    PropTypes.node\r\n  ]),\r\n  location: PropTypes.object\r\n}\r\n\r\nexport default ProtectedRoute\r\n","import React, { useEffect } from 'react'\r\nimport Loader from '../components/ui/loader'\r\nimport { useAuth } from '../hooks/useAuth'\r\n\r\nfunction LogOut() {\r\n  const { logOut } = useAuth()\r\n  useEffect(() => {\r\n    logOut()\r\n  }, [])\r\n  return <Loader />\r\n}\r\n\r\nexport default LogOut\r\n","import React from 'react'\nimport UsersPage from './pages/users'\nimport NavBar from './components/NavBar'\nimport Login from './pages/login'\nimport Main from './pages/main'\nimport { ToastContainer } from 'react-toastify'\nimport { Route, Switch } from 'react-router-dom'\nimport {\n  LOGIN_ROUTE,\n  LOGOUT_ROUTE,\n  MAIN_ROUTE,\n  USERS_ROUTE\n} from './utilits/constants'\nimport SingleUserPage from './pages/usersPage'\nimport EditPage from './pages/editPage'\nimport ProfessionProvider from './hooks/useProfession'\nimport QualityProvider from './hooks/useQualities'\nimport 'react-toastify/dist/ReactToastify.css'\nimport AuthProvider from './hooks/useAuth'\nimport UserProvider from './hooks/useUsers'\nimport ProtectedRoute from './components/ProtectedRoute'\nimport LogOut from './pages/LogOut'\n\nconst App = () => {\n  return (\n    <>\n      <AuthProvider>\n        <NavBar />\n        <div className=\"col-md-12\">\n          <ProfessionProvider>\n            <QualityProvider>\n              <UserProvider>\n                <Switch>\n                  <ProtectedRoute\n                    path={USERS_ROUTE}\n                    exact\n                    component={UsersPage}\n                  />\n                  <ProtectedRoute\n                    path={USERS_ROUTE + '/:id?'}\n                    exact\n                    component={SingleUserPage}\n                  />\n                  <ProtectedRoute\n                    path={USERS_ROUTE + '/:id/:edit?'}\n                    exact\n                    component={EditPage}\n                  />\n                  <Route path={LOGIN_ROUTE + '/:type?'} component={Login} />\n                  <Route path={LOGOUT_ROUTE} component={LogOut} />\n                  <Route path={MAIN_ROUTE} exact component={Main} />\n                </Switch>\n              </UserProvider>\n            </QualityProvider>\n          </ProfessionProvider>\n        </div>\n      </AuthProvider>\n      <ToastContainer />\n    </>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport reportWebVitals from './reportWebVitals'\nimport 'bootstrap/dist/css/bootstrap.css'\nimport App from './App'\nimport { BrowserRouter } from 'react-router-dom'\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\nreportWebVitals()\n"],"sourceRoot":""}