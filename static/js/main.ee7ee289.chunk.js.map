{"version":3,"sources":["reportWebVitals.js","services/http.service.js","services/user.service.js","components/ui/loader.jsx","hooks/useUsers.jsx","components/common/Pagination.jsx","components/common/Bookmark.jsx","components/ui/qualities/quality.jsx","services/quality.service.js","hooks/useQualities.jsx","components/ui/qualities/qualityList.jsx","components/ui/qualities/index.js","components/common/table/tableHeader.jsx","utilits/constants.js","components/common/table/tableBody.jsx","components/common/table/index.js","components/common/table/table.jsx","services/profession.service.js","hooks/useProfession.jsx","components/ui/profession.jsx","components/ui/usersTable.jsx","utilits/helpers.js","components/ui/searchStatus.jsx","components/common/groupList.jsx","components/SearchBar.jsx","pages/usersListPage/index.js","pages/usersListPage/Users.jsx","utilits/paginate.js","components/ui/UserImage.jsx","API/fake.api/professions.api.js","API/fake.api/user.api.js","API/fake.api/qualities.api.js","API/fake.api/comments.api.js","API/index.js","components/user/SingleCommentForUser.jsx","components/user/Comment.jsx","components/common/form/SelectField.jsx","components/common/form/TextArea.jsx","utilits/validatorConfig.js","utilits/validator.js","components/user/CommenSection.jsx","components/user/MeetingsCard.jsx","components/user/QualityCard.jsx","components/user/UserInfoCard.jsx","pages/usersPage/index.js","pages/usersPage/singleUserPage.jsx","pages/users.jsx","components/NavBar.jsx","components/common/form/TextField.jsx","components/common/form/CheckField.jsx","services/localStorage.service.js","hooks/useAuth.jsx","components/ui/form/LoginForm.jsx","components/common/form/RadioField.jsx","components/common/form/MultiSelectField.jsx","components/ui/form/RegisterForm.jsx","pages/login.jsx","utilits/mockData.js","pages/main.jsx","pages/editPage/EditPage.jsx","pages/editPage/index.js","App.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","http","axios","create","baseURL","configFile","apiEndPoint","interceptors","request","use","config","isFireBase","containSlash","test","url","slice","error","Promise","reject","response","data","content","_id","Object","keys","map","key","status","toast","info","httpServise","get","post","put","delete","userEndpoint","userService","a","httpService","payload","Loader","className","role","UserContext","React","createContext","useUsers","useContext","UserProvider","children","useState","users","setUsers","loading","setLoading","setError","userServise","errorCatcher","message","useEffect","getUser","Provider","value","getUserById","id","find","u","Pagination","props","pageSize","itemsCount","onPageChange","currentPage","pageCount","Math","ceil","pages","_","range","page","type","onClick","Bookmark","toggleBookMarkHanble","Quality","name","color","style","margin","fontSize","qualityService","qualityContext","useQualities","QualityProvider","qualities","setQualities","getQualities","QualityList","qualitiesArr","intersection","filter","x","includes","quality","i","TableHeader","currentSort","setSortBy","columns","renderSortArrow","currentPath","iter","order","column","undefined","scope","MAIN_ROUTE","LOGIN_ROUTE","USERS_ROUTE","TableBody","renderContent","item","component","to","Table","professionService","ProfessionContext","useProfessions","ProfessionProvider","professions","setProfessions","getProfessions","getProfessionById","Profession","profession","UsersTable","deleteUserHandler","user","completedMeetings","rate","bookmark","renderPhrase","numbers","lastNumber","Number","toString","split","getCommentTime","timeStamp","date","Date","parseInt","dateNow","getFullYear","getDay","getHours","minDif","getMinutes","toLocaleString","month","getMonth","getDate","SearchStatus","lenght","userLength","GroupList","onItemSelect","valueProperty","contentProperty","selectedProf","resetProfessionsHandler","Array","isArray","defaultProps","SearchBar","searchValue","getSearchValueHandler","placeholder","onChange","Users","setCurrentPage","sortBy","setSelectedProf","setSearchValue","filteredUsers","toLowerCase","sortedUsers","orderBy","length","cporUsers","items","pageNumber","startIndex","take","paginate","event","target","console","log","pageIndex","UserImage","src","random","substring","alt","width","height","professionsObject","doctor","waiter","physics","engineer","actor","cook","fetchAll","resolve","window","setTimeout","tedious","strange","buller","alcoholic","handsome","uncertain","localStorage","getItem","setItem","JSON","stringify","parse","getById","update","userIndex","findIndex","comments","userId","pageId","created_at","API","fetchCommentsForUser","c","add","newComment","now","substr","push","remove","newComments","SingleCommentForUser","createdAt","removeCommentHandler","setUser","api","Comment","setCommentsForUser","commentsForUser","reverse","comment","SelectField","defaultOption","onChangeHandle","options","label","optionsArr","optionName","htmlFor","disabled","option","TextArea","rows","validatorConfig","email","isRequired","isEmail","password","isCapitalLetter","isNumber","min","licence","validator","errors","validate","method","statusValidate","trim","fieldName","validateMethod","CommentSection","useParams","setData","setErrors","allUsers","setAllUsers","setIsLoading","getUsersCommentsFromDB","prev","location","isValid","onSubmit","e","preventDefault","MeetingsCard","userById","QualityCard","UserInfoCard","pathname","state","SingleUserPage","UsersPage","NavBar","TextField","showPassword","setShowPassword","CheckField","checked","TOKEN_KEY","REFRESH_KEY","EXPIRES_KEY","setToken","refreshToken","idToken","expiresIn","expiresDate","getTime","AuthContext","httpAuth","useAuth","AuthProvider","currentUser","setCurrentUser","rest","process","REACT_APP_FIREBASE_KEY","returnSecureToken","createUser","localId","code","errorObj","signUp","login","LoginForm","history","useHistory","stayOn","submitHandle","RadioField","handleChange","MultiSelectField","defaultValue","defaultValueToArray","closeMenuOnSelect","isMulti","classNamePrefix","RegisterForm","sex","newQualities","qual","newData","q","Login","formType","setFormType","toggleFormType","useMockData","statusConst","setStatus","progress","setProgress","count","setCount","summaryCount","incrementCount","prof","newProgress","floor","updateProgress","initialize","Main","EditPage","goBack","replace","App","path","exact","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"knKAYeA,G,MAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,Q,qFCJRQ,EAAOC,IAAMC,OAAO,CACxBC,QAASC,EAAWC,cAGtBL,EAAKM,aAAaC,QAAQC,KACxB,SAAUC,GACR,GAAIL,EAAWM,WAAY,CACzB,IAAMC,EAAe,QAAQC,KAAKH,EAAOI,KACzCJ,EAAOI,KACJF,EAAeF,EAAOI,IAAIC,MAAM,GAAI,GAAKL,EAAOI,KAAO,QAE5D,OAAOJ,KAET,SAAUM,GACR,OAAOC,QAAQC,OAAOF,MAQ1Bf,EAAKM,aAAaY,SAASV,KACzB,SAACU,GANH,IAAsBC,EAUlB,OAHIf,EAAWM,aACbQ,EAASC,KAAO,CAAEC,SARFD,EAQwBD,EAASC,KAP9CA,IAASA,EAAKE,IACjBC,OAAOC,KAAKJ,GAAMK,KAAI,SAACC,GAAD,sBAAeN,EAAKM,OAC1CN,KAOKD,KAET,SAAUH,GASR,OAPEA,EAAMG,UACNH,EAAMG,SAASQ,QAAU,KACzBX,EAAMG,SAASQ,OAAS,KAGxBC,IAAMC,KAAK,gDAENZ,QAAQC,OAAOF,MAG1B,IAMec,EANK,CAClBC,IAAK9B,EAAK8B,IACVC,KAAM/B,EAAK+B,KACXC,IAAKhC,EAAKgC,IACVC,OAAQjC,EAAKiC,QC9CTC,EAAe,QAaNC,EAXK,CAClBL,IAAI,WAAD,4BAAE,8BAAAM,EAAA,sEACoBC,EAAYP,IAAII,GADpC,uBACKf,EADL,EACKA,KADL,kBAEIA,GAFJ,2CAAF,kDAAC,GAIJjB,OAAO,WAAD,4BAAE,WAAOoC,GAAP,iBAAAF,EAAA,sEACiBC,EAAYL,IAAIE,EAAeI,EAAQjB,IAAKiB,GAD7D,uBACEnB,EADF,EACEA,KADF,kBAECA,GAFD,2CAAF,mDAAC,I,OCEMoB,EAVA,WACb,OACE,qBAAKC,UAAU,0DAAf,SACE,qBAAKA,UAAU,8BAA8BC,KAAK,SAAlD,SACE,sBAAMD,UAAU,kBAAhB,6BCCFE,EAAcC,IAAMC,gBAEbC,EAAW,WACtB,OAAOC,qBAAWJ,IAoDLK,EAjDM,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACtB,EAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAA8BF,oBAAS,GAAvC,mBAAOG,EAAP,KAAgBC,EAAhB,KACA,EAA0BJ,mBAAS,MAAnC,mBAAOlC,EAAP,KAAcuC,EAAd,KAHqC,4CAgBrC,8BAAAlB,EAAA,+EAE8BmB,EAAYzB,MAF1C,gBAEYV,EAFZ,EAEYA,QAER+B,EAAS/B,GACTiC,GAAW,GALf,gDAOIG,EAAa,EAAD,IAPhB,0DAhBqC,sBA8BrC,SAASA,EAAazC,GACpB,IAAQ0C,EAAY1C,EAAMG,SAASC,KAA3BsC,QACRH,EAASG,GACTJ,GAAW,GAEb,OA9BAK,qBAAU,YAL2B,mCAMnCC,KACC,IAEHD,qBAAU,WACM,OAAV3C,IACFY,IAAMZ,MAAMA,GACZuC,EAAS,SAEV,CAACvC,IAsBF,cAAC2B,EAAYkB,SAAb,CAAsBC,MAAO,CAAEX,QAAOY,YAVxC,SAAqBC,GACnB,OAAOb,EAAMc,MAAK,SAACC,GAAD,OAAOA,EAAE5C,MAAQ0C,OASnC,SACIX,EAAqB,cAAC,EAAD,IAAXJ,K,yBCNHkB,EAvCI,SAACC,GAClB,IAAQC,EAAoDD,EAApDC,SAAUC,EAA0CF,EAA1CE,WAAYC,EAA8BH,EAA9BG,aAAcC,EAAgBJ,EAAhBI,YACtCC,EAAYC,KAAKC,KAAKL,EAAaD,GACnCO,EAAQC,IAAEC,MAAM,EAAGL,EAAY,GACrC,OAAkB,IAAdA,EAAwB,KAE1B,qBACE,aAAW,0BACXhC,UAAU,sCAFZ,SAIE,oBAAIA,UAAU,iBAAd,SACGmC,EAAMnD,KAAI,SAACsD,GACV,OACE,oBACEtC,UAAW,cAAgBsC,IAASP,EAAc,SAAW,IAD/D,SAIE,wBACEQ,KAAK,SACLvC,UAAU,YACVwC,QAAS,WACPV,EAAaQ,IAJjB,SAOGA,KATEA,W,YCCJG,EAjBE,SAAC,GAA0C,IAAxCC,EAAuC,EAAvCA,qBAAsBnB,EAAiB,EAAjBA,GAAIrC,EAAa,EAAbA,OAC5C,OACE,wBACEc,UAAU,eACVwC,QAAS,WACPE,EAAqBnB,IAHzB,SAMG,mBAAGvB,UAAWd,EAAS,sBAAwB,sBCOvCyD,EAfC,SAAC,GAAqB,IAAnBC,EAAkB,EAAlBA,KAAMC,EAAY,EAAZA,MACvB,OACE,sBACEC,MAAO,CAAEC,OAAQ,UAAWC,SAAU,QACtChD,UAAS,mBAAc6C,GAFzB,SAIGD,KCCQK,EANQ,CACrB3D,IAAI,WAAD,4BAAE,8BAAAM,EAAA,sEACoBC,EAAYP,IAJf,YAGjB,uBACKX,EADL,EACKA,KADL,kBAEIA,GAFJ,2CAAF,kDAAC,ICAAuE,EAAiB/C,IAAMC,gBAChB+C,EAAe,WAC1B,OAAO7C,qBAAW4C,IAgDLE,EA7CS,SAAC,GAAkB,IAAhB5C,EAAe,EAAfA,SACzB,EAAkCC,mBAAS,IAA3C,mBAAO4C,EAAP,KAAkBC,EAAlB,KACA,EAA8B7C,oBAAS,GAAvC,mBAAOG,EAAP,KAAgBC,EAAhB,KACA,EAA0BJ,mBAAS,MAAnC,mBAAOlC,EAAP,KAAcuC,EAAd,KAHwC,4CAexC,8BAAAlB,EAAA,+EAE8BqD,EAAe3D,MAF7C,gBAEYV,EAFZ,EAEYA,QACR0E,EAAa1E,GACbiC,GAAW,GAJf,gDAMIG,EAAa,EAAD,IANhB,0DAfwC,sBA2BxC,SAASA,EAAazC,GACpB,IAAQ0C,EAAY1C,EAAMG,SAASC,KAA3BsC,QACRH,EAASG,GACTJ,GAAW,GAGb,OA7BAK,qBAAU,YAJ8B,mCAKtCqC,KACC,IAEHrC,qBAAU,WACM,OAAV3C,IACFY,IAAMZ,MAAMA,GACZuC,EAAS,SAEV,CAACvC,IAqBF,cAAC2E,EAAe9B,SAAhB,CAAyBC,MAAO,CAAEgC,YAAWzC,WAA7C,SACGJ,KCzBQgD,EAfK,SAAC,GAAiC,IAApBC,EAAmB,EAA9BJ,UAGfK,EAFgBP,IAAdE,UAEuBM,QAAO,SAACC,GAAD,OAAOH,EAAaI,SAASD,EAAE/E,QACrE,OACE,mCACG6E,EAAa1E,KAAI,SAAC8E,EAASC,GAC1B,OAAO,cAAC,EAAD,eAAqBD,GAAPC,SCVdP,ICsDAQ,EArDK,SAAC,GAAyC,IAAvCC,EAAsC,EAAtCA,YAAaC,EAAyB,EAAzBA,UAAWC,EAAc,EAAdA,QAYvCC,EAAkB,SAACH,EAAaI,GACpC,OAAIJ,EAAYK,OAASD,EACG,QAAtBJ,EAAYM,MACP,mBAAGvE,UAAU,0BAEf,mBAAGA,UAAU,wBAEf,MAGT,OACE,uBAAOA,UAAU,4BAAjB,SACE,6BACGlB,OAAOC,KAAKoF,GAASnF,KAAI,SAACwF,GAAD,OACxB,8BACEhC,QACE2B,EAAQK,GAAQF,KACZ,kBA5BI1B,EA4BauB,EAAQK,GAAQF,UA3B3CL,EAAYK,OAAS1B,EACvBsB,EAAU,2BACLD,GADI,IAEPM,MAA6B,QAAtBN,EAAYM,MAAkB,OAAS,SAGhDL,EAAU,CAAEI,KAAM1B,EAAM2B,MAAO,SAPhB,IAAC3B,QA6BJ6B,EAEAxE,KAAMkE,EAAQK,GAAQF,MAAQ,SACpCI,MAAM,MACN1E,UAAU,2BACVf,IAAKuF,GAEL,sBAAKxE,UAAU,gCAAf,UACGmE,EAAQK,GAAQ5B,KAAM,IACtBwB,EAAgBH,EAAaE,EAAQK,GAAQF,kB,OC1C/CK,EAAa,gBACbC,EAAc,sBAGdC,EAAc,sBCmCZC,EAjCG,SAAC,GAAwB,IAAtBpE,EAAqB,EAArBA,MAAOyD,EAAc,EAAdA,QACpBY,EAAgB,SAACC,EAAMR,GAC3B,GAAIL,EAAQK,GAAQS,UAAW,CAC7B,IAAMA,EAAYd,EAAQK,GAAQS,UAClC,MAAyB,oBAAdA,EACFA,EAAUD,GAEZC,EAET,MAA6B,SAAzBd,EAAQK,GAAQF,KACX,cAAC,IAAD,CAAMY,GAAE,UAAKL,EAAL,YAAoBG,EAAKnG,KAAjC,SAAyCmG,EAAKpC,OAEhDR,IAAE9C,IAAI0F,EAAMb,EAAQK,GAAQF,OAGrC,OACE,mCACE,gCACG5D,EAAM1B,KAAI,SAACgG,GAAD,OACT,6BACGlG,OAAOC,KAAKoF,GAASnF,KAAI,SAACwF,GAAD,OACxB,6BAAkBO,EAAcC,EAAMR,IAA7BA,OAFJQ,EAAKnG,aCpBTsG,ECAD,SAAC,GAA0D,IAAxDzE,EAAuD,EAAvDA,MAAOuD,EAAgD,EAAhDA,YAAaC,EAAmC,EAAnCA,UAAWC,EAAwB,EAAxBA,QAAS3D,EAAe,EAAfA,SACvD,OACE,uBAAOR,UAAU,QAAjB,SACGQ,GACC,qCACE,cAAC,EAAD,CACEyD,YAAaA,EACbC,UAAWA,EACXC,QAASA,IAEX,cAAC,EAAD,CAAiBA,UAASzD,gBCJrB0E,EAPW,CACxB9F,IAAI,WAAD,4BAAE,8BAAAM,EAAA,sEACoBC,EAAYP,IAJZ,eAGpB,uBACKX,EADL,EACKA,KADL,kBAEIA,GAFJ,2CAAF,kDAAC,ICAA0G,EAAoBlF,IAAMC,gBACnBkF,EAAiB,WAC5B,OAAOhF,qBAAW+E,IAkDLE,EA/CY,SAAC,GAAkB,IAAhB/E,EAAe,EAAfA,SAC5B,EAAsCC,mBAAS,IAA/C,mBAAO+E,EAAP,KAAoBC,EAApB,KACA,EAA8BhF,oBAAS,GAAvC,mBAAOG,EAAP,KAAgBC,EAAhB,KACA,EAA0BJ,mBAAS,MAAnC,mBAAOlC,EAAP,KAAcuC,EAAd,KAH2C,4CAe3C,8BAAAlB,EAAA,+EAE8BwF,EAAkB9F,MAFhD,gBAEYV,EAFZ,EAEYA,QACR6G,EAAe7G,GACfiC,GAAW,GAJf,gDAMIG,EAAa,EAAD,IANhB,0DAf2C,sBA2B3C,SAASA,EAAazC,GACpB,IAAQ0C,EAAY1C,EAAMG,SAASC,KAA3BsC,QACRH,EAASG,GACTJ,GAAW,GAGb,OA7BAK,qBAAU,YAJiC,mCAKzCwE,KACC,IAEHxE,qBAAU,WACM,OAAV3C,IACFY,IAAMZ,MAAMA,GACZuC,EAAS,SAEV,CAACvC,IAqBF,cAAC8G,EAAkBjE,SAAnB,CACEC,MAAO,CAAEmE,cAAa5E,UAAS+E,kBAXnC,SAA2BpE,GACzB,OAAOiE,EAAYhE,MAAK,SAACoC,GAAD,OAAOA,EAAE/E,MAAQ0C,OASzC,SAGGf,KCjCQoF,MAVf,YAA6B,IAAPrE,EAAM,EAANA,GACpB,EAAuC+D,IAA/B1E,EAAR,EAAQA,QAEFiF,GAAaF,EAFnB,EAAiBA,mBAEoBpE,GAErC,OAAO,8BAAOX,EAA4B,UAAlBiF,EAAWjD,Q,iFCgEtBkD,EAjEI,SAAC,GAOb,IANLpF,EAMI,EANJA,MACAuD,EAKI,EALJA,YACAC,EAII,EAJJA,UACAxB,EAGI,EAHJA,qBACAqD,EAEI,EAFJA,kBAGM5B,GADF,iBACY,CACdvB,KAAM,CAAE0B,KAAM,OAAQ1B,KAAM,sBAC5BS,UAAW,CACTT,KAAM,mDACNqC,UAAW,SAACe,GAAD,OAAU,cAAC,EAAD,CAAa3C,UAAW2C,EAAK3C,cAEpDmC,YAAa,CACXlB,KAAM,aACN1B,KAAM,yDACNqC,UAAW,SAACe,GAAD,OAAU,cAAC,EAAD,CAAYzE,GAAIyE,EAAKH,eAE5CI,kBAAmB,CACjB3B,KAAM,oBACN1B,KAAM,mFAERsD,KAAM,CAAE5B,KAAM,OAAQ1B,KAAM,wCAC5BuD,SAAU,CACR7B,KAAM,SACN1B,KAAM,yDACNqC,UAAW,SAACe,GAAD,OACT,cAAC,EAAD,CACEtD,qBAAsBA,EACtBnB,GAAIyE,EAAKnH,IACTK,OAAQ8G,EAAK9G,WAInBO,OAAQ,CACNwF,UAAW,SAACe,GAAD,OACT,wBACEhG,UAAU,iBACVwC,QAAS,WACPuD,EAAkBC,EAAKnH,MAH3B,wBAWN,OACE,eAAC,EAAD,CACEoF,YAAaA,EACbC,UAAWA,EACXC,QAASA,EACTzD,MAAOA,EAJT,UAME,cAAC,EAAD,CACEuD,YAAaA,EACbC,UAAWA,EACXC,QAASA,IAEX,cAAC,EAAD,CAAiBA,UAASzD,cCpEnB0F,GAAe,SAACC,GAC3B,IAEMC,EAAaC,OAAOF,EAAQG,WAAWC,MAAM,IAAInI,OAAO,IAC9D,OAAgB,IAAZ+H,EAA8B,oKAClB,IAAZA,EAAqB,GAAN,OAAUA,EAAV,2HACfA,EAAU,GAAKA,EAAU,GAIzBA,EAAU,IAAM,CAAC,EAAG,EAAG,GAAGxC,SAASyC,GAHzB,UAAMD,EAAN,sIAMVA,EAAU,IAAM,CAAC,GAAGxC,SAASyC,GACnB,UAAMD,EAAN,2HAGV,UAAMA,EAAN,4HA0COK,GAAiB,SAACC,GAC7B,IAAMC,EAAO,IAAIC,KAAKC,SAASH,IACzBI,EAAU,IAAIF,KAGpB,GAAgB,IAFAE,EAAQC,cAAgBJ,EAAKI,cAE1B,CAEjB,GAAe,IADAD,EAAQE,SAAWL,EAAKK,SACrB,CAEhB,GAAgB,IADAF,EAAQG,WAAaN,EAAKM,WACvB,CACjB,IAAMC,EAASJ,EAAQK,aAAeR,EAAKQ,aAC3C,OAAID,GAAU,GAAKA,EAAS,EAAU,wEAClCA,GAAU,GAAKA,EAAS,GAAW,kEACnCA,GAAU,IAAMA,EAAS,GAAW,mEACjC,mEAET,MAAM,GAAN,OAAUP,EAAKM,WAAf,cAA+BN,EAAKQ,cAEtC,MAAM,GAAN,OAAUR,EAAKK,SAAf,YAA2BL,EAAKS,eAAe,UAAW,CACxDC,MAAO,UAIX,OAAOV,EAAKI,cAAgB,KAAOJ,EAAKW,WAAa,GAAK,IAAMX,EAAKY,WC/DxDC,GAfM,SAAC,GAAoB,IDiBhBC,ECjBFC,EAAiB,EAAjBA,WACtB,OACE,qBAAK3H,UAAU,iCAAf,SACE,sBACE8C,MAAO,CAAEE,SAAU,OAAQD,OAAQ,QACnC/C,WDYkB0H,ECZGC,EDchB,IAAXD,EAAuB,kBAA6B,oBChBhD,SAIGtB,GAAauB,QCRhBC,GAAY,SAAC,GAOZ,IANLpC,EAMI,EANJA,YACAqC,EAKI,EALJA,aACAC,EAII,EAJJA,cACAC,EAGI,EAHJA,gBACAC,EAEI,EAFJA,aACAC,EACI,EADJA,wBAEA,OACE,sBAAKjI,UAAU,mCAAf,UACE,qBAAIA,UAAU,kBAAd,WACIkI,MAAMC,QAAQ3C,IACd1G,OAAOC,KAAKyG,GAAaxG,KAAI,SAACC,GAC5B,OACE,oBAEEuD,QAAS,WACPqF,EAAarC,EAAYvG,KAE3Be,UACEgI,IAAiBxC,EAAYvG,GACzB,yBACA,mBAENgB,KAAK,SAVP,SAYGuF,EAAYvG,GAAK8I,IAXbvC,EAAYvG,GAAK6I,OAgB7BtC,EAAYxG,KAAI,SAACgG,GAChB,OACE,oBAEExC,QAAS,WACPqF,EAAa7C,IAEfhF,UACEgI,IAAiBhD,EACb,yBACA,mBAEN/E,KAAK,SAVP,SAYG+E,EAAK+C,IAXD/C,EAAK8C,UAgBlB,qBAAK9H,UAAU,mDAAf,SACE,wBACEA,UAAU,gCACVwC,QAASyF,EAFX,yBAURL,GAAUQ,aAAe,CACvBN,cAAe,MACfC,gBAAiB,QAUJH,UCxDAS,OAjBf,YAA4D,IAAvCC,EAAsC,EAAtCA,YAAaC,EAAyB,EAAzBA,sBAChC,OACE,uBACEhG,KAAK,OACLvC,UAAU,eACVwI,YAAY,YACZnH,MAAOiH,EACPG,SAAUF,KCRDG,GCUD,WACZ,MAAsCjI,mBAAS,GAA/C,mBAAOsB,EAAP,KAAoB4G,EAApB,KACA,EAA4BlI,mBAAS,CAAE6D,KAAM,OAAQC,MAAO,QAA5D,mBAAOqE,EAAP,KAAe1E,EAAf,KACA,EAAwCzD,qBAAxC,mBAAOuH,EAAP,KAAqBa,EAArB,KAEA,EAAsCpI,mBAAS,IAA/C,mBAAO6H,EAAP,KAAoBQ,EAApB,KAMQpI,EAAUL,IAAVK,MACA8E,EAAgBF,IAAhBE,YAERtE,qBAAU,WACRyH,EAAe,KACd,CAACX,IAEJ,IA+BIe,EAAgBrI,EAEhBsH,EACFe,EAAgBrI,EAAMiD,QAAO,SAACqC,GAAD,OAAUA,EAAKH,aAAemC,EAAanJ,OAC/DyJ,IACTS,EAAgBrI,EAAMiD,QAAO,SAACqC,GAAD,OAC3BA,EAAKpD,KAAKoG,cAAcnF,SAASyE,EAAYU,mBAIjD,IAAMC,EAAc7G,IAAE8G,QAAQH,EAAe,CAACH,EAAOtE,MAAO,CAACsE,EAAOrE,QAC9DoD,EAAasB,EAAYE,OAEzBC,ECxED,SAAkBC,EAAOC,EAAY1H,GAC1C,IAAM2H,GAAcD,EAAa,GAAK1H,EAGtC,OAAOQ,IAAEiH,GAAO/K,MAAMiL,GAAYC,KAAK5H,GAAUP,QDoE/BoI,CAASR,EAAalH,EAfvB,GAiBjB,OACE,qBAAK/B,UAAU,wBAAf,SACE,sBAAKA,UAAU,WAAf,UACE,cAAC,GAAD,CAAc2H,WAAYA,IAC1B,qBAAK3H,UAAU,gBAAf,SAEI,cAAC,GAAD,CACEwF,YAAaA,EACbqC,aAlDmB,SAAC7C,GAC9B8D,EAAe,IACfD,EAAgB7D,IAiDNgD,aAAcA,EACdC,wBAxDoB,WAC9Ba,EAAe,IACfD,SA0DI,sBAAK7I,UAAU,YAAf,UACE,cAAC,GAAD,CACEsI,YAAaA,EACbC,sBA1EoB,WAC5BM,IACAC,EAAeY,MAAMC,OAAOtI,UA0EtB,gCACE,cAAC,EAAD,CACEX,MAAO0I,EACPlF,UAAWA,EACXD,YAAa2E,EACb7C,kBA/Cc,SAACxE,GAGzBqI,QAAQC,IAAItI,IA6CFmB,qBA3DiB,SAACnB,GACd,YAAOb,GACZiD,QAAO,SAACqC,GACf,OAAIA,EAAKnH,MAAQ0C,GACfyE,EAAK9G,QAAU8G,EAAK9G,OACb8G,GAEFA,QAsDD,qBAAKhG,UAAU,OAAf,SACE,cAAC,EAAD,CACE6B,WAAY8F,EACZ/F,SA/CG,EAgDHE,aArEW,SAACgI,GACxBnB,EAAemB,IAqEH/H,YAAaA,kB,SE5FdgI,OAdf,WACE,OACE,qBACEC,IAAG,sDAAiD/H,KAAKgI,SAAW,GACjEzD,SAAS,IACT0D,UAAU,GAFV,QAGHlK,UAAU,sCACVmK,IAAI,SACJC,MAAM,KACNC,OAAO,QCXAC,GAAoB,CAC/BC,OAAQ,CAAE1L,IAAK,2BAA4B+D,KAAM,wCACjD4H,OAAQ,CAAE3L,IAAK,2BAA4B+D,KAAM,oDACjD6H,QAAS,CAAE5L,IAAK,2BAA4B+D,KAAM,kCAClD8H,SAAU,CAAE7L,IAAK,2BAA4B+D,KAAM,8CACnD+H,MAAO,CAAE9L,IAAK,2BAA4B+D,KAAM,kCAChDgI,KAAM,CAAE/L,IAAK,2BAA4B+D,KAAM,mCAEpC4C,GAAc,CACzB,CAAE3G,IAAK,2BAA4B+D,KAAM,wCACzC,CAAE/D,IAAK,2BAA4B+D,KAAM,oDACzC,CAAE/D,IAAK,2BAA4B+D,KAAM,kCACzC,CAAE/D,IAAK,2BAA4B+D,KAAM,8CACzC,CAAE/D,IAAK,2BAA4B+D,KAAM,kCACzC,CAAE/D,IAAK,2BAA4B+D,KAAM,mCAS5B,IACbiI,SARe,kBACf,IAAIrM,SAAQ,SAACsM,GACXC,OAAOC,YAAW,WAChBF,EAAQtF,MACP,QCnBDnC,GAAY,CAChB4H,QAAS,CACPpM,IAAK,2BACL+D,KAAM,uCACNC,MAAO,WAETqI,QAAS,CACPrM,IAAK,2BACL+D,KAAM,mDACNC,MAAO,aAETsI,OAAQ,CACNtM,IAAK,4BACL+D,KAAM,iCACNC,MAAO,WAETuI,UAAW,CACTvM,IAAK,2BACL+D,KAAM,yDACNC,MAAO,UAETwI,SAAU,CACRxM,IAAK,2BACL+D,KAAM,yDACNC,MAAO,QAETyI,UAAW,CACTzM,IAAK,2BACL+D,KAAM,qEACNC,MAAO,SAILnC,GAAQ,CACZ,CACE7B,IAAK,2BACL+D,KAAM,gEACNiD,WAAYL,GAAY+E,OACxBlH,UAAW,CAACA,GAAU4H,QAAS5H,GAAUiI,UAAWjI,GAAU6H,SAC9DjF,kBAAmB,GACnBC,KAAM,IACNC,UAAU,GAEZ,CACEtH,IAAK,2BACL+D,KAAM,2BACNiD,WAAYL,GAAY+E,OACxBlH,UAAW,CAACA,GAAU8H,OAAQ9H,GAAUgI,SAAUhI,GAAU+H,WAC5DnF,kBAAmB,GACnBC,KAAM,IACNC,UAAU,GAEZ,CACEtH,IAAK,2BACL+D,KAAM,oDACNiD,WAAYL,GAAY+E,OACxBlH,UAAW,CAACA,GAAU8H,QACtBlF,kBAAmB,IACnBC,KAAM,IACNC,UAAU,GAEZ,CACEtH,IAAK,2BACL+D,KAAM,gEACNiD,WAAYL,GAAYgF,OACxBnH,UAAW,CAACA,GAAUiI,WACtBrF,kBAAmB,IACnBC,KAAM,IACNC,UAAU,GAEZ,CACEtH,IAAK,2BACL+D,KAAM,sEACNiD,WAAYL,GAAYiF,QACxBpH,UAAW,CAACA,GAAU6H,QAAS7H,GAAU4H,SACzChF,kBAAmB,GACnBC,KAAM,IACNC,UAAU,GAEZ,CACEtH,IAAK,2BACL+D,KAAM,0GACNiD,WAAYL,GAAYiF,QACxBpH,UAAW,CAACA,GAAU6H,QAAS7H,GAAUiI,WACzCrF,kBAAmB,IACnBC,KAAM,IACNC,UAAU,GAEZ,CACEtH,IAAK,2BACL+D,KAAM,kFACNiD,WAAYL,GAAYkF,SACxBrH,UAAW,CAACA,GAAU6H,QAAS7H,GAAU4H,SACzChF,kBAAmB,GACnBC,KAAM,IACNC,UAAU,GAEZ,CACEtH,IAAK,2BACL+D,KAAM,sEACNiD,WAAYL,GAAYkF,SACxBrH,UAAW,CAACA,GAAUgI,UACtBpF,kBAAmB,GACnBC,KAAM,EACNC,UAAU,GAEZ,CACEtH,IAAK,2BACL+D,KAAM,4EACNiD,WAAYL,GAAYoF,KACxBvH,UAAW,CAACA,GAAU6H,QAAS7H,GAAUiI,WACzCrF,kBAAmB,GACnBC,KAAM,IACNC,UAAU,GAEZ,CACEtH,IAAK,2BACL+D,KAAM,6CACNiD,WAAYL,GAAYoF,KACxBvH,UAAW,CAACA,GAAUgI,SAAUhI,GAAU8H,QAC1ClF,kBAAmB,GACnBC,KAAM,IACNC,UAAU,GAEZ,CACEtH,IAAK,2BACL+D,KAAM,wFACNiD,WAAYL,GAAYmF,MACxBtH,UAAW,CAACA,GAAUiI,UAAWjI,GAAU6H,SAC3CjF,kBAAmB,IACnBC,KAAM,IACNC,UAAU,GAEZ,CACEtH,IAAK,2BACL+D,KAAM,oDACNiD,WAAYL,GAAYmF,MACxBtH,UAAW,CAACA,GAAUgI,UACtBpF,kBAAmB,IACnBC,KAAM,EACNC,UAAU,IAGToF,aAAaC,QAAQ,UACxBD,aAAaE,QAAQ,QAASC,KAAKC,UAAUjL,KAG/C,IAyBe,IACbmK,SA1Be,kBACf,IAAIrM,SAAQ,SAACsM,GACXC,OAAOC,YAAW,WAChBF,EAAQY,KAAKE,MAAML,aAAaC,QAAQ,aACvC,SAuBLK,QAZc,SAACtK,GAAD,OACd,IAAI/C,SAAQ,SAACsM,GACXC,OAAOC,YAAW,WAChBF,EACEY,KAAKE,MAAML,aAAaC,QAAQ,UAAUhK,MACxC,SAACwE,GAAD,OAAUA,EAAKnH,MAAQ0C,QAG1B,SAKLuK,OAtBa,SAACvK,EAAI5C,GAAL,OACb,IAAIH,SAAQ,SAACsM,GACX,IAAMpK,EAAQgL,KAAKE,MAAML,aAAaC,QAAQ,UACxCO,EAAYrL,EAAMsL,WAAU,SAACvK,GAAD,OAAOA,EAAE5C,MAAQ0C,KACnDb,EAAMqL,GAAN,2BAAwBrL,EAAMqL,IAAepN,GAC7C4M,aAAaE,QAAQ,QAASC,KAAKC,UAAUjL,IAC7CoK,EAAQpK,EAAMqL,SChKZ1I,GAAY,CAChB4H,QAAS,CACPpM,IAAK,2BACL+D,KAAM,uCACNC,MAAO,WAETqI,QAAS,CACPrM,IAAK,2BACL+D,KAAM,mDACNC,MAAO,aAETsI,OAAQ,CACNtM,IAAK,4BACL+D,KAAM,iCACNC,MAAO,WAETuI,UAAW,CACTvM,IAAK,2BACL+D,KAAM,yDACNC,MAAO,UAETwI,SAAU,CACRxM,IAAK,2BACL+D,KAAM,yDACNC,MAAO,QAETyI,UAAW,CACTzM,IAAK,2BACL+D,KAAM,qEACNC,MAAO,SAUI,IACbgI,SARe,kBACf,IAAIrM,SAAQ,SAACsM,GACXC,OAAOC,YAAW,WAChBF,EAAQzH,MACP,QCpCD4I,GAAW,CACf,CACEpN,IAAK,kBACLqN,OAAQ,2BACRC,OAAQ,2BACRvN,QAAS,oBACTwN,WAAY,iBAEd,CACEvN,IAAK,sBACLsN,OAAQ,2BACRD,OAAQ,2BACRtN,QAAS,4BACTwN,WAAY,iBAEd,CACEvN,IAAK,uBACLsN,OAAQ,2BACRD,OAAQ,2BACRtN,QAAS,4BACTwN,WAAY,kBAGXb,aAAaC,QAAQ,aACxBD,aAAaE,QAAQ,WAAYC,KAAKC,UAAUM,KAElD,IChBeI,GANH,CACV3L,SACA8E,eACAnC,aACA4I,SD6Da,CACbpB,SA5Ce,kBACf,IAAIrM,SAAQ,SAACsM,GACXC,OAAOC,YAAW,WAChBF,EAAQmB,MACP,SAyCLK,qBAtC2B,SAACJ,GAAD,OAC3B,IAAI1N,SAAQ,SAACsM,GACXC,OAAOC,YAAW,WAChBF,EACEY,KAAKE,MAAML,aAAaC,QAAQ,aAAa7H,QAC3C,SAAC4I,GAAD,OAAOA,EAAEJ,SAAWD,QAGvB,SA+BLM,IA7BU,SAAC7N,GAAD,OACV,IAAIH,SAAQ,SAACsM,GACXC,OAAOC,YAAW,WAChB,IAAMiB,EAAWP,KAAKE,MAAML,aAAaC,QAAQ,aAC3CiB,EAAU,2BACX9N,GADW,IAEdyN,WAAYvF,KAAK6F,MACjB7N,IAAKoD,KAAKgI,SAASzD,SAAS,IAAImG,OAAO,EAAG,KAE5CV,EAASW,KAAKH,GACdlB,aAAaE,QAAQ,WAAYC,KAAKC,UAAUM,IAChDnB,EAAQ2B,KACP,SAkBLI,OAfa,SAACtL,GAAD,OACb,IAAI/C,SAAQ,SAACsM,GACXC,OAAOC,YAAW,WAChB,IACM8B,EADWpB,KAAKE,MAAML,aAAaC,QAAQ,aACpB7H,QAAO,SAACC,GAAD,OAAOA,EAAE/E,MAAQ0C,KACrDqI,QAAQC,IAAItI,GACZqI,QAAQC,IAAIiD,GACZvB,aAAaE,QAAQ,WAAYC,KAAKC,UAAUmB,IAChDhC,EAAQvJ,KACP,WECQwL,OA7Df,YAMI,IALFb,EAKC,EALDA,OACAtN,EAIC,EAJDA,QACYoO,EAGX,EAHDZ,WACAa,EAEC,EAFDA,qBACApO,EACC,EADDA,IAEA,EAAwB4B,mBAAS,IAAjC,mBAAOuF,EAAP,KAAakH,EAAb,KAQA,OANAhM,qBAAU,WACRiM,GAAIzM,MAAMmL,QAAQK,GAAQhP,MAAK,SAAC8I,GAC9BkH,EAAQlH,QAET,IAEEkG,GAGLxF,GAAesG,GAGb,qBAAKhN,UAAU,2BAAf,SACE,qBAAKA,UAAU,MAAf,SACE,qBAAKA,UAAU,MAAf,SACE,sBAAKA,UAAU,qBAAf,UACE,cAAC,GAAD,IACA,qBAAKA,UAAU,4BAAf,SACE,sBAAKA,UAAU,OAAf,UACE,sBAAKA,UAAU,oDAAf,UACE,oBAAGA,UAAU,QAAb,UACGgG,EAAKpD,KACN,sBAAM5C,UAAU,aAAhB,SACG0G,GAAesG,QAGpB,wBACEhN,UAAU,uDAEVwC,QAAS,kBAAMyK,EAAqBpO,IAHtC,SAKE,mBAAGmB,UAAU,oBAGjB,mBAAGA,UAAU,aAAb,SAA2BpB,mBA3BhC,cAAC,EAAD,KCmBIwO,OApCf,YAAgF,IAAzDlB,EAAwD,EAA5D3K,GAAY8L,EAAgD,EAAhDA,mBAAoBC,EAA4B,EAA5BA,gBAAiB1M,EAAW,EAAXA,QAC5DqM,EAAuB,SAAC1L,GAC5B4L,GAAIlB,SAASY,OAAOtL,GACpB4L,GAAIlB,SACDK,qBAAqBJ,GACrBhP,MAAK,SAACyB,GAAD,OAAU0O,EAAmB1O,EAAK4O,eAG5C,OAA+B,IAA3BD,EAAgBnE,OACX,sNAGLvI,EACK,6CAIP,mCACG0M,EAAgBtO,KAAI,SAACwO,GAAD,OACnB,cAAC,GAAD,2BAEMA,GAFN,IAGEP,qBAAsBA,IAFjBO,EAAQ3O,WCtBvB,SAAS4O,GAAT,GASI,IARFC,EAQC,EARDA,cACAC,EAOC,EAPDA,eACAC,EAMC,EANDA,QACAC,EAKC,EALDA,MACAxM,EAIC,EAJDA,MACA9C,EAGC,EAHDA,MACAqE,EAEC,EAFDA,KACAhC,EACC,EADDA,QAKMkN,EACH5F,MAAMC,QAAQyF,IAA+B,kBAAZA,EAM9BA,EALA9O,OAAOC,KAAK6O,GAAS5O,KAAI,SAAC+O,GAAD,MAAiB,CACxCnL,KAAMmL,EACN1M,MAAOuM,EAAQG,GAAYlP,IAC3BI,IAAK2O,EAAQG,GAAYlP,QAUjC,MAHqB,kBAAVwC,IACTA,EAAQA,EAAMxC,KAEZ+B,EACK,cAAC,EAAD,IAIP,sBAAKZ,UAAU,0BAAf,UACE,uBAAOgO,QAAQ,qBAAqBhO,UAAU,aAA9C,SACG6N,IAEH,yBACE7N,UA3BE,GAAN,OAAUzB,EAAQ,yBAA2B,cAA7C,KA4BIgD,GAAG,qBACHF,MAAOA,EACPoH,SAnBe,SAAC,GAAgB,IAAdkB,EAAa,EAAbA,OACtBgE,EAAe,CAAE/K,KAAM+G,EAAO/G,KAAMvB,MAAOsI,EAAOtI,SAmB9CuB,KAAMA,EALR,UAOE,wBAAQqL,UAAQ,EAAC5M,MAAM,GAAvB,SACGqM,IAEFI,GACCA,EAAW9O,KAAI,SAACkP,GACd,OACE,wBAAyB7M,MAAO6M,EAAOrP,IAAvC,SACGqP,EAAOtL,MADGsL,EAAOrP,WAM3BN,GAAS,qBAAKyB,UAAU,mBAAf,SAAmCzB,OAInDkP,GAAYC,cAAgB,CAAEnP,MAAM,2BAarBkP,UC7BAU,OA7Cf,YAQI,IAPFN,EAOC,EAPDA,MACArF,EAMC,EANDA,YACA5F,EAKC,EALDA,KACA+K,EAIC,EAJDA,eACAtM,EAGC,EAHDA,MAGC,IAFD+M,YAEC,MAFM,EAEN,EADD7P,EACC,EADDA,MAQA,OACE,sBAAKyB,UAAU,OAAf,UACE,uBAAOgO,QAASpL,EAAM5C,UAAU,OAAhC,SACG6N,IAGH,sBAAK7N,UAAU,iBAAf,UACE,0BACEA,UAbA,GAAN,OAAUzB,EAAQ,8BAAgC,mBAAlD,KAcMiK,YAAaA,EACbjH,GAAIqB,EACJE,MAAO,CAAEuH,OAAe,GAAP+D,EAAY,MAC7B/M,MAAOA,EACPoH,SAhBa,SAAC,GAAgB,IAAdkB,EAAa,EAAbA,OACtBgE,EAAe,CAAE/K,KAAM+G,EAAOpI,GAAIF,MAAOsI,EAAOtI,WAiB3C9C,GAAS,qBAAKyB,UAAU,+BAAf,SAA+CzB,WCjCpD8P,GAAkB,CAC7BC,MAAO,CACLC,WAAY,CACVtN,QAAS,wPAEXuN,QAAS,CACPvN,QAAS,+KAGbwN,SAAU,CACRF,WAAY,CAAEtN,QAAS,qLACvByN,gBAAiB,CAAEzN,QAAS,oNAC5B0N,SAAU,CAAE1N,QAAS,mKACrB2N,IAAK,CACH3N,QAAS,0MACTI,MAAO,IAGXwE,WAAY,CACV0I,WAAY,CAAEtN,QAAS,0KAEzB4N,QAAS,CACPN,WAAY,CACVtN,QAAS,yTAGb2B,KAAM,CACJ2L,WAAY,CACVtN,QAAS,0KAGboC,UAAW,CACTkL,WAAY,CACVtN,QAAS,+JAGbiL,OAAQ,CACNqC,WAAY,CACVtN,QAAS,mMAGbrC,QAAS,CACP2P,WAAY,CACVtN,QAAS,iLC3CF6N,GAAY,SAACnQ,EAAMV,GAC9B,IAAM8Q,EAAS,GACf,SAASC,EAASC,EAAQtQ,EAAMV,GAC9B,IAAIiR,EACJ,OAAQD,GACN,IAAK,aACH,IAEIC,EADkB,mBAATvQ,GACSA,EAGA,kBAATA,EAC0B,IAA7BG,OAAOC,KAAKJ,GAAMwK,OAClBjB,MAAMC,QAAQxJ,GACE,IAAhBA,EAAKwK,OACW,KAAhBxK,EAAKwQ,OAEb,MAAO5Q,GACPqL,QAAQC,IAAItL,EAAM0C,SAGpB,MAEF,IAAK,UAGDiO,GADoB,kBACU9Q,KAAKO,GAErC,MACF,IAAK,kBAGDuQ,GADuB,UACU9Q,KAAKO,GAExC,MACF,IAAK,WAGDuQ,GADuB,OACU9Q,KAAKO,GAExC,MACF,IAAK,MACHuQ,EAAiBvQ,EAAKwK,OAASlL,EAAOoD,MACtC,MACF,IAAK,gBACH6N,EAAiB3I,OAAO5H,EAAK8H,MAAM,KAAK,KAAM,IAAII,MAAOG,cACzD,MACF,IAAK,cAGDkI,GADmB,qBACU9Q,KAAKO,GAOxC,GAAIuQ,EAAgB,OAAOjR,EAAOgD,QAGpC,IAAK,IAAMmO,KAAazQ,EACtB,IAAK,IAAM0Q,KAAkBpR,EAAOmR,GAAY,CAC9C,IAAM7Q,EAAQyQ,EACZK,EACA1Q,EAAKyQ,GACLnR,EAAOmR,GAAWC,IAEhB9Q,IAAUwQ,EAAOK,KACnBL,EAAOK,GAAa7Q,GAI1B,OAAOwQ,GC+DMO,OA7Hf,WACE,IAAQ/N,EAAOgO,cAAPhO,GACR,EAAwBd,mBAAS,CAC/B7B,QAAS,GACTsN,OAAQ,GACRC,OAAQ,KAHV,mBAAOxN,EAAP,KAAa6Q,EAAb,KAKA,EAA4B/O,mBAAS,IAArC,mBAAOsO,EAAP,KAAeU,EAAf,KACA,EAAgChP,mBAAS,IAAzC,mBAAOiP,EAAP,KAAiBC,EAAjB,KACA,EAAgClP,oBAAS,GAAzC,mBAAOG,EAAP,KAAgBgP,EAAhB,KACA,EAA8CnP,mBAAS,IAAvD,mBAAO6M,EAAP,KAAwBD,EAAxB,KACAnM,qBAAU,WAOR,OANA0O,GAAa,GACbC,EAAuBtO,GACvB4L,GAAIzM,MACDmK,WACA3N,MAAK,SAACyB,GAAD,OAAUgR,EAAY7Q,OAAOC,KAAKJ,GAAMK,KAAI,SAACC,GAAD,OAASN,EAAKM,UAC/D/B,MAAK,kBAAM0S,GAAa,MACpB,WACLA,GAAa,MAEd,IAEH,IAmBMC,EAAyB,SAAC3D,GAC9B0D,GAAa,GACbzC,GAAIlB,SACDK,qBAAqBJ,GACrBhP,MAAK,SAAC+O,GAAD,OAAcoB,EAAmBpB,EAASsB,cAC/CrQ,MAAK,kBAAM0S,GAAa,OAGvBjC,EAAiB,SAAChE,GACtB6F,GAAQ,SAACM,GAAD,mBAAC,eAAeA,GAAhB,mBAAuBnG,EAAO/G,KAAO+G,EAAOtI,YAGtDH,qBAAU,WACRsO,GAAQ,SAACM,GAAD,mBAAC,eAAeA,GAAhB,IAAsB3D,OAAQ5K,SACrC,CAACwO,WAOJ7O,qBAAU,YALO,WACf,IAAM6N,EAASD,GAAUnQ,EAAM0P,IAC/BoB,EAAUV,GACHjQ,OAAOC,KAAKgQ,GAAQ5F,OAG3B6F,KACC,CAACrQ,IAEJ,IAAMqR,EAAyC,IAA/BlR,OAAOC,KAAKgQ,GAAQ5F,OAEpC,OACE,qCACE,qBAAKnJ,UAAU,YAAYiQ,SAhDV,SAACC,GACpB,IAGE,GAFAN,GAAa,GACbM,EAAEC,kBACGH,EACH,OAEF7C,GAAIlB,SACDO,IAAI7N,GACJzB,MAAK,SAACyB,GAAD,OAAU0O,EAAmB,CAAC1O,GAAF,mBAAW2O,QAE/CkC,GAAQ,SAACM,GAAD,mBAAC,eAAeA,GAAhB,IAAsBlR,QAAS,GAAIsN,OAAQ,QACnDuD,EAAU,IAEVG,GAAa,GACb,MAAOrR,GACPqL,QAAQC,IAAItL,KAgCZ,SACE,qBAAKyB,UAAU,aAAf,SACE,uBAAMA,UAAU,sCAAhB,UACE,6CACC0P,GACC,cAAC,GAAD,CACE9B,QAAS8B,EACThC,cAAc,4HACdC,eAAgBA,EAChB/K,KAAK,SACLvB,MAAO1C,EAAKuN,OACZ3N,MAAOwQ,EAAO7C,OACdtL,QAASA,IAIb,cAAC,GAAD,CACEgC,KAAK,UACLiL,MAAM,yDACNF,eAAgBA,EAChBnF,YAAY,4FACZnH,MAAO1C,EAAKC,QACZL,MAAOwQ,EAAOnQ,UAEhB,wBACE2D,KAAK,SACLvC,UAAU,sCACViO,UAAW+B,EAHb,6FAUN,qBAAKhQ,UAAU,YAAf,SACE,sBAAKA,UAAU,aAAf,UACE,0CACA,uBACA,cAAC,GAAD,CACEuB,GAAIA,EACJ8L,mBAAoBA,EACpBC,gBAAiBA,EACjB1M,QAASA,aC1GNwP,OAff,SAAsBC,GACpB,IAAQpK,EAAsBoK,EAAtBpK,kBACR,OACE,qBAAKjG,UAAU,YAAf,SACE,sBAAKA,UAAU,kEAAf,UACE,oBAAIA,UAAU,aAAd,SACE,wDAGF,oBAAIA,UAAU,YAAd,SAA2BiG,UCapBqK,OApBf,SAAqBD,GACnB,IAAQhN,EAAcgN,EAAdhN,UAER,OACE,qBAAKrD,UAAU,YAAf,SACE,sBAAKA,UAAU,kEAAf,UACE,oBAAIA,UAAU,aAAd,SACE,+CAEF,mBAAGA,UAAU,YAAb,SACE,cAAC,EAAD,CAAaqD,UAAWA,MAE1B,8BCwBOkN,OAlCf,SAAsBF,GACpB,IAAQzN,EAAgCyN,EAAhCzN,KAAMsD,EAA0BmK,EAA1BnK,KAAML,EAAoBwK,EAApBxK,WAAYhH,EAAQwR,EAARxR,IAChC,OACE,qBAAKmB,UAAU,YAAf,SACE,sBAAKA,UAAU,YAAf,UACE,cAAC,IAAD,CACEkF,GAAI,CAAEsL,SAAU3L,EAAc,IAAMhG,EAAM,QAAS4R,MAAOJ,GAD5D,SAGE,wBAAQrQ,UAAU,qDAAlB,SACE,mBAAGA,UAAU,mBAGjB,sBAAKA,UAAU,sEAAf,UACE,cAAC,GAAD,IACA,sBAAKA,UAAU,OAAf,UACE,6BAAK4C,IACL,mBAAG5C,UAAU,sBAAb,SAAoC6F,EAAWjD,OAC/C,sBAAK5C,UAAU,aAAf,UACE,mBACEA,UAAU,qCACVC,KAAK,WAEP,mBAAGD,UAAU,gCAAgCC,KAAK,WAClD,sBAAMD,UAAU,OAAhB,SAAwBkG,mBC5BvBwK,GCSQ,WACrB,IAAQnP,EAAOgO,cAAPhO,GAEF8O,GAAW/O,EADOjB,IAAhBiB,aACqBC,GAE7B,OACE,qBAAKvB,UAAU,gBAAf,SACE,sBAAKA,UAAU,iBAAf,UACGqQ,EAASzN,MACR,sBAAK5C,UAAU,gBAAf,UACE,cAAC,GAAD,eAAkBqQ,IAClB,cAAC,GAAD,eAAiBA,IACjB,cAAC,GAAD,eAAkBA,OAItB,qBAAKrQ,UAAU,YAAf,SACE,cAAC,GAAD,YCXK2Q,GAVG,WAChB,IAAQpP,EAAOgO,cAAPhO,GAER,OACE,cAAC,EAAD,UACE,8BAAMA,EAAK,cAAC,GAAD,IAAqB,cAAC,GAAD,SCiCvBqP,GAxCA,WACb,OACE,qBAAK5Q,UAAU,gDAAf,SACE,sBAAKA,UAAU,kBAAf,UACE,wBACEA,UAAU,kBACVuC,KAAK,SACL,iBAAe,WACf,iBAAe,sBACf,gBAAc,qBACd,gBAAc,QACd,aAAW,oBAPb,SASE,sBAAMvC,UAAU,0BAGlB,qBAAKA,UAAU,2BAA2BuB,GAAG,qBAA7C,SACE,qBAAIvB,UAAU,aAAd,UACE,oBAAIA,UAAU,WAAd,SACE,cAAC,IAAD,CAAMA,UAAU,YAAYkF,GAAIP,EAAhC,oBAIF,oBAAI3E,UAAU,WAAd,SACE,cAAC,IAAD,CAAMA,UAAU,WAAWkF,GAAIN,EAA/B,qBAIF,oBAAI5E,UAAU,WAAd,SACE,cAAC,IAAD,CAAMA,UAAU,WAAWkF,GAAIL,EAA/B,gCC9Bd,SAASgM,GAAT,GAAyE,IAApDhD,EAAmD,EAAnDA,MAAOjL,EAA4C,EAA5CA,KAAM+K,EAAsC,EAAtCA,eAAgBtM,EAAsB,EAAtBA,MAAOkB,EAAe,EAAfA,KAAMhE,EAAS,EAATA,MAI7D,EAAwCkC,oBAAS,GAAjD,mBAAOqQ,EAAP,KAAqBC,EAArB,KAUA,OACE,sBAAK/Q,UAAU,0BAAf,UACE,uBAAOgO,QAASpL,EAAM5C,UAAU,OAAhC,SACG6N,IAEH,sBAAK7N,UAAU,6BAAf,UACE,uBACEuC,KAAMuO,EAAe,OAASvO,EAC9BhB,GAAIqB,EACJvB,MAAOA,EACPuB,KAAMA,EACN6F,SAnBa,SAAC,GAAgB,IAAdkB,EAAa,EAAbA,OACtBgE,EAAe,CAAE/K,KAAM+G,EAAO/G,KAAMvB,MAAOsI,EAAOtI,SAmB5CrB,UAxBA,GAAN,OAAUzB,EAAQ,0BAA4B,eAA9C,OA0Bc,aAATgE,GACC,sBACEvC,UAAU,6BACVuC,KAAK,SACLC,QAtBiB,WACzBuO,GAAgB,SAACjB,GAAD,OAAWA,MAkBrB,SAKE,mBAAG9P,UAAW8Q,EAAe,YAAc,sBAI9CvS,GAAS,qBAAKyB,UAAU,+BAAf,SAA+CzB,UAKjEsS,GAAUzI,aAAe,CAAE7F,KAAM,QAUlBsO,UCjBAG,OApCf,YAAuE,IAAjDpO,EAAgD,EAAhDA,KAAMvB,EAA0C,EAA1CA,MAAOsM,EAAmC,EAAnCA,eAAgBnN,EAAmB,EAAnBA,SAAUjC,EAAS,EAATA,MAQ3D,OACE,sBAAKyB,UAAU,kBAAf,UACE,uBACEA,UAAU,mBACVuC,KAAK,WACLlB,MAAM,GACN4P,QAAS5P,EACTE,GAAIqB,EACJ6F,SAfe,WACnBkF,EAAe,CAAE/K,KAAMA,EAAMvB,OAAQA,OAgBnC,uBAAOrB,UAbH,GAAN,OAAUzB,EAAQ,8BAAgC,mBAAlD,KAauCyP,QAASpL,EAA9C,SACGpC,IAGFjC,GAAS,qBAAKyB,UAAU,mBAAf,SAAmCzB,QCzB7C2S,GAAY,YACZC,GAAc,oBACdC,GAAc,cAEPC,GAAW,SAAC,GAAiD,IAA/CC,EAA8C,EAA9CA,aAAcC,EAAgC,EAAhCA,QAAgC,IAAvBC,iBAAuB,MAAX,KAAW,EACjEC,GAAc,IAAI5K,MAAO6K,UAAwB,IAAZF,EAC3CjG,aAAaE,QAAQyF,GAAWK,GAChChG,aAAaE,QAAQ0F,GAAaG,GAClC/F,aAAaE,QAAQ2F,GAAaK,I,wBCD9BE,GAAcxR,IAAMC,gBACpBwR,GAAWnU,IAAMC,SACVmU,GAAU,WACrB,OAAOvR,qBAAWqR,KA2FLG,GAxFM,SAAC,GAAkB,IAAhBtR,EAAe,EAAfA,SACtB,EAAsCC,mBAAS,IAA/C,mBAAOsR,EAAP,KAAoBC,EAApB,KACA,EAA0BvR,mBAAS,MAAnC,mBAAOlC,EAAP,KAAcuC,EAAd,KAFqC,4CAWrC,6CAAAlB,EAAA,6DAAwB0O,EAAxB,EAAwBA,MAAOG,EAA/B,EAA+BA,SAAawD,EAA5C,kBACQ5T,EADR,wEAC+E6T,gJAAYC,wBAD3F,kBAG2BP,GAASrS,KAAKlB,EAAK,CACxCiQ,QACAG,WACA2D,mBAAmB,IANzB,uBAGYzT,EAHZ,EAGYA,KAKR0S,GAAS1S,GARb,UAUU0T,EAAW,aAAExT,IAAKF,EAAK2T,QAAShE,SAAU2D,IAVpD,6DAYIjR,EAAa,EAAD,IAZhB,EAa8B,KAAMtC,SAASC,KAAKJ,MAAtCgU,EAbZ,EAaYA,KAAMtR,EAblB,EAakBA,QACD,MAATsR,EAdR,oBAesB,iBAAZtR,EAfV,sBAgByB,CACfqN,MAAO,sCAjBjB,2DAXqC,+BAmCtB+D,EAnCsB,8EAmCrC,WAA0B1T,GAA1B,iBAAAiB,EAAA,+EAE8BD,EAAYjC,OAAOiB,GAFjD,gBAEYC,EAFZ,EAEYA,QACRoT,EAAepT,GAHnB,gDAKIoC,EAAa,EAAD,IALhB,0DAnCqC,sBA2CrC,SAASA,EAAazC,GACpB,IAAQ0C,EAAY1C,EAAMG,SAASC,KAA3BsC,QACRH,EAASG,GA7C0B,4CAgDrC,6CAAArB,EAAA,6DAAuB0O,EAAvB,EAAuBA,MAAOG,EAA9B,EAA8BA,SACtBpQ,EADR,oFAC2F6T,gJAAYC,wBADvG,kBAG2BP,GAASrS,KAAKlB,EAAK,CACxCiQ,QACAG,WACA2D,mBAAmB,IANzB,gBAGYzT,EAHZ,EAGYA,KAKR0S,GAAS1S,GARb,qDAUIqC,EAAa,EAAD,IAVhB,EAW8B,KAAMtC,SAASC,KAAKJ,MAAtCgU,EAXZ,EAWYA,KAAMtR,EAXlB,EAWkBA,QACD,MAATsR,EAZR,oBAaUC,EAAW,GACC,oBAAZvR,EAdV,uBAeQuR,EAAQ,2BAAQA,GAAR,IAAkBlE,MAAO,4BAfzC,WAkBsB,qBAAZrN,EAlBV,uBAmBQuR,EAAQ,2BAAQA,GAAR,IAAkB/D,SAAU,+BAnB5C,QAuBI7E,QAAQC,IAAI0I,EAAMtR,GAvBtB,2DAhDqC,sBA0ErC,OAtEAC,qBAAU,WACM,OAAV3C,IACFY,IAAMZ,MAAMA,GACZuC,EAAS,SAEV,CAACvC,IAkEF,cAACoT,GAAYvQ,SAAb,CAAsBC,MAAO,CAAEoR,OA3EI,4CA2EIV,cAAaW,MA3EjB,6CA2EnC,SACGlS,KCNQmS,OA1Ef,WACE,IAAMC,EAAUC,cAChB,EAAwBpS,mBAAS,CAAE6N,MAAO,GAAIG,SAAU,GAAIqE,QAAQ,IAApE,mBAAOnU,EAAP,KAAa6Q,EAAb,KACA,EAA4B/O,mBAAS,IAArC,mBAAOsO,EAAP,KAAeU,EAAf,KACM9B,EAAiB,SAAChE,GACtB6F,GAAQ,SAACM,GAAD,mBAAC,eAAeA,GAAhB,mBAAuBnG,EAAO/G,KAAO+G,EAAOtI,YAE9CqR,EAAUb,KAAVa,MAEFK,EAAY,uCAAG,WAAO7C,GAAP,SAAAtQ,EAAA,kEAEjBsQ,EAAEC,iBACcnB,IAHC,iEAQX0D,EAAM/T,GARK,OASjBiU,EAAQhG,KAAKjI,GATI,kDAWjB8K,EAAU,EAAD,IAXQ,0DAAH,sDAeZT,EAAW,WACf,IAAMD,EAASD,GAAUnQ,EAAM0P,IAG/B,OAFAoB,EAAUV,GAE4B,IAA/BjQ,OAAOC,KAAKgQ,GAAQ5F,QAG7BjI,qBAAU,WAER,OADA8N,IACO,eACN,CAACrQ,IAEJ,IAAMqR,EAAyC,IAA/BlR,OAAOC,KAAKgQ,GAAQ5F,OACpC,OACE,uBAAM8G,SAAU8C,EAAc/S,UAAU,qBAAxC,UACE,oBAAIA,UAAU,OAAd,mBACA,cAAC,GAAD,CACE4C,KAAK,QACLvB,MAAO1C,EAAK2P,MACZX,eAAgBA,EAChBE,MAAM,wKACNtP,MAAOwQ,EAAOT,QAEhB,cAAC,GAAD,CACE1L,KAAK,WACLvB,MAAO1C,EAAK8P,SACZd,eAAgBA,EAChBE,MAAM,qGACNtL,KAAK,WACLhE,MAAOwQ,EAAON,WAGhB,cAAC,GAAD,CACE7L,KAAK,SACLvB,MAAO1C,EAAKmU,OACZnF,eAAgBA,EAHlB,4HAOA,wBACEpL,KAAK,SACLvC,UAAU,sCACViO,UAAW+B,EAHb,wBCnBSgD,OAlDf,YAMI,IALFpF,EAKC,EALDA,QACAhL,EAIC,EAJDA,KACA+K,EAGC,EAHDA,eACAtM,EAEC,EAFDA,MAEC,IADDwM,aACC,MADO,sEACP,EACKoF,EAAe,SAAC,GAAgB,IAAdtJ,EAAa,EAAbA,OACtBgE,EAAe,CAAE/K,KAAM+G,EAAO/G,KAAMvB,MAAOsI,EAAOtI,SAGpD,OACE,sBAAKrB,UAAU,YAAf,UACE,uBAAOA,UAAU,kBAAjB,SAAoC6N,IACpC,8BACGD,GACCA,EAAQ5O,KAAI,SAACkP,EAAQnK,GACnB,OACE,sBAAa/D,UAAU,+BAAvB,UACE,uBACEA,UAAU,mBACVuC,KAAK,QACLK,KAAMA,EACNrB,GAAI2M,EAAOtL,KAAO,IAAMsL,EAAO7M,MAC/BA,MAAO6M,EAAO7M,MACd4P,QAAS/C,EAAO7M,QAAUA,EAC1BoH,SAAUwK,IAEZ,uBACEjT,UAAU,mBACVgO,QAASE,EAAOtL,KAAO,IAAMsL,EAAO7M,MAFtC,SAIG6M,EAAOtL,SAdFmB,Y,SC0CTmP,OA3Df,YAOI,IANFtF,EAMC,EANDA,QACAhL,EAKC,EALDA,KACA+K,EAIC,EAJDA,eACAE,EAGC,EAHDA,MAGC,IAFDsF,oBAEC,MAFc,GAEd,EADD5U,EACC,EADDA,MAEMuP,EACH5F,MAAMC,QAAQyF,IAA+B,kBAAZA,EAK9BA,EAJA9O,OAAOC,KAAK6O,GAAS5O,KAAI,SAACkP,GAAD,MAAa,CACpC7M,MAAOuM,EAAQM,GAAQrP,IACvBgP,MAAOD,EAAQM,GAAQtL,SAYzBwQ,EACJD,EAAanU,KAAI,SAACgG,GAAD,MAAW,CAC1B3D,MAAO2D,EAAKnG,IACZgP,MAAO7I,EAAKpC,UACP,GAKT,OACE,sBAAK5C,UAAU,OAAf,UACE,uBAAOA,UAAU,kBAAjB,SAAoC6N,IACpC,cAAC,KAAD,CACEwF,mBAAmB,EACnBC,SAAO,EACP1Q,KAAMA,EACNgL,QAASE,EACTyF,gBAAgB,SAChB9K,SA3Be,SAACpH,GAOpBsM,EAAe,CAAE/K,KAAMA,EAAMvB,WAqBzB8R,aAAcC,EACdpT,UAdE,GAAN,OAAUzB,EAAQ,aAAe,GAAjC,OAgBGA,GAAS,qBAAKyB,UAAU,mBAAf,SAAmCzB,QCoFpCiV,OAxHf,WACE,IAAMZ,EAAUC,cAChB,EAAwBpS,mBAAS,CAC/B6N,MAAO,GACPG,SAAU,GACV5I,WAAY,GACZ4N,IAAK,OACLpQ,UAAW,GACXwL,SAAS,IANX,mBAAOlQ,EAAP,KAAa6Q,EAAb,KAQA,EAA4B/O,mBAAS,IAArC,mBAAOsO,EAAP,KAAeU,EAAf,KAEMiE,EADgBvQ,IAAdE,UACuBrE,KAAI,SAAC2U,GAAD,MAAW,CAC5CtS,MAAOsS,EAAK9U,IACZgP,MAAO8F,EAAK/Q,SAEN4C,EAAgBF,IAAhBE,YACAiN,EAAWZ,KAAXY,OACF9E,EAAiB,SAAChE,GACtB6F,GAAQ,SAACM,GAAD,mBAAC,eAAeA,GAAhB,mBAAuBnG,EAAO/G,KAAO+G,EAAOtI,YAEhD0R,EAAY,uCAAG,WAAO7C,GAAP,eAAAtQ,EAAA,yDACnBsQ,EAAEC,iBACcnB,IAFG,wDAMb4E,EANa,2BAOdjV,GAPc,IAQjB0E,UAAW1E,EAAK0E,UAAUrE,KAAI,SAAC6U,GAAD,OAAOA,EAAExS,WARtB,kBAWXoR,EAAOmB,GAXI,OAYjBhB,EAAQhG,KAAKjI,GAZI,kDAcjB8K,EAAU,EAAD,IAdQ,0DAAH,sDAkBZT,EAAW,WACf,IAAMD,EAASD,GAAUnQ,EAAM0P,IAE/B,OADAoB,EAAUV,GAC4B,IAA/BjQ,OAAOC,KAAKgQ,GAAQ5F,QAG7BjI,qBAAU,WACR8N,MACC,CAACrQ,IAEJ,IAAMqR,EAAyC,IAA/BlR,OAAOC,KAAKgQ,GAAQ5F,OAEpC,OACE,uBACE8G,SAAU8C,EACV/S,UAAU,sCAFZ,UAIE,oBAAIA,UAAU,OAAd,sBACA,cAAC,GAAD,CACE4C,KAAK,QACLvB,MAAO1C,EAAK2P,MACZX,eAAgBA,EAChBE,MAAM,wKACNtP,MAAOwQ,EAAOT,QAEhB,cAAC,GAAD,CACE1L,KAAK,WACLvB,MAAO1C,EAAK8P,SACZd,eAAgBA,EAChBE,MAAM,0DACNtL,KAAK,WACLhE,MAAOwQ,EAAON,WAEhB,cAAC,GAAD,CACEd,eAAgBA,EAChBC,QAASpI,EACTqI,MAAM,mIACNxM,MAAO1C,EAAKkH,WACZ6H,cAAc,YACd9K,KAAK,aACLrE,MAAOwQ,EAAOlJ,aAGhB,cAAC,GAAD,CACE+H,QAAS,CACP,CAAEhL,KAAM,qBAAOvB,MAAO,QACtB,CAAEuB,KAAM,qBAAOvB,MAAO,UACtB,CAAEuB,KAAM,uCAAUvB,MAAO,UAE3BA,MAAO1C,EAAK8U,IACZ9F,eAAgBA,EAChB/K,KAAK,QAGP,cAAC,GAAD,CACEA,KAAK,YACLgL,QAAS8F,EACT/F,eAAgBA,EAChBE,MAAM,sGAGR,cAAC,GAAD,CACEjL,KAAK,UACLvB,MAAO1C,EAAKkQ,QACZlB,eAAgBA,EAChBpP,MAAOwQ,EAAOF,QAJhB,2MASA,wBACEtM,KAAK,SACLvC,UAAU,sCACViO,UAAW+B,EAHb,wBC7ES8D,GAxCD,WACZ,IAAQvR,EAASgN,cAAThN,KACR,EAAgC9B,mBAAkB,aAAT8B,EAAsBA,EAAO,SAAtE,mBAAOwR,EAAP,KAAiBC,EAAjB,KACMC,EAAiB,WACrBD,GAAY,SAAClE,GAAD,MAAoB,aAATA,EAAsB,QAAU,eAGzD,OACE,qBAAK9P,UAAU,iBAAf,SACE,qBAAKA,UAAU,OAAf,SACE,sBAAKA,UAAU,mCAAf,UACgB,aAAb+T,GACC,qCACE,cAAC,GAAD,IACA,4CACc,IACZ,mBAAG9T,KAAK,SAASD,UAAU,UAAUwC,QAASyR,EAA9C,2BAOQ,aAAbF,GACC,qCACE,cAAC,GAAD,IACA,sDACwB,IACtB,mBAAG9T,KAAK,SAASD,UAAU,UAAUwC,QAASyR,EAA9C,mC,oCC6BDC,GAzDK,WAClB,IAAMC,EACE,cADFA,EAEK,aAFLA,EAGK,QAHLA,EAIG,gBAET,EAA0B1T,mBAAS,MAAnC,mBAAOlC,EAAP,KAAcuC,EAAd,KACA,EAA4BL,mBAAS0T,GAArC,mBAAOjV,EAAP,KAAekV,EAAf,KACA,EAAgC3T,mBAAS,GAAzC,mBAAO4T,EAAP,KAAiBC,EAAjB,KACA,EAA0B7T,mBAAS,GAAnC,mBAAO8T,EAAP,KAAcC,EAAd,KAEMC,EAAejP,GAAY2D,OAAS9F,GAAU8F,OAASzI,GAAMyI,OAE7DuL,EAAiB,WACrBF,GAAS,SAAC1E,GAAD,OAAUA,EAAO,MAfJ,4CAkCxB,4CAAAlQ,EAAA,8EAEuB4F,IAFvB,gEAEemP,EAFf,iBAGYtV,EAAYG,IAAI,cAAgBmV,EAAK9V,IAAK8V,GAHtD,OAIMD,IAJN,6JAMuBhU,IANvB,kEAMesF,EANf,kBAOY3G,EAAYG,IAAI,QAAUwG,EAAKnH,IAAKmH,GAPhD,QAQM0O,IARN,gKAU0BrR,IAV1B,kEAUeS,EAVf,kBAWYzE,EAAYG,IAAI,WAAasE,EAAQjF,IAAKiF,GAXtD,QAYM4Q,IAZN,mMAeI5T,EAAS,EAAD,IACRsT,EAAUD,GAhBd,oGAlCwB,sBAsDxB,OAxBAjT,qBAAU,YAZa,WACP,IAAVqT,GAAerV,IAAWiV,GAC5BC,EAAUD,GAEZ,IAAMS,EAAc3S,KAAK4S,MAAON,EAAQE,EAAgB,KACpDJ,EAAWO,GACbN,GAAY,kBAAMM,KAEA,MAAhBA,GACFR,EAAUD,GAIZW,KACC,CAACP,IAsBG,CAAEhW,QAAOwW,WAtDQ,2CAsDIV,WAAUnV,WCrCzB8V,GArBF,WACX,MAAgDd,KAAxC3V,EAAR,EAAQA,MAAOwW,EAAf,EAAeA,WAAYV,EAA3B,EAA2BA,SAAUnV,EAArC,EAAqCA,OAKrC,OACE,sBAAKc,UAAU,iBAAf,UACE,sCACA,+BACE,yCAAYd,KACZ,2CAAcmV,EAAd,OACC9V,GAAS,wCAAWA,QAEvB,wBAAQyB,UAAU,cAAcwC,QAZhB,WAClBuS,KAWE,kHCsISE,ICpJAA,GDUf,YAA4C,IAAZxE,EAAW,EAAvBV,SAAYU,MACtBlP,EAAOgO,cAAPhO,GACFqR,EAAUC,cAChB,EAAsCpS,mBAAS,IAA/C,mBAAO+E,EAAP,KAAoBC,EAApB,KAEA,EAAwBhF,mBAAS,2BAC5BgQ,GAD2B,IAE9BnC,MAAOmC,EAAMnC,OAAS,GACtBmF,IAAK,UAHP,mBAAO9U,EAAP,KAAa6Q,EAAb,KAMA,EAA4B/O,mBAAS,IAArC,mBAAOsO,EAAP,KAAeU,EAAf,KACA,EAAkChP,mBAAS,IAA3C,mBAAO4C,EAAP,KAAkBC,EAAlB,KACMqK,EAAiB,SAAChE,GACtB6F,GAAQ,SAACM,GAAD,mBAAC,eACJA,GADG,mBAELnG,EAAO/G,KACU,eAAhB+G,EAAO/G,KACH4C,EAAYhE,MAAK,SAACqE,GAAD,OAAgBA,EAAWhH,MAAQ8K,EAAOtI,SAC3DsI,EAAOtI,YAIjBH,qBAAU,WACRiM,GAAI9J,UAAUwH,WAAW3N,MAAK,SAACyB,GAAD,OAAU2E,EAAa3E,MACrDwO,GAAI3H,YAAYqF,WAAW3N,MAAK,SAACyB,GAAD,OAAU8G,EAAe9G,QACxD,IAEH,IAeMqQ,EAAW,WACf,IAAMD,EAASD,GAAUnQ,EAAM0P,IAE/B,OADAoB,EAAUV,GAC4B,IAA/BjQ,OAAOC,KAAKgQ,GAAQ5F,QAG7BjI,qBAAU,WAER,OADA8N,IACO,eACN,CAACrQ,IAEJ,IAAMqR,EAAyC,IAA/BlR,OAAOC,KAAKgQ,GAAQ5F,OACpC,OACE,qBAAKnJ,UAAU,aAAf,SACE,sBAAKA,UAAU,uCAAf,UACE,qBAAKA,UAAU,WAAf,SACE,yBAAQA,UAAU,kBAAkBwC,QAAS,kBAAMoQ,EAAQsC,UAA3D,UACE,mBAAGlV,UAAU,qBACb,uEAGJ,qBACEA,UAAU,oCADZ,SAIE,uBACEiQ,SAzCW,SAACC,GACpB,IAGE,GAFAA,EAAEC,kBACcnB,IAEd,OAGF7B,GAAIzM,MAAMoL,OAAOvK,EAAI5C,GACrBiU,EAAQuC,QAAQtQ,GAChB,MAAOtG,GACPqL,QAAQC,IAAItL,KA+BNyB,UAAU,sCAFZ,UAIE,oBAAIA,UAAU,OAAd,kBACA,cAAC,GAAD,CACE4C,KAAK,OACLvB,MAAO1C,EAAKiE,KACZ+K,eAAgBA,EAChBE,MAAM,8CACNtP,MAAOwQ,EAAOnM,OAEhB,cAAC,GAAD,CACEA,KAAK,QACLvB,MAAO1C,EAAK2P,MACZX,eAAgBA,EAChBE,MAAM,6HACNtL,KAAK,QACLhE,MAAOwQ,EAAOT,QAEhB,cAAC,GAAD,CACEX,eAAgBA,EAChBC,QAASpI,EACTqI,MAAM,mIACNxM,MAAO1C,EAAKkH,WACZ6H,cAAe/O,EAAKkH,WAAWjD,KAC/BA,KAAK,aACLrE,MAAOwQ,EAAOlJ,aAGhB,cAAC,GAAD,CACE+H,QAAS,CACP,CAAEhL,KAAM,qBAAOvB,MAAO,QACtB,CAAEuB,KAAM,qBAAOvB,MAAO,UACtB,CAAEuB,KAAM,uCAAUvB,MAAO,UAE3BA,MAAO1C,EAAK8U,IACZ9F,eAAgBA,EAChB/K,KAAK,QAGP,cAAC,GAAD,CACEA,KAAK,YACLgL,QAASvK,EACTsK,eAAgBA,EAChBE,MAAM,oGACNsF,aAAcxU,EAAK0E,UACnB9E,MAAOwQ,EAAO1L,YAGhB,wBACEd,KAAK,SACLvC,UAAU,sCACViO,UAAW+B,EAHb,+BEhFGoF,I,MAlCH,WACV,OACE,qCACE,eAAC,GAAD,WACE,cAAC,GAAD,IACA,qBAAKpV,UAAU,YAAf,SACE,cAAC,EAAD,UACE,cAAC,EAAD,UACE,cAAC,EAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOqV,KAAMxQ,EAAayQ,OAAK,EAACrQ,UAAW0L,KAC3C,cAAC,IAAD,CACE0E,KAAMxQ,EAAc,QACpByQ,OAAK,EACLrQ,UAAWyL,KAEb,cAAC,IAAD,CACE2E,KAAMxQ,EAAc,cACpByQ,OAAK,EACLrQ,UAAWgQ,KAEb,cAAC,IAAD,CAAOI,KAAMzQ,EAAc,UAAWK,UAAW6O,KACjD,cAAC,IAAD,CAAOuB,KAAM1Q,EAAY2Q,OAAK,EAACrQ,UAAW+P,mBAOtD,cAAC,IAAD,SCrCNO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,UACE,cAAC,GAAD,QAGJC,SAASC,eAAe,SAG1B5Y,M","file":"static/js/main.ee7ee289.chunk.js","sourcesContent":["const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry)\n      getFID(onPerfEntry)\n      getFCP(onPerfEntry)\n      getLCP(onPerfEntry)\n      getTTFB(onPerfEntry)\n    })\n  }\n}\n\nexport default reportWebVitals\n","import axios from 'axios'\r\nimport { toast } from 'react-toastify'\r\nimport configFile from '../config.json'\r\nconst http = axios.create({\r\n  baseURL: configFile.apiEndPoint\r\n})\r\n\r\nhttp.interceptors.request.use(\r\n  function (config) {\r\n    if (configFile.isFireBase) {\r\n      const containSlash = /\\/$/gi.test(config.url)\r\n      config.url =\r\n        (containSlash ? config.url.slice(0, -1) : config.url) + '.json'\r\n    }\r\n    return config\r\n  },\r\n  function (error) {\r\n    return Promise.reject(error)\r\n  }\r\n)\r\nfunction transforData(data) {\r\n  return data && !data._id\r\n    ? Object.keys(data).map((key) => ({ ...data[key] }))\r\n    : data\r\n}\r\nhttp.interceptors.response.use(\r\n  (response) => {\r\n    if (configFile.isFireBase) {\r\n      response.data = { content: transforData(response.data) }\r\n    }\r\n    return response\r\n  },\r\n  function (error) {\r\n    const expectedError =\r\n      error.response &&\r\n      error.response.status >= 400 &&\r\n      error.response.status < 500\r\n\r\n    if (!expectedError) {\r\n      toast.info('Something went wrong. Please try again later')\r\n    }\r\n    return Promise.reject(error)\r\n  }\r\n)\r\nconst httpServise = {\r\n  get: http.get,\r\n  post: http.post,\r\n  put: http.put,\r\n  delete: http.delete\r\n}\r\nexport default httpServise\r\n","import httpService from './http.service'\r\n\r\nconst userEndpoint = 'user/'\r\n\r\nconst userService = {\r\n  get: async () => {\r\n    const { data } = await httpService.get(userEndpoint)\r\n    return data\r\n  },\r\n  create: async (payload) => {\r\n    const { data } = await httpService.put(userEndpoint + payload._id, payload)\r\n    return data\r\n  }\r\n}\r\n\r\nexport default userService\r\n","import React from 'react'\nconst Loader = () => {\n  return (\n    <div className=\"d-flex vh-100 align-items-center justify-content-center\">\n      <div className=\"spinner-border text-primary\" role=\"status\">\n        <span className=\"visually-hidden\">Loading...</span>\n      </div>\n    </div>\n  )\n}\n\nexport default Loader\n","import React, { useContext, useEffect, useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport userServise from '../services/user.service'\r\nimport { toast } from 'react-toastify'\r\nimport Loader from '../components/ui/loader'\r\n\r\nconst UserContext = React.createContext()\r\n\r\nexport const useUsers = () => {\r\n  return useContext(UserContext)\r\n}\r\n\r\nconst UserProvider = ({ children }) => {\r\n  const [users, setUsers] = useState([])\r\n  const [loading, setLoading] = useState(true)\r\n  const [error, setError] = useState(null)\r\n\r\n  useEffect(() => {\r\n    getUser()\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    if (error !== null) {\r\n      toast.error(error)\r\n      setError(null)\r\n    }\r\n  }, [error])\r\n\r\n  async function getUser() {\r\n    try {\r\n      const { content } = await userServise.get()\r\n\r\n      setUsers(content)\r\n      setLoading(false)\r\n    } catch (error) {\r\n      errorCatcher(error)\r\n    }\r\n  }\r\n  function getUserById(id) {\r\n    return users.find((u) => u._id === id)\r\n  }\r\n\r\n  function errorCatcher(error) {\r\n    const { message } = error.response.data\r\n    setError(message)\r\n    setLoading(false)\r\n  }\r\n  return (\r\n    <UserContext.Provider value={{ users, getUserById }}>\r\n      {!loading ? children : <Loader />}\r\n    </UserContext.Provider>\r\n  )\r\n}\r\n\r\nUserProvider.propTypes = {\r\n  children: PropTypes.oneOfType([\r\n    PropTypes.arrayOf(PropTypes.node),\r\n    PropTypes.node\r\n  ])\r\n}\r\n\r\nexport default UserProvider\r\n","import React from 'react'\nimport _ from 'lodash'\nimport PropTypes from 'prop-types'\n\nconst Pagination = (props) => {\n  const { pageSize, itemsCount, onPageChange, currentPage } = props\n  const pageCount = Math.ceil(itemsCount / pageSize)\n  const pages = _.range(1, pageCount + 1)\n  if (pageCount === 1) return null\n  return (\n    <nav\n      aria-label=\"Page navigation example\"\n      className=\"d-flex justify-content-center w-100\"\n    >\n      <ul className=\"pagination m-0\">\n        {pages.map((page) => {\n          return (\n            <li\n              className={'page-item ' + (page === currentPage ? 'active' : '')}\n              key={page}\n            >\n              <button\n                type=\"button\"\n                className=\"page-link\"\n                onClick={() => {\n                  onPageChange(page)\n                }}\n              >\n                {page}\n              </button>\n            </li>\n          )\n        })}\n      </ul>\n    </nav>\n  )\n}\nPagination.propTypes = {\n  pageSize: PropTypes.number.isRequired,\n  itemsCount: PropTypes.number.isRequired,\n  onPageChange: PropTypes.func.isRequired,\n  currentPage: PropTypes.number.isRequired\n}\nexport default Pagination\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nconst Bookmark = ({ toggleBookMarkHanble, id, status }) => {\n  return (\n    <button\n      className=\"btn btn-lg  \"\n      onClick={() => {\n        toggleBookMarkHanble(id)\n      }}\n    >\n      {<i className={status ? 'bi bi-bookmark-fill' : 'bi bi-bookmark'}></i>}\n    </button>\n  )\n}\nBookmark.propTypes = {\n  toggleBookMarkHanble: PropTypes.func.isRequired,\n  id: PropTypes.string.isRequired,\n  status: PropTypes.bool\n}\nexport default Bookmark\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nconst Quality = ({ name, color }) => {\n  return (\n    <span\n      style={{ margin: '3px 3px', fontSize: '14px' }}\n      className={`badge bg-${color}`}\n    >\n      {name}\n    </span>\n  )\n}\nQuality.propTypes = {\n  _id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  color: PropTypes.string.isRequired\n}\nexport default Quality\n","import httpService from './http.service'\r\n\r\nconst qualityEndpoint = 'quality/'\r\n\r\nconst qualityService = {\r\n  get: async () => {\r\n    const { data } = await httpService.get(qualityEndpoint)\r\n    return data\r\n  }\r\n}\r\nexport default qualityService\r\n","import React, { useContext, useEffect, useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { toast } from 'react-toastify'\r\nimport qualityService from '../services/quality.service'\r\n\r\nconst qualityContext = React.createContext()\r\nexport const useQualities = () => {\r\n  return useContext(qualityContext)\r\n}\r\n\r\nconst QualityProvider = ({ children }) => {\r\n  const [qualities, setQualities] = useState([])\r\n  const [loading, setLoading] = useState(true)\r\n  const [error, setError] = useState(null)\r\n  useEffect(() => {\r\n    getQualities()\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    if (error !== null) {\r\n      toast.error(error)\r\n      setError(null)\r\n    }\r\n  }, [error])\r\n\r\n  async function getQualities() {\r\n    try {\r\n      const { content } = await qualityService.get()\r\n      setQualities(content)\r\n      setLoading(false)\r\n    } catch (error) {\r\n      errorCatcher(error)\r\n    }\r\n  }\r\n  // function getqualityById(id) {\r\n  //   return qualitys.find((x) => x._id === id)\r\n  // }\r\n  function errorCatcher(error) {\r\n    const { message } = error.response.data\r\n    setError(message)\r\n    setLoading(false)\r\n  }\r\n\r\n  return (\r\n    <qualityContext.Provider value={{ qualities, loading }}>\r\n      {children}\r\n    </qualityContext.Provider>\r\n  )\r\n}\r\nQualityProvider.propTypes = {\r\n  children: PropTypes.oneOfType([\r\n    PropTypes.arrayOf(PropTypes.node),\r\n    PropTypes.node\r\n  ])\r\n}\r\nexport default QualityProvider\r\n","import React from 'react'\nimport Quality from './quality'\nimport PropTypes from 'prop-types'\nimport { useQualities } from '../../../hooks/useQualities'\n\nconst QualityList = ({ qualities: qualitiesArr }) => {\n  const { qualities } = useQualities()\n\n  const intersection = qualities.filter((x) => qualitiesArr.includes(x._id))\n  return (\n    <>\n      {intersection.map((quality, i) => {\n        return <Quality key={i} {...quality} />\n      })}\n    </>\n  )\n}\nQualityList.propTypes = {\n  qualities: PropTypes.array\n}\nexport default QualityList\n","import QualityList from './qualityList'\n\nexport default QualityList\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nconst TableHeader = ({ currentSort, setSortBy, columns }) => {\n  const handleSort = (name) => {\n    if (currentSort.iter === name) {\n      setSortBy({\n        ...currentSort,\n        order: currentSort.order === 'asc' ? 'desc' : 'asc'\n      })\n    } else {\n      setSortBy({ iter: name, order: 'asc' })\n    }\n  }\n\n  const renderSortArrow = (currentSort, currentPath) => {\n    if (currentSort.iter === currentPath) {\n      if (currentSort.order === 'asc') {\n        return <i className=\"bi bi-caret-down-fill\"></i>\n      }\n      return <i className=\"bi bi-caret-up-fill\"></i>\n    }\n    return null\n  }\n\n  return (\n    <thead className=\"border-bottom border-dark\">\n      <tr>\n        {Object.keys(columns).map((column) => (\n          <th\n            onClick={\n              columns[column].iter\n                ? () => handleSort(columns[column].iter)\n                : undefined\n            }\n            {...{ role: columns[column].iter && 'button' }}\n            scope=\"col\"\n            className=\"text-start align-middle \"\n            key={column}\n          >\n            <div className=\"justify-content-center d-flex\">\n              {columns[column].name}{' '}\n              {renderSortArrow(currentSort, columns[column].iter)}\n            </div>\n          </th>\n        ))}\n      </tr>\n    </thead>\n  )\n}\nTableHeader.propTypes = {\n  handleSort: PropTypes.func,\n  currentSort: PropTypes.object,\n  setSortBy: PropTypes.func,\n  columns: PropTypes.object\n}\nexport default TableHeader\n","export const MAIN_ROUTE = '/fast_company'\nexport const LOGIN_ROUTE = '/fast_company/login'\nexport const NEW_USER_ROUTE = '/fast_company/new_user'\nexport const NEW_USER_EDIT_ROUTE = '/fast_company/new_user/edit'\nexport const USERS_ROUTE = '/fast_company/users'\n","import React from 'react'\nimport { PropTypes } from 'prop-types'\nimport _ from 'lodash'\nimport { Link } from 'react-router-dom'\nimport { USERS_ROUTE } from '../../../utilits/constants'\n\nconst TableBody = ({ users, columns }) => {\n  const renderContent = (item, column) => {\n    if (columns[column].component) {\n      const component = columns[column].component\n      if (typeof component === 'function') {\n        return component(item)\n      }\n      return component\n    }\n    if (columns[column].iter === 'name') {\n      return <Link to={`${USERS_ROUTE}/${item._id}`}>{item.name}</Link>\n    }\n    return _.get(item, columns[column].iter)\n  }\n\n  return (\n    <>\n      <tbody>\n        {users.map((item) => (\n          <tr key={item._id}>\n            {Object.keys(columns).map((column) => (\n              <td key={column}>{renderContent(item, column)}</td>\n            ))}\n          </tr>\n        ))}\n      </tbody>\n    </>\n  )\n}\nTableBody.propTypes = {\n  users: PropTypes.array,\n  columns: PropTypes.object\n}\nexport default TableBody\n","import Table from './table'\nimport TableBody from './tableBody'\nimport TableHeader from './tableHeader'\n\nexport { TableBody, TableHeader }\nexport default Table\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport TableHeader from './tableHeader'\nimport TableBody from './tableBody'\n\nconst Table = ({ users, currentSort, setSortBy, columns, children }) => {\n  return (\n    <table className=\"table\">\n      {children || (\n        <>\n          <TableHeader\n            currentSort={currentSort}\n            setSortBy={setSortBy}\n            columns={columns}\n          />\n          <TableBody {...{ columns, users }} />\n        </>\n      )}\n    </table>\n  )\n}\nTable.propTypes = {\n  children: PropTypes.array,\n  users: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n  currentSort: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n  setSortBy: PropTypes.func,\n  columns: PropTypes.object\n}\nexport default Table\n","import httpService from './http.service'\r\n\r\nconst professionEndpoint = 'profession/'\r\n\r\nconst professionService = {\r\n  get: async () => {\r\n    const { data } = await httpService.get(professionEndpoint)\r\n    return data\r\n  }\r\n}\r\n\r\nexport default professionService\r\n","import React, { useContext, useEffect, useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { toast } from 'react-toastify'\r\nimport professionService from '../services/profession.service'\r\n\r\nconst ProfessionContext = React.createContext()\r\nexport const useProfessions = () => {\r\n  return useContext(ProfessionContext)\r\n}\r\n\r\nconst ProfessionProvider = ({ children }) => {\r\n  const [professions, setProfessions] = useState([])\r\n  const [loading, setLoading] = useState(true)\r\n  const [error, setError] = useState(null)\r\n  useEffect(() => {\r\n    getProfessions()\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    if (error !== null) {\r\n      toast.error(error)\r\n      setError(null)\r\n    }\r\n  }, [error])\r\n\r\n  async function getProfessions() {\r\n    try {\r\n      const { content } = await professionService.get()\r\n      setProfessions(content)\r\n      setLoading(false)\r\n    } catch (error) {\r\n      errorCatcher(error)\r\n    }\r\n  }\r\n  function getProfessionById(id) {\r\n    return professions.find((x) => x._id === id)\r\n  }\r\n  function errorCatcher(error) {\r\n    const { message } = error.response.data\r\n    setError(message)\r\n    setLoading(false)\r\n  }\r\n\r\n  return (\r\n    <ProfessionContext.Provider\r\n      value={{ professions, loading, getProfessionById }}\r\n    >\r\n      {children}\r\n    </ProfessionContext.Provider>\r\n  )\r\n}\r\nProfessionProvider.propTypes = {\r\n  children: PropTypes.oneOfType([\r\n    PropTypes.arrayOf(PropTypes.node),\r\n    PropTypes.node\r\n  ])\r\n}\r\nexport default ProfessionProvider\r\n","import PropTypes from 'prop-types'\r\nimport React from 'react'\r\nimport { useProfessions } from '../../hooks/useProfession'\r\n\r\nfunction Profession({ id }) {\r\n  const { loading, getProfessionById } = useProfessions()\r\n\r\n  const profession = getProfessionById(id)\r\n\r\n  return <div>{!loading ? profession.name : 'loading'}</div>\r\n}\r\nProfession.propTypes = {\r\n  id: PropTypes.string\r\n}\r\nexport default Profession\r\n","import React from 'react'\nimport { PropTypes } from 'prop-types'\n\nimport Bookmark from '../common/Bookmark'\nimport QualityList from './qualities'\nimport Table, { TableHeader, TableBody } from '../../components/common/table'\nimport Profession from '../ui/profession'\n\nconst UsersTable = ({\n  users,\n  currentSort,\n  setSortBy,\n  toggleBookMarkHanble,\n  deleteUserHandler,\n  ...rest\n}) => {\n  const columns = {\n    name: { iter: 'name', name: 'Имя' },\n    qualities: {\n      name: 'Качество',\n      component: (user) => <QualityList qualities={user.qualities} />\n    },\n    professions: {\n      iter: 'profession',\n      name: 'Профессия',\n      component: (user) => <Profession id={user.profession} />\n    },\n    completedMeetings: {\n      iter: 'completedMeetings',\n      name: 'Встретился раз'\n    },\n    rate: { iter: 'rate', name: 'Оценка' },\n    bookmark: {\n      iter: 'status',\n      name: 'Избранное',\n      component: (user) => (\n        <Bookmark\n          toggleBookMarkHanble={toggleBookMarkHanble}\n          id={user._id}\n          status={user.status}\n        />\n      )\n    },\n    delete: {\n      component: (user) => (\n        <button\n          className=\"btn btn-danger\"\n          onClick={() => {\n            deleteUserHandler(user._id)\n          }}\n        >\n          Delete\n        </button>\n      )\n    }\n  }\n  return (\n    <Table\n      currentSort={currentSort}\n      setSortBy={setSortBy}\n      columns={columns}\n      users={users}\n    >\n      <TableHeader\n        currentSort={currentSort}\n        setSortBy={setSortBy}\n        columns={columns}\n      />\n      <TableBody {...{ columns, users }} />\n    </Table>\n  )\n}\n\nexport default UsersTable\nUsersTable.propTypes = {\n  users: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n  toggleBookMarkHanble: PropTypes.func,\n  currentSort: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n  setSortBy: PropTypes.func,\n  deleteUserHandler: PropTypes.func\n}\n","export const renderPhrase = (numbers) => {\n  let text = ''\n\n  const lastNumber = Number(numbers.toString().split('').slice(-1))\n  if (numbers === 0) return (text = 'Нет никого с кем можно тусануть')\n  if (numbers === 1) return `${numbers} человек тусанeт с тобой`\n  if (numbers > 1 && numbers < 5) {\n    return (text = `${numbers} человека тусанут с тобой`)\n  }\n\n  if (numbers > 14 && [2, 3, 4].includes(lastNumber)) {\n    return (text = `${numbers} человека тусанут с тобой`)\n  }\n  if (numbers > 14 && [1].includes(lastNumber)) {\n    return (text = `${numbers} человек тусанeт с тобой`)\n  }\n\n  text = `${numbers} человек тусанyт с тобой`\n  return text\n}\n\nexport const spanClass = (lenght) => {\n  let text = ''\n  lenght === 0 ? (text = 'badge bg-danger') : (text = 'badge bg-primary')\n\n  return text\n}\nexport const renderYears = (date) => {\n  let text = ''\n  const tadayYear = new Date().getFullYear()\n  const yearFromUserDate = Number(date.split('-')[0])\n\n  const difference = tadayYear - yearFromUserDate\n  const lastNumber = difference.toString().slice(-1)\n  switch (lastNumber) {\n    case '1':\n      text = 'год'\n      break\n    case '2':\n      text = 'года'\n      break\n    case '3':\n      text = 'года'\n      break\n    case '4':\n      text = 'года'\n      break\n    case '5':\n      text = 'лет'\n      break\n\n    default:\n      text = difference > 10 ? 'лет' : 'год'\n      break\n  }\n\n  return `(${difference} ${text}) `\n}\n\nexport const getCommentTime = (timeStamp) => {\n  const date = new Date(parseInt(timeStamp))\n  const dateNow = new Date()\n  const yearDif = dateNow.getFullYear() - date.getFullYear()\n\n  if (yearDif === 0) {\n    const dayDif = dateNow.getDay() - date.getDay()\n    if (dayDif === 0) {\n      const hourDif = dateNow.getHours() - date.getHours()\n      if (hourDif === 0) {\n        const minDif = dateNow.getMinutes() - date.getMinutes()\n        if (minDif >= 0 && minDif < 5) return '1 минуту назад'\n        if (minDif >= 5 && minDif < 10) return '5 минут назад'\n        if (minDif >= 10 && minDif < 30) return '10 минут назад'\n        return '30 минут назад'\n      }\n      return `${date.getHours()} : ${date.getMinutes()}`\n    }\n    return `${date.getDay()} ${date.toLocaleString('default', {\n      month: 'long'\n    })}`\n  }\n\n  return date.getFullYear() + '.' + (date.getMonth() + 1) + '_' + date.getDate()\n}\n","import React from 'react'\nimport { renderPhrase, spanClass } from '../../utilits/helpers'\nimport PropTypes from 'prop-types'\n\nconst SearchStatus = ({ userLength }) => {\n  return (\n    <div className=\"d-flex justify-content-center \">\n      <span\n        style={{ fontSize: '20px', margin: '20px' }}\n        className={spanClass(userLength)}\n      >\n        {renderPhrase(userLength)}\n      </span>\n    </div>\n  )\n}\nSearchStatus.propTypes = {\n  userLength: PropTypes.number.isRequired\n}\nexport default SearchStatus\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nconst GroupList = ({\n  professions,\n  onItemSelect,\n  valueProperty,\n  contentProperty,\n  selectedProf,\n  resetProfessionsHandler\n}) => {\n  return (\n    <div className=\"d-flex flex-column flex-shrink-0\">\n      <ul className=\"list-group mt-2\">\n        {!Array.isArray(professions) &&\n          Object.keys(professions).map((key) => {\n            return (\n              <li\n                key={professions[key][valueProperty]}\n                onClick={() => {\n                  onItemSelect(professions[key])\n                }}\n                className={\n                  selectedProf === professions[key]\n                    ? 'list-group-item active'\n                    : 'list-group-item '\n                }\n                role=\"button\"\n              >\n                {professions[key][contentProperty]}\n              </li>\n            )\n          })}\n\n        {professions.map((item) => {\n          return (\n            <li\n              key={item[valueProperty]}\n              onClick={() => {\n                onItemSelect(item)\n              }}\n              className={\n                selectedProf === item\n                  ? 'list-group-item active'\n                  : 'list-group-item '\n              }\n              role=\"button\"\n            >\n              {item[contentProperty]}\n            </li>\n          )\n        })}\n      </ul>\n      <div className=\"d-flex align-items-center justify-content-center\">\n        <button\n          className=\"btn btn-outline-primary mt-2 \"\n          onClick={resetProfessionsHandler}\n        >\n          Reset\n        </button>\n      </div>\n    </div>\n  )\n}\nGroupList.defaultProps = {\n  valueProperty: '_id',\n  contentProperty: 'name'\n}\nGroupList.propTypes = {\n  professions: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n  onItemSelect: PropTypes.func,\n  valueProperty: PropTypes.string.isRequired,\n  contentProperty: PropTypes.string.isRequired,\n  selectedProf: PropTypes.object,\n  resetProfessionsHandler: PropTypes.func\n}\nexport default GroupList\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nfunction SearchBar({ searchValue, getSearchValueHandler }) {\n  return (\n    <input\n      type=\"text\"\n      className=\"form-control\"\n      placeholder=\"Search...\"\n      value={searchValue}\n      onChange={getSearchValueHandler}\n    />\n  )\n}\n\nSearchBar.propTypes = {\n  getSearchValueHandler: PropTypes.func,\n  searchValue: PropTypes.string\n}\n\nexport default SearchBar\n","import Users from './Users'\n\nexport default Users\n","import React, { useState, useEffect } from 'react'\nimport Pagination from '../../components/common/Pagination'\nimport { paginate } from '../../utilits/paginate'\nimport PropTypes from 'prop-types'\nimport UsersTable from '../../components/ui/usersTable'\nimport SearchStatus from '../../components/ui/searchStatus'\nimport GroupList from '../../components/common/groupList'\nimport _ from 'lodash'\nimport SearchBar from '../../components/SearchBar'\nimport { useUsers } from '../../hooks/useUsers'\nimport { useProfessions } from '../../hooks/useProfession'\n\nconst Users = () => {\n  const [currentPage, setCurrentPage] = useState(1)\n  const [sortBy, setSortBy] = useState({ iter: 'name', order: 'asc' })\n  const [selectedProf, setSelectedProf] = useState()\n\n  const [searchValue, setSearchValue] = useState('')\n\n  const getSearchValueHandler = () => {\n    setSelectedProf()\n    setSearchValue(event.target.value)\n  }\n  const { users } = useUsers()\n  const { professions } = useProfessions()\n\n  useEffect(() => {\n    setCurrentPage(1)\n  }, [selectedProf])\n\n  const resetProfessionsHandler = () => {\n    setSearchValue('')\n    setSelectedProf()\n  }\n  const professionSelectHandle = (item) => {\n    setSearchValue('')\n    setSelectedProf(item)\n  }\n  const pageChangehandle = (pageIndex) => {\n    setCurrentPage(pageIndex)\n  }\n\n  const toggleBookMarkHanble = (id) => {\n    const newUsers = [...users]\n    newUsers.filter((user) => {\n      if (user._id === id) {\n        user.status = !user.status\n        return user\n      }\n      return user\n    })\n  }\n\n  const deleteUserHandler = (id) => {\n    // const filtered = users.filter((user) => user._id !== id)\n    // setUsers(filtered)\n    console.log(id)\n  }\n\n  const pageSize = 3\n\n  let filteredUsers = users\n\n  if (selectedProf) {\n    filteredUsers = users.filter((user) => user.profession === selectedProf._id)\n  } else if (searchValue) {\n    filteredUsers = users.filter((user) =>\n      user.name.toLowerCase().includes(searchValue.toLowerCase())\n    )\n  }\n\n  const sortedUsers = _.orderBy(filteredUsers, [sortBy.iter], [sortBy.order])\n  const userLength = sortedUsers.length\n\n  const cporUsers = paginate(sortedUsers, currentPage, pageSize)\n\n  return (\n    <div className=\"container shadow mt-4\">\n      <div className=\"row mb-4\">\n        <SearchStatus userLength={userLength} />\n        <div className=\"col-md-2 mb-3\">\n          {\n            <GroupList\n              professions={professions}\n              onItemSelect={professionSelectHandle}\n              selectedProf={selectedProf}\n              resetProfessionsHandler={resetProfessionsHandler}\n            />\n          }\n        </div>\n        <div className=\"col-md-10\">\n          <SearchBar\n            searchValue={searchValue}\n            getSearchValueHandler={getSearchValueHandler}\n          />\n          <div>\n            <UsersTable\n              users={cporUsers}\n              setSortBy={setSortBy}\n              currentSort={sortBy}\n              deleteUserHandler={deleteUserHandler}\n              toggleBookMarkHanble={toggleBookMarkHanble}\n            />\n            <div className=\"mb-3\">\n              <Pagination\n                itemsCount={userLength}\n                pageSize={pageSize}\n                onPageChange={pageChangehandle}\n                currentPage={currentPage}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\nUsers.propTypes = {\n  users: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n  selectedProf: PropTypes.object,\n  setCount: PropTypes.func,\n  professions: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n  professionSelectHandle: PropTypes.func,\n  resetProfessionsHandler: PropTypes.func\n}\nexport default Users\n","import _ from 'lodash'\n\nexport function paginate(items, pageNumber, pageSize) {\n  const startIndex = (pageNumber - 1) * pageSize\n  // _.slice(items, startIndex)\n  // _.take(_.slice(items, startIndex), pageSize)\n  return _(items).slice(startIndex).take(pageSize).value()\n}\n","import React from 'react'\r\n\r\nfunction UserImage() {\r\n  return (\r\n    <img\r\n      src={`https://avatars.dicebear.com/api/avataaars/${(Math.random() + 1)\r\n        .toString(36)\r\n        .substring(7)}.svg`}\r\n      className=\"rounded-circle shadow-1-strong me-3\"\r\n      alt=\"avatar\"\r\n      width=\"65\"\r\n      height=\"65\"\r\n    />\r\n  )\r\n}\r\n\r\nexport default UserImage\r\n","export const professionsObject = {\n  doctor: { _id: '67rdca3eeb7f6fgeed471818', name: 'Доктор' },\n  waiter: { _id: '67rdca3eeb7f6fgeed471820', name: 'Официант' },\n  physics: { _id: '67rdca3eeb7f6fgeed471814', name: 'Физик' },\n  engineer: { _id: '67rdca3eeb7f6fgeed471822', name: 'Инженер' },\n  actor: { _id: '67rdca3eeb7f6fgeed471824', name: 'Актер' },\n  cook: { _id: '67rdca3eeb7f6fgeed471829', name: 'Повар' }\n}\nexport const professions = [\n  { _id: '67rdca3eeb7f6fgeed471818', name: 'Доктор' },\n  { _id: '67rdca3eeb7f6fgeed471820', name: 'Официант' },\n  { _id: '67rdca3eeb7f6fgeed471814', name: 'Физик' },\n  { _id: '67rdca3eeb7f6fgeed471822', name: 'Инженер' },\n  { _id: '67rdca3eeb7f6fgeed471824', name: 'Актер' },\n  { _id: '67rdca3eeb7f6fgeed471829', name: 'Повар' }\n]\nconst fetchAll = () =>\n  new Promise((resolve) => {\n    window.setTimeout(() => {\n      resolve(professions)\n    }, 0)\n  })\n\nexport default {\n  fetchAll\n}\n","import { professionsObject as professions } from './professions.api'\nconst qualities = {\n  tedious: {\n    _id: '67rdca3eeb7f6fgeed471198',\n    name: 'Нудила',\n    color: 'primary'\n  },\n  strange: {\n    _id: '67rdca3eeb7f6fgeed471100',\n    name: 'Странный',\n    color: 'secondary'\n  },\n  buller: {\n    _id: '67rdca3eeb7f6fgeed4711012',\n    name: 'Троль',\n    color: 'success'\n  },\n  alcoholic: {\n    _id: '67rdca3eeb7f6fgeed471101',\n    name: 'Алкоголик',\n    color: 'danger'\n  },\n  handsome: {\n    _id: '67rdca3eeb7f6fgeed471102',\n    name: 'Красавчик',\n    color: 'info'\n  },\n  uncertain: {\n    _id: '67rdca3eeb7f6fgeed471102',\n    name: 'Неуверенный',\n    color: 'dark'\n  }\n}\n\nconst users = [\n  {\n    _id: '67rdca3eeb7f6fgeed471815',\n    name: 'Джон Дориан',\n    profession: professions.doctor,\n    qualities: [qualities.tedious, qualities.uncertain, qualities.strange],\n    completedMeetings: 36,\n    rate: 2.5,\n    bookmark: false\n  },\n  {\n    _id: '67rdca3eeb7f6fgeed471816',\n    name: 'Кокс',\n    profession: professions.doctor,\n    qualities: [qualities.buller, qualities.handsome, qualities.alcoholic],\n    completedMeetings: 15,\n    rate: 2.5,\n    bookmark: false\n  },\n  {\n    _id: '67rdca3eeb7f6fgeed471817',\n    name: 'Боб Келсо',\n    profession: professions.doctor,\n    qualities: [qualities.buller],\n    completedMeetings: 247,\n    rate: 3.5,\n    bookmark: false\n  },\n  {\n    _id: '67rdca3eeb7f6fgeed471818',\n    name: 'Рэйчел Грин',\n    profession: professions.waiter,\n    qualities: [qualities.uncertain],\n    completedMeetings: 148,\n    rate: 3.5,\n    bookmark: false\n  },\n  {\n    _id: '67rdca3eeb7f6fgeed471819',\n    name: 'Шелдон Купер',\n    profession: professions.physics,\n    qualities: [qualities.strange, qualities.tedious],\n    completedMeetings: 37,\n    rate: 4.6,\n    bookmark: false\n  },\n  {\n    _id: '67rdca3eeb7f6fgeed471820',\n    name: 'Леонард Хофстедтер',\n    profession: professions.physics,\n    qualities: [qualities.strange, qualities.uncertain],\n    completedMeetings: 147,\n    rate: 3.5,\n    bookmark: false\n  },\n  {\n    _id: '67rdca3eeb7f6fgeed471821',\n    name: 'Говард Воловиц',\n    profession: professions.engineer,\n    qualities: [qualities.strange, qualities.tedious],\n    completedMeetings: 72,\n    rate: 3.5,\n    bookmark: false\n  },\n  {\n    _id: '67rdca3eeb7f6fgeed471822',\n    name: 'Никола Тесла',\n    profession: professions.engineer,\n    qualities: [qualities.handsome],\n    completedMeetings: 72,\n    rate: 5,\n    bookmark: false\n  },\n  {\n    _id: '67rdca3eeb7f6fgeed471823',\n    name: 'Моника Геллер',\n    profession: professions.cook,\n    qualities: [qualities.strange, qualities.uncertain],\n    completedMeetings: 17,\n    rate: 4.5,\n    bookmark: false\n  },\n  {\n    _id: '67rdca3eeb7f6fgeed471824',\n    name: 'Рататуй',\n    profession: professions.cook,\n    qualities: [qualities.handsome, qualities.buller],\n    completedMeetings: 17,\n    rate: 4.5,\n    bookmark: false\n  },\n  {\n    _id: '67rdca3eeb7f6fgeed47181f',\n    name: 'Джоуи Триббиани',\n    profession: professions.actor,\n    qualities: [qualities.uncertain, qualities.strange],\n    completedMeetings: 434,\n    rate: 3.5,\n    bookmark: false\n  },\n  {\n    _id: '67rdca3eeb7f6fgeed47181r',\n    name: 'Брэд Питт',\n    profession: professions.actor,\n    qualities: [qualities.handsome],\n    completedMeetings: 434,\n    rate: 5,\n    bookmark: false\n  }\n]\nif (!localStorage.getItem('users')) {\n  localStorage.setItem('users', JSON.stringify(users))\n}\n\nconst fetchAll = () =>\n  new Promise((resolve) => {\n    window.setTimeout(() => {\n      resolve(JSON.parse(localStorage.getItem('users')))\n    }, 300)\n  })\nconst update = (id, data) =>\n  new Promise((resolve) => {\n    const users = JSON.parse(localStorage.getItem('users'))\n    const userIndex = users.findIndex((u) => u._id === id)\n    users[userIndex] = { ...users[userIndex], ...data }\n    localStorage.setItem('users', JSON.stringify(users))\n    resolve(users[userIndex])\n  })\n\nconst getById = (id) =>\n  new Promise((resolve) => {\n    window.setTimeout(() => {\n      resolve(\n        JSON.parse(localStorage.getItem('users')).find(\n          (user) => user._id === id\n        )\n      )\n    }, 300)\n  })\nexport default {\n  fetchAll,\n  getById,\n  update\n}\n","const qualities = {\r\n  tedious: {\r\n    _id: '67rdca3eeb7f6fgeed471198',\r\n    name: 'Нудила',\r\n    color: 'primary'\r\n  },\r\n  strange: {\r\n    _id: '67rdca3eeb7f6fgeed471100',\r\n    name: 'Странный',\r\n    color: 'secondary'\r\n  },\r\n  buller: {\r\n    _id: '67rdca3eeb7f6fgeed4711012',\r\n    name: 'Троль',\r\n    color: 'success'\r\n  },\r\n  alcoholic: {\r\n    _id: '67rdca3eeb7f6fgeed471101',\r\n    name: 'Алкоголик',\r\n    color: 'danger'\r\n  },\r\n  handsome: {\r\n    _id: '67rdca3eeb7f6fgeed471102',\r\n    name: 'Красавчик',\r\n    color: 'info'\r\n  },\r\n  uncertain: {\r\n    _id: '67rdca3eeb7f6fgeed471102',\r\n    name: 'Неуверенный',\r\n    color: 'dark'\r\n  }\r\n}\r\nconst fetchAll = () =>\r\n  new Promise((resolve) => {\r\n    window.setTimeout(() => {\r\n      resolve(qualities)\r\n    }, 0)\r\n  })\r\n\r\nexport default {\r\n  fetchAll\r\n}\r\n","const comments = [\r\n  {\r\n    _id: '67rdca3eeb7f6fg',\r\n    userId: '67rdca3eeb7f6fgeed471815',\r\n    pageId: '67rdca3eeb7f6fgeed471815',\r\n    content: 'Lorem ipsum dolor',\r\n    created_at: '1633576399367'\r\n  },\r\n  {\r\n    _id: '67rdca3eeb7f6fgdasd',\r\n    pageId: '67rdca3eeb7f6fgeed471815',\r\n    userId: '67rdca3eeb7f6fgeed471815',\r\n    content: 'Lorem ipsum dolor and etc',\r\n    created_at: '1633573058520'\r\n  },\r\n  {\r\n    _id: '67rdca3eeb7f6fgdaasd',\r\n    pageId: '67rdca3eeb7f6fgeed471817',\r\n    userId: '67rdca3eeb7f6fgeed471815',\r\n    content: 'Lorem ipsum dolor and etc',\r\n    created_at: '1633573058520'\r\n  }\r\n]\r\nif (!localStorage.getItem('comments')) {\r\n  localStorage.setItem('comments', JSON.stringify(comments))\r\n}\r\nconst fetchAll = () =>\r\n  new Promise((resolve) => {\r\n    window.setTimeout(() => {\r\n      resolve(comments)\r\n    }, 200)\r\n  })\r\n\r\nconst fetchCommentsForUser = (userId) =>\r\n  new Promise((resolve) => {\r\n    window.setTimeout(() => {\r\n      resolve(\r\n        JSON.parse(localStorage.getItem('comments')).filter(\r\n          (c) => c.pageId === userId\r\n        )\r\n      )\r\n    }, 200)\r\n  })\r\nconst add = (data) =>\r\n  new Promise((resolve) => {\r\n    window.setTimeout(() => {\r\n      const comments = JSON.parse(localStorage.getItem('comments'))\r\n      const newComment = {\r\n        ...data,\r\n        created_at: Date.now(),\r\n        _id: Math.random().toString(36).substr(2, 9)\r\n      }\r\n      comments.push(newComment)\r\n      localStorage.setItem('comments', JSON.stringify(comments))\r\n      resolve(newComment)\r\n    }, 200)\r\n  })\r\n\r\nconst remove = (id) =>\r\n  new Promise((resolve) => {\r\n    window.setTimeout(() => {\r\n      const comments = JSON.parse(localStorage.getItem('comments'))\r\n      const newComments = comments.filter((x) => x._id !== id)\r\n      console.log(id)\r\n      console.log(newComments)\r\n      localStorage.setItem('comments', JSON.stringify(newComments))\r\n      resolve(id)\r\n    }, 200)\r\n  })\r\nexport default {\r\n  fetchAll,\r\n  fetchCommentsForUser,\r\n  add,\r\n  remove\r\n}\r\n","import users from './fake.api/user.api'\nimport professions from './fake.api/professions.api'\nimport qualities from './fake.api/qualities.api'\nimport comments from './fake.api/comments.api'\nconst API = {\n  users,\n  professions,\n  qualities,\n  comments\n}\nexport default API\n","import React, { useEffect, useState } from 'react'\r\nimport UserImage from '../ui/UserImage'\r\nimport PropTypes from 'prop-types'\r\nimport Loader from '../ui/loader'\r\nimport { getCommentTime } from '../../utilits/helpers'\r\nimport api from '../../API'\r\n\r\nfunction SingleCommentForUser({\r\n  userId,\r\n  content,\r\n  created_at: createdAt,\r\n  removeCommentHandler,\r\n  _id\r\n}) {\r\n  const [user, setUser] = useState({})\r\n\r\n  useEffect(() => {\r\n    api.users.getById(userId).then((user) => {\r\n      setUser(user)\r\n    })\r\n  }, [])\r\n\r\n  if (!userId) {\r\n    return <Loader />\r\n  }\r\n  getCommentTime(createdAt)\r\n\r\n  return (\r\n    <div className=\"bg-light card-body  mb-3\">\r\n      <div className=\"row\">\r\n        <div className=\"col\">\r\n          <div className=\"d-flex flex-start \">\r\n            <UserImage />\r\n            <div className=\"flex-grow-1 flex-shrink-1\">\r\n              <div className=\"mb-4\">\r\n                <div className=\"d-flex justify-content-between align-items-center\">\r\n                  <p className=\"mb-1 \">\r\n                    {user.name}\r\n                    <span className=\"small ms-3\">\r\n                      {getCommentTime(createdAt)}\r\n                    </span>\r\n                  </p>\r\n                  <button\r\n                    className=\"btn btn-sm text-primary d-flex align-items-center\r\n                  \"\r\n                    onClick={() => removeCommentHandler(_id)}\r\n                  >\r\n                    <i className=\"bi bi-x-lg\"></i>\r\n                  </button>\r\n                </div>\r\n                <p className=\"small mb-0\">{content}</p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\nSingleCommentForUser.propTypes = {\r\n  allUsers: PropTypes.oneOfType([PropTypes.array, PropTypes.object]),\r\n  userId: PropTypes.string,\r\n  _id: PropTypes.string,\r\n  content: PropTypes.string,\r\n  loading: PropTypes.bool,\r\n  removeCommentHandler: PropTypes.func,\r\n  created_at: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\r\n}\r\nexport default SingleCommentForUser\r\n","import React from 'react'\r\n\r\nimport PropTypes from 'prop-types'\r\nimport SingleCommentForUser from './SingleCommentForUser'\r\nimport api from '../../API'\r\n\r\nfunction Comment({ id: userId, setCommentsForUser, commentsForUser, loading }) {\r\n  const removeCommentHandler = (id) => {\r\n    api.comments.remove(id)\r\n    api.comments\r\n      .fetchCommentsForUser(userId)\r\n      .then((data) => setCommentsForUser(data.reverse()))\r\n  }\r\n\r\n  if (commentsForUser.length === 0) {\r\n    return <div>Нет комментариев, вы будете первым</div>\r\n  }\r\n\r\n  if (loading) {\r\n    return <div>Loading...</div>\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {commentsForUser.map((comment) => (\r\n        <SingleCommentForUser\r\n          key={comment._id}\r\n          {...comment}\r\n          removeCommentHandler={removeCommentHandler}\r\n        />\r\n      ))}\r\n    </>\r\n  )\r\n}\r\nComment.propTypes = {\r\n  id: PropTypes.string,\r\n  loading: PropTypes.bool,\r\n  allUsers: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\r\n  commentsForUser: PropTypes.array,\r\n  setCommentsForUser: PropTypes.func,\r\n  getUsersCommentsFromDB: PropTypes.func\r\n}\r\nexport default Comment\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport Loader from '../../ui/loader'\r\n\r\nfunction SelectField({\r\n  defaultOption,\r\n  onChangeHandle,\r\n  options,\r\n  label,\r\n  value,\r\n  error,\r\n  name,\r\n  loading\r\n}) {\r\n  const getInputClasses = () => {\r\n    return `${error ? 'form-select is-invalid' : 'form-select'} `\r\n  }\r\n  const optionsArr =\r\n    !Array.isArray(options) && typeof options === 'object'\r\n      ? Object.keys(options).map((optionName) => ({\r\n          name: optionName,\r\n          value: options[optionName]._id,\r\n          key: options[optionName]._id\r\n        }))\r\n      : options\r\n\r\n  const handleChange = ({ target }) => {\r\n    onChangeHandle({ name: target.name, value: target.value })\r\n  }\r\n  if (typeof value === 'object') {\r\n    value = value._id\r\n  }\r\n  if (loading) {\r\n    return <Loader />\r\n  }\r\n\r\n  return (\r\n    <div className=\"d-flex flex-column mt-3\">\r\n      <label htmlFor=\"validationCustom04\" className=\"form-label\">\r\n        {label}\r\n      </label>\r\n      <select\r\n        className={getInputClasses()}\r\n        id=\"validationCustom04\"\r\n        value={value}\r\n        onChange={handleChange}\r\n        name={name}\r\n      >\r\n        <option disabled value=\"\">\r\n          {defaultOption}\r\n        </option>\r\n        {optionsArr &&\r\n          optionsArr.map((option) => {\r\n            return (\r\n              <option key={option._id} value={option._id}>\r\n                {option.name}\r\n              </option>\r\n            )\r\n          })}\r\n      </select>\r\n      {error && <div className=\"invalid-feedback\">{error}</div>}\r\n    </div>\r\n  )\r\n}\r\nSelectField.defaultOption = { error: `Please select something` }\r\n\r\nSelectField.propTypes = {\r\n  defaultOption: PropTypes.string,\r\n  onChangeHandle: PropTypes.func,\r\n  options: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\r\n  label: PropTypes.string,\r\n  value: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\r\n  error: PropTypes.string,\r\n  name: PropTypes.string,\r\n  loading: PropTypes.bool\r\n}\r\n\r\nexport default SelectField\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nfunction TextArea({\r\n  label,\r\n  placeholder,\r\n  name,\r\n  onChangeHandle,\r\n  value,\r\n  rows = 3,\r\n  error\r\n}) {\r\n  const getInputClasses = () => {\r\n    return `${error ? 'form-control p-1 is-invalid' : 'form-control p-1'} `\r\n  }\r\n  const handleChange = ({ target }) => {\r\n    onChangeHandle({ name: target.id, value: target.value })\r\n  }\r\n  return (\r\n    <div className=\"my-3\">\r\n      <label htmlFor={name} className=\"mb-3\">\r\n        {label}\r\n      </label>\r\n\r\n      <div className=\"form-floating \">\r\n        <textarea\r\n          className={getInputClasses()}\r\n          placeholder={placeholder}\r\n          id={name}\r\n          style={{ height: rows * 24 + 'px' }}\r\n          value={value}\r\n          onChange={handleChange}\r\n        ></textarea>\r\n        {error && <div className=\"invalid-feedback text-danger\">{error}</div>}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\nTextArea.propTypes = {\r\n  label: PropTypes.string,\r\n  placeholder: PropTypes.string,\r\n  name: PropTypes.string,\r\n  onChangeHandle: PropTypes.func,\r\n  value: PropTypes.string,\r\n  type: PropTypes.string,\r\n  error: PropTypes.string,\r\n  rows: PropTypes.number\r\n}\r\nexport default TextArea\r\n","export const validatorConfig = {\n  email: {\n    isRequired: {\n      message: 'Электронная почта обязательна для заполнения'\n    },\n    isEmail: {\n      message: 'Проверьте правильность вашего email'\n    }\n  },\n  password: {\n    isRequired: { message: 'Пароль обязателен для заполнения' },\n    isCapitalLetter: { message: 'Пароль должен содержать загланую букву' },\n    isNumber: { message: 'Пароль должен содержать цыфру' },\n    min: {\n      message: 'Пароль должен быть не меньше 8 символов',\n      value: 8\n    }\n  },\n  profession: {\n    isRequired: { message: 'Профессия обязательна к выбору' }\n  },\n  licence: {\n    isRequired: {\n      message: 'Вы не можете использовать наш сервис без принятия лицензии'\n    }\n  },\n  name: {\n    isRequired: {\n      message: 'Имя обязательно для заполнения'\n    }\n  },\n  qualities: {\n    isRequired: {\n      message: 'Выбирете хотя б одно качество'\n    }\n  },\n  userId: {\n    isRequired: {\n      message: 'Выбирете хотя б одного пользователя'\n    }\n  },\n  content: {\n    isRequired: {\n      message: 'Поле обязательно для заполнения'\n    }\n  }\n}\n","export const validator = (data, config) => {\n  const errors = {}\n  function validate(method, data, config) {\n    let statusValidate\n    switch (method) {\n      case 'isRequired': {\n        try {\n          if (typeof data === 'boolean') {\n            statusValidate = !data\n          } else {\n            statusValidate =\n              typeof data === 'object'\n                ? Object.keys(data).length === 0\n                : Array.isArray(data)\n                ? data.length === 0\n                : data.trim() === ''\n          }\n        } catch (error) {\n          console.log(error.message)\n        }\n\n        break\n      }\n      case 'isEmail':\n        {\n          const emailRegExp = /^\\S+@\\S+\\.\\S+$/g\n          statusValidate = !emailRegExp.test(data)\n        }\n        break\n      case 'isCapitalLetter':\n        {\n          const passwordRegExp = /[A-Z]+/g\n          statusValidate = !passwordRegExp.test(data)\n        }\n        break\n      case 'isNumber':\n        {\n          const passwordRegExp = /\\d+/g\n          statusValidate = !passwordRegExp.test(data)\n        }\n        break\n      case 'min':\n        statusValidate = data.length < config.value\n        break\n      case 'isCorrectDate':\n        statusValidate = Number(data.split('-')[0]) > new Date().getFullYear()\n        break\n      case 'isValidLink':\n        {\n          const linkRegExp = /^\\S+:\\/\\/\\S+\\.\\S+/g\n          statusValidate = !linkRegExp.test(data)\n        }\n        break\n\n      default:\n        break\n    }\n    if (statusValidate) return config.message\n  }\n\n  for (const fieldName in data) {\n    for (const validateMethod in config[fieldName]) {\n      const error = validate(\n        validateMethod,\n        data[fieldName],\n        config[fieldName][validateMethod]\n      )\n      if (error && !errors[fieldName]) {\n        errors[fieldName] = error\n      }\n    }\n  }\n  return errors\n}\n","import React, { useEffect, useState } from 'react'\r\nimport Comment from './Comment'\r\nimport SelectField from '../common/form/SelectField'\r\nimport TextArea from '../common/form/TextArea'\r\nimport PropTypes from 'prop-types'\r\nimport { useParams } from 'react-router-dom'\r\nimport api from '../../API'\r\nimport { validatorConfig } from '../../utilits/validatorConfig'\r\nimport { validator } from '../../utilits/validator'\r\n\r\nfunction CommentSection() {\r\n  const { id } = useParams()\r\n  const [data, setData] = useState({\r\n    content: '',\r\n    userId: '',\r\n    pageId: ''\r\n  })\r\n  const [errors, setErrors] = useState({})\r\n  const [allUsers, setAllUsers] = useState([])\r\n  const [loading, setIsLoading] = useState(false)\r\n  const [commentsForUser, setCommentsForUser] = useState([])\r\n  useEffect(() => {\r\n    setIsLoading(true)\r\n    getUsersCommentsFromDB(id)\r\n    api.users\r\n      .fetchAll()\r\n      .then((data) => setAllUsers(Object.keys(data).map((key) => data[key])))\r\n      .then(() => setIsLoading(false))\r\n    return () => {\r\n      setIsLoading(false)\r\n    }\r\n  }, [])\r\n\r\n  const submitHandle = (e) => {\r\n    try {\r\n      setIsLoading(true)\r\n      e.preventDefault()\r\n      if (!isValid) {\r\n        return\r\n      }\r\n      api.comments\r\n        .add(data)\r\n        .then((data) => setCommentsForUser([data, ...commentsForUser]))\r\n\r\n      setData((prev) => ({ ...prev, content: '', userId: '' }))\r\n      setErrors({})\r\n\r\n      setIsLoading(false)\r\n    } catch (error) {\r\n      console.log(error)\r\n    }\r\n  }\r\n  const getUsersCommentsFromDB = (userId) => {\r\n    setIsLoading(true)\r\n    api.comments\r\n      .fetchCommentsForUser(userId)\r\n      .then((comments) => setCommentsForUser(comments.reverse()))\r\n      .then(() => setIsLoading(false))\r\n  }\r\n\r\n  const onChangeHandle = (target) => {\r\n    setData((prev) => ({ ...prev, [target.name]: target.value }))\r\n  }\r\n\r\n  useEffect(() => {\r\n    setData((prev) => ({ ...prev, pageId: id }))\r\n  }, [location])\r\n\r\n  const validate = () => {\r\n    const errors = validator(data, validatorConfig)\r\n    setErrors(errors)\r\n    return Object.keys(errors).length === 0\r\n  }\r\n  useEffect(() => {\r\n    validate()\r\n  }, [data])\r\n\r\n  const isValid = Object.keys(errors).length === 0\r\n\r\n  return (\r\n    <>\r\n      <div className=\"card mb-2\" onSubmit={submitHandle}>\r\n        <div className=\"card-body \">\r\n          <form className=\"d-flex flex-column needs-validation\">\r\n            <h2>New Comment</h2>\r\n            {allUsers && (\r\n              <SelectField\r\n                options={allUsers}\r\n                defaultOption=\"Выбирете пользователя\"\r\n                onChangeHandle={onChangeHandle}\r\n                name=\"userId\"\r\n                value={data.userId}\r\n                error={errors.userId}\r\n                loading={loading}\r\n              />\r\n            )}\r\n\r\n            <TextArea\r\n              name=\"content\"\r\n              label=\"Сообщение\"\r\n              onChangeHandle={onChangeHandle}\r\n              placeholder=\"Ваш комментарий ...\"\r\n              value={data.content}\r\n              error={errors.content}\r\n            />\r\n            <button\r\n              type=\"submit\"\r\n              className=\"mt-3 align-self-end btn btn-primary\"\r\n              disabled={!isValid}\r\n            >\r\n              Опубликовать\r\n            </button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n      <div className=\"card mb-3\">\r\n        <div className=\"card-body \">\r\n          <h2>Comments</h2>\r\n          <hr />\r\n          <Comment\r\n            id={id}\r\n            setCommentsForUser={setCommentsForUser}\r\n            commentsForUser={commentsForUser}\r\n            loading={loading}\r\n          />\r\n        </div>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\nCommentSection.propTypes = {\r\n  allUsers: PropTypes.object,\r\n  id: PropTypes.string\r\n}\r\n\r\nexport default CommentSection\r\n","import React from 'react'\r\n\r\nfunction MeetingsCard(userById) {\r\n  const { completedMeetings } = userById\r\n  return (\r\n    <div className=\"card mb-3\">\r\n      <div className=\"card-body d-flex flex-column justify-content-center text-center\">\r\n        <h5 className=\"card-title\">\r\n          <span>Completed meetings</span>\r\n        </h5>\r\n\r\n        <h1 className=\"display-1\">{completedMeetings}</h1>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default MeetingsCard\r\n","import React from 'react'\r\nimport QualityList from '../ui/qualities/qualityList'\r\nimport PropTypes from 'prop-types'\r\n\r\nfunction QualityCard(userById) {\r\n  const { qualities } = userById\r\n\r\n  return (\r\n    <div className=\"card mb-3\">\r\n      <div className=\"card-body d-flex flex-column justify-content-center text-center\">\r\n        <h5 className=\"card-title\">\r\n          <span>Qualities</span>\r\n        </h5>\r\n        <p className=\"card-text\">\r\n          <QualityList qualities={qualities} />\r\n        </p>\r\n        <div></div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\nQualityCard.propTypes = {\r\n  userById: PropTypes.array\r\n}\r\nexport default QualityCard\r\n","import React from 'react'\r\nimport UserImage from '../ui/UserImage'\r\nimport PropTypes from 'prop-types'\r\nimport { USERS_ROUTE } from '../../utilits/constants'\r\nimport { Link } from 'react-router-dom'\r\n\r\nfunction UserInfoCard(userById) {\r\n  const { name, rate, profession, _id } = userById\r\n  return (\r\n    <div className=\"card mb-3\">\r\n      <div className=\"card-body\">\r\n        <Link\r\n          to={{ pathname: USERS_ROUTE + '/' + _id + '/edit', state: userById }}\r\n        >\r\n          <button className=\"position-absolute top-0 end-0 btn btn-light btn-sm\">\r\n            <i className=\"bi bi-gear\"></i>\r\n          </button>\r\n        </Link>\r\n        <div className=\"d-flex flex-column align-items-center text-center position-relative\">\r\n          <UserImage />\r\n          <div className=\"mt-3\">\r\n            <h4>{name}</h4>\r\n            <p className=\"text-secondary mb-1\">{profession.name}</p>\r\n            <div className=\"text-muted\">\r\n              <i\r\n                className=\"bi bi-caret-down-fill text-primary\"\r\n                role=\"button\"\r\n              ></i>\r\n              <i className=\"bi bi-caret-up text-secondary\" role=\"button\"></i>\r\n              <span className=\"ms-2\">{rate}</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\nUserInfoCard.propTypes = {\r\n  userById: PropTypes.object\r\n}\r\nexport default UserInfoCard\r\n","import SingleUserPage from './singleUserPage'\nexport default SingleUserPage\n","import React from 'react'\nimport { useParams } from 'react-router-dom'\nimport { useUsers } from '../../hooks/useUsers'\n// import { useUsers } from '../../hooks/useUsers'\n// import Loader from '../../components/ui/loader'\nimport CommentSection from '../../components/user/CommenSection'\nimport MeetingsCard from '../../components/user/MeetingsCard'\nimport QualityCard from '../../components/user/QualityCard'\nimport UserInfoCard from '../../components/user/UserInfoCard'\n\nconst SingleUserPage = () => {\n  const { id } = useParams()\n  const { getUserById } = useUsers()\n  const userById = getUserById(id)\n\n  return (\n    <div className=\"container p-4\">\n      <div className=\"row gutters-sm\">\n        {userById.name && (\n          <div className=\"col-md-4 mb-3\">\n            <UserInfoCard {...userById} />\n            <QualityCard {...userById} />\n            <MeetingsCard {...userById} />\n          </div>\n        )}\n\n        <div className=\"col-md-8 \">\n          <CommentSection />\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default SingleUserPage\n","import React from 'react'\nimport { useParams } from 'react-router-dom'\nimport UserProvider from '../hooks/useUsers'\nimport Users from '../pages/usersListPage'\nimport SingleUserPage from './usersPage'\n\nconst UsersPage = () => {\n  const { id } = useParams()\n\n  return (\n    <UserProvider>\n      <div>{id ? <SingleUserPage /> : <Users />}</div>\n    </UserProvider>\n  )\n}\n\nexport default UsersPage\n","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport { LOGIN_ROUTE, MAIN_ROUTE, USERS_ROUTE } from '../utilits/constants'\n\nconst NavBar = () => {\n  return (\n    <nav className=\"navbar navbar-expand-md navbar-light bg-light\">\n      <div className=\"container-fluid\">\n        <button\n          className=\"navbar-toggler \"\n          type=\"button\"\n          data-bs-toggle=\"collapse\"\n          data-bs-target=\"#navbarNavAltMarkup\"\n          aria-controls=\"navbarNavAltMarkup\"\n          aria-expanded=\"false\"\n          aria-label=\"Toggle navigation\"\n        >\n          <span className=\"navbar-toggler-icon\"></span>\n        </button>\n\n        <div className=\"collapse navbar-collapse\" id=\"navbarNavAltMarkup\">\n          <ul className=\"navbar-nav\">\n            <li className=\"nav-item\">\n              <Link className=\"nav-link \" to={MAIN_ROUTE}>\n                Main\n              </Link>\n            </li>\n            <li className=\"nav-item\">\n              <Link className=\"nav-link\" to={LOGIN_ROUTE}>\n                Login\n              </Link>\n            </li>\n            <li className=\"nav-item\">\n              <Link className=\"nav-link\" to={USERS_ROUTE}>\n                Users\n              </Link>\n            </li>\n          </ul>\n        </div>\n      </div>\n    </nav>\n  )\n}\n\nexport default NavBar\n","import React, { useState } from 'react'\nimport PropTypes from 'prop-types'\n\nfunction TextField({ label, name, onChangeHandle, value, type, error }) {\n  const getInputClasses = () => {\n    return `${error ? 'form-control is-invalid' : 'form-control'} `\n  }\n  const [showPassword, setShowPassword] = useState(false)\n\n  const handleChange = ({ target }) => {\n    onChangeHandle({ name: target.name, value: target.value })\n  }\n\n  const toggleShowPassword = () => {\n    setShowPassword((prev) => !prev)\n  }\n\n  return (\n    <div className=\"d-flex flex-column mt-3\">\n      <label htmlFor={name} className=\"mb-2\">\n        {label}\n      </label>\n      <div className=\"input-group has-validation\">\n        <input\n          type={showPassword ? 'text' : type}\n          id={name}\n          value={value}\n          name={name}\n          onChange={handleChange}\n          className={getInputClasses()}\n        />\n        {type === 'password' && (\n          <span\n            className=\"btn btn-outline-secondary \"\n            type=\"button\"\n            onClick={toggleShowPassword}\n          >\n            <i className={showPassword ? 'bi bi-eye' : 'bi bi-eye-slash'}></i>\n          </span>\n        )}\n\n        {error && <div className=\"invalid-feedback text-danger\">{error}</div>}\n      </div>\n    </div>\n  )\n}\nTextField.defaultProps = { type: 'text' }\nTextField.propTypes = {\n  label: PropTypes.string,\n  name: PropTypes.string,\n  onChangeHandle: PropTypes.func,\n  value: PropTypes.string,\n  type: PropTypes.string,\n  error: PropTypes.string\n}\n\nexport default TextField\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nfunction CheckField({ name, value, onChangeHandle, children, error }) {\r\n  const handleChange = () => {\r\n    onChangeHandle({ name: name, value: !value })\r\n  }\r\n  const getInputClasses = () => {\r\n    return `${error ? 'form-check-label is-invalid' : 'form-check-label'} `\r\n  }\r\n\r\n  return (\r\n    <div className=\"form-check my-3\">\r\n      <input\r\n        className=\"form-check-input\"\r\n        type=\"checkbox\"\r\n        value=\"\"\r\n        checked={value}\r\n        id={name}\r\n        onChange={handleChange}\r\n      />\r\n      <label className={getInputClasses()} htmlFor={name}>\r\n        {children}\r\n      </label>\r\n\r\n      {error && <div className=\"invalid-feedback\">{error}</div>}\r\n    </div>\r\n  )\r\n}\r\nCheckField.propTypes = {\r\n  name: PropTypes.string,\r\n  error: PropTypes.string,\r\n  value: PropTypes.bool,\r\n  onChangeHandle: PropTypes.func,\r\n  children: PropTypes.oneOfType([\r\n    PropTypes.arrayOf(PropTypes.node),\r\n    PropTypes.node\r\n  ])\r\n}\r\nexport default CheckField\r\n","const TOKEN_KEY = 'jwt_token'\r\nconst REFRESH_KEY = 'jwt_refresh_token'\r\nconst EXPIRES_KEY = 'jwt_expires'\r\n\r\nexport const setToken = ({ refreshToken, idToken, expiresIn = 3600 }) => {\r\n  const expiresDate = new Date().getTime() + expiresIn * 1000\r\n  localStorage.setItem(TOKEN_KEY, idToken)\r\n  localStorage.setItem(REFRESH_KEY, refreshToken)\r\n  localStorage.setItem(EXPIRES_KEY, expiresDate)\r\n}\r\n\r\nexport const getAccessToken = () => {\r\n  return localStorage.getItem(TOKEN_KEY)\r\n}\r\nexport const getRefreshToken = () => {\r\n  return localStorage.getItem(REFRESH_KEY)\r\n}\r\nexport const getExpiresIn = () => {\r\n  return localStorage.getItem(EXPIRES_KEY)\r\n}\r\n\r\nconst localStorageService = {\r\n  setToken,\r\n  getAccessToken,\r\n  getRefreshToken,\r\n  getExpiresIn\r\n}\r\nexport default localStorageService\r\n","import React, { useContext, useEffect, useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport axios from 'axios'\r\nimport userService from '../services/user.service'\r\nimport { toast } from 'react-toastify'\r\nimport { setToken } from '../services/localStorage.service'\r\n\r\nconst AuthContext = React.createContext()\r\nconst httpAuth = axios.create()\r\nexport const useAuth = () => {\r\n  return useContext(AuthContext)\r\n}\r\n\r\nconst AuthProvider = ({ children }) => {\r\n  const [currentUser, setCurrentUser] = useState({})\r\n  const [error, setError] = useState(null)\r\n\r\n  useEffect(() => {\r\n    if (error !== null) {\r\n      toast.error(error)\r\n      setError(null)\r\n    }\r\n  }, [error])\r\n\r\n  async function signUp({ email, password, ...rest }) {\r\n    const url = `https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=${process.env.REACT_APP_FIREBASE_KEY}`\r\n    try {\r\n      const { data } = await httpAuth.post(url, {\r\n        email,\r\n        password,\r\n        returnSecureToken: true\r\n      })\r\n      setToken(data)\r\n\r\n      await createUser({ _id: data.localId, email, ...rest })\r\n    } catch (error) {\r\n      errorCatcher(error)\r\n      const { code, message } = error.response.data.error\r\n      if (code === 400) {\r\n        if (message === 'EMAIL_EXISTS') {\r\n          const errorObj = {\r\n            email: 'User with this email already exist'\r\n          }\r\n          throw errorObj\r\n        }\r\n      }\r\n    }\r\n  }\r\n  async function createUser(data) {\r\n    try {\r\n      const { content } = await userService.create(data)\r\n      setCurrentUser(content)\r\n    } catch (error) {\r\n      errorCatcher(error)\r\n    }\r\n  }\r\n  function errorCatcher(error) {\r\n    const { message } = error.response.data\r\n    setError(message)\r\n  }\r\n\r\n  async function login({ email, password }) {\r\n    const url = `https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=${process.env.REACT_APP_FIREBASE_KEY}`\r\n    try {\r\n      const { data } = await httpAuth.post(url, {\r\n        email,\r\n        password,\r\n        returnSecureToken: true\r\n      })\r\n      setToken(data)\r\n    } catch (error) {\r\n      errorCatcher(error)\r\n      const { code, message } = error.response.data.error\r\n      if (code === 400) {\r\n        let errorObj = {}\r\n        if (message === 'EMAIL_NOT_FOUND') {\r\n          errorObj = { ...errorObj, email: 'Please check your email' }\r\n          throw errorObj\r\n        }\r\n        if (message === 'INVALID_PASSWORD') {\r\n          errorObj = { ...errorObj, password: 'Please check your password' }\r\n          throw errorObj\r\n        }\r\n      }\r\n      console.log(code, message)\r\n    }\r\n  }\r\n  return (\r\n    <AuthContext.Provider value={{ signUp, currentUser, login }}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  )\r\n}\r\n\r\nAuthProvider.propTypes = {\r\n  children: PropTypes.oneOfType([\r\n    PropTypes.arrayOf(PropTypes.node),\r\n    PropTypes.node\r\n  ])\r\n}\r\n\r\nexport default AuthProvider\r\n","import React, { useEffect, useState } from 'react'\nimport TextField from '../../common/form/TextField'\nimport { validator } from '../../../utilits/validator'\nimport { validatorConfig } from '../../../utilits/validatorConfig'\nimport CheckField from '../../common/form/CheckField'\nimport { useAuth } from '../../../hooks/useAuth'\nimport { useHistory } from 'react-router-dom'\nimport { MAIN_ROUTE } from '../../../utilits/constants'\n\nfunction LoginForm() {\n  const history = useHistory()\n  const [data, setData] = useState({ email: '', password: '', stayOn: false })\n  const [errors, setErrors] = useState({})\n  const onChangeHandle = (target) => {\n    setData((prev) => ({ ...prev, [target.name]: target.value }))\n  }\n  const { login } = useAuth()\n\n  const submitHandle = async (e) => {\n    try {\n      e.preventDefault()\n      const isValid = validate()\n      if (!isValid) {\n        return\n      }\n\n      await login(data)\n      history.push(MAIN_ROUTE)\n    } catch (error) {\n      setErrors(error)\n    }\n  }\n\n  const validate = () => {\n    const errors = validator(data, validatorConfig)\n    setErrors(errors)\n\n    return Object.keys(errors).length === 0\n  }\n\n  useEffect(() => {\n    validate()\n    return () => {}\n  }, [data])\n\n  const isValid = Object.keys(errors).length === 0\n  return (\n    <form onSubmit={submitHandle} className=\"d-flex flex-column\">\n      <h3 className=\"mb-4\">Login</h3>\n      <TextField\n        name=\"email\"\n        value={data.email}\n        onChangeHandle={onChangeHandle}\n        label=\"Введите вашу электронную почту\"\n        error={errors.email}\n      />\n      <TextField\n        name=\"password\"\n        value={data.password}\n        onChangeHandle={onChangeHandle}\n        label=\"Введите ваш пароль\"\n        type=\"password\"\n        error={errors.password}\n      />\n\n      <CheckField\n        name=\"stayOn\"\n        value={data.stayOn}\n        onChangeHandle={onChangeHandle}\n      >\n        Оставаться в системе\n      </CheckField>\n      <button\n        type=\"submit\"\n        className=\"mt-3 align-self-end btn btn-primary\"\n        disabled={!isValid}\n      >\n        Submit\n      </button>\n    </form>\n  )\n}\n\nexport default LoginForm\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nfunction RadioField({\r\n  options,\r\n  name,\r\n  onChangeHandle,\r\n  value,\r\n  label = 'Выбирите пол'\r\n}) {\r\n  const handleChange = ({ target }) => {\r\n    onChangeHandle({ name: target.name, value: target.value })\r\n  }\r\n\r\n  return (\r\n    <div className=\"mt-3 mb-3\">\r\n      <label className=\"form-label me-3\">{label}</label>\r\n      <div>\r\n        {options &&\r\n          options.map((option, i) => {\r\n            return (\r\n              <div key={i} className=\"form-check form-check-inline\">\r\n                <input\r\n                  className=\"form-check-input\"\r\n                  type=\"radio\"\r\n                  name={name}\r\n                  id={option.name + '_' + option.value}\r\n                  value={option.value}\r\n                  checked={option.value === value}\r\n                  onChange={handleChange}\r\n                />\r\n                <label\r\n                  className=\"form-check-label\"\r\n                  htmlFor={option.name + '_' + option.value}\r\n                >\r\n                  {option.name}\r\n                </label>\r\n              </div>\r\n            )\r\n          })}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nRadioField.propTypes = {\r\n  options: PropTypes.PropTypes.array,\r\n  name: PropTypes.string,\r\n  onChangeHandle: PropTypes.func,\r\n  value: PropTypes.string,\r\n  label: PropTypes.string\r\n}\r\n\r\nexport default RadioField\r\n","import React from 'react'\r\nimport Select from 'react-select'\r\nimport PropTypes from 'prop-types'\r\n\r\nfunction MultiSelectField({\r\n  options,\r\n  name,\r\n  onChangeHandle,\r\n  label,\r\n  defaultValue = [],\r\n  error\r\n}) {\r\n  const optionsArr =\r\n    !Array.isArray(options) && typeof options === 'object'\r\n      ? Object.keys(options).map((option) => ({\r\n          value: options[option]._id,\r\n          label: options[option].name\r\n        }))\r\n      : options\r\n  const handleChange = (value) => {\r\n    // const arrFromOptions = Object.keys(options).map((key) => options[key])\r\n    // const targetNames = target.map((x) => x.label)\r\n    // const item = arrFromOptions.filter((item) =>\r\n    //   targetNames.includes(item.name)\r\n    // )\r\n\r\n    onChangeHandle({ name: name, value })\r\n  }\r\n  const defaultValueToArray =\r\n    defaultValue.map((item) => ({\r\n      value: item._id,\r\n      label: item.name\r\n    })) || []\r\n  const getInputClasses = () => {\r\n    return `${error ? 'is-invalid' : ''} `\r\n  }\r\n\r\n  return (\r\n    <div className=\"mb-4\">\r\n      <label className=\"form-label me-3\">{label}</label>\r\n      <Select\r\n        closeMenuOnSelect={true}\r\n        isMulti\r\n        name={name}\r\n        options={optionsArr}\r\n        classNamePrefix=\"select\"\r\n        onChange={handleChange}\r\n        defaultValue={defaultValueToArray}\r\n        className={getInputClasses()}\r\n      />\r\n      {error && <div className=\"invalid-feedback\">{error}</div>}\r\n    </div>\r\n  )\r\n}\r\nMultiSelectField.propTypes = {\r\n  name: PropTypes.string,\r\n  label: PropTypes.string,\r\n  options: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\r\n  defaultValue: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\r\n  onChangeHandle: PropTypes.func,\r\n  error: PropTypes.string\r\n}\r\n\r\nexport default MultiSelectField\r\n","import React, { useEffect, useState } from 'react'\nimport TextField from '../../common/form/TextField'\nimport { validator } from '../../../utilits/validator'\nimport { validatorConfig } from '../../../utilits/validatorConfig'\nimport SelectField from '../../common/form/SelectField'\nimport RadioField from '../../common/form/RadioField'\nimport MultiSelectField from '../../common/form/MultiSelectField'\nimport CheckField from '../../common/form/CheckField'\nimport { useQualities } from '../../../hooks/useQualities'\nimport { useProfessions } from '../../../hooks/useProfession'\nimport { useAuth } from '../../../hooks/useAuth'\nimport { useHistory } from 'react-router-dom'\nimport { MAIN_ROUTE } from '../../../utilits/constants'\n\nfunction RegisterForm() {\n  const history = useHistory()\n  const [data, setData] = useState({\n    email: '',\n    password: '',\n    profession: '',\n    sex: 'male',\n    qualities: [],\n    licence: false\n  })\n  const [errors, setErrors] = useState({})\n  const { qualities } = useQualities()\n  const newQualities = qualities.map((qual) => ({\n    value: qual._id,\n    label: qual.name\n  }))\n  const { professions } = useProfessions()\n  const { signUp } = useAuth()\n  const onChangeHandle = (target) => {\n    setData((prev) => ({ ...prev, [target.name]: target.value }))\n  }\n  const submitHandle = async (e) => {\n    e.preventDefault()\n    const isValid = validate()\n    if (!isValid) {\n      return\n    }\n    const newData = {\n      ...data,\n      qualities: data.qualities.map((q) => q.value)\n    }\n    try {\n      await signUp(newData)\n      history.push(MAIN_ROUTE)\n    } catch (error) {\n      setErrors(error)\n    }\n  }\n\n  const validate = () => {\n    const errors = validator(data, validatorConfig)\n    setErrors(errors)\n    return Object.keys(errors).length === 0\n  }\n\n  useEffect(() => {\n    validate()\n  }, [data])\n\n  const isValid = Object.keys(errors).length === 0\n\n  return (\n    <form\n      onSubmit={submitHandle}\n      className=\"d-flex flex-column needs-validation\"\n    >\n      <h3 className=\"mb-4\">Register</h3>\n      <TextField\n        name=\"email\"\n        value={data.email}\n        onChangeHandle={onChangeHandle}\n        label=\"Введите вашу электронную почту\"\n        error={errors.email}\n      />\n      <TextField\n        name=\"password\"\n        value={data.password}\n        onChangeHandle={onChangeHandle}\n        label=\"Ваш пароль\"\n        type=\"password\"\n        error={errors.password}\n      />\n      <SelectField\n        onChangeHandle={onChangeHandle}\n        options={professions}\n        label=\"Выбирите вашу профессию\"\n        value={data.profession}\n        defaultOption=\"Choose...\"\n        name=\"profession\"\n        error={errors.profession}\n      />\n\n      <RadioField\n        options={[\n          { name: 'Муж', value: 'male' },\n          { name: 'Жен', value: 'female' },\n          { name: 'Другое', value: 'other' }\n        ]}\n        value={data.sex}\n        onChangeHandle={onChangeHandle}\n        name=\"sex\"\n      />\n\n      <MultiSelectField\n        name=\"qualities\"\n        options={newQualities}\n        onChangeHandle={onChangeHandle}\n        label=\"Выбирите качество\"\n      />\n\n      <CheckField\n        name=\"licence\"\n        value={data.licence}\n        onChangeHandle={onChangeHandle}\n        error={errors.licence}\n      >\n        Подтвердить соглашение с лицензией\n      </CheckField>\n\n      <button\n        type=\"submit\"\n        className=\"mt-3 align-self-end btn btn-primary\"\n        disabled={!isValid}\n      >\n        Submit\n      </button>\n    </form>\n  )\n}\n\nexport default RegisterForm\n","import React, { useState } from 'react'\n\nimport LoginForm from '../components/ui/form/LoginForm'\nimport { useParams } from 'react-router'\nimport RegisterForm from '../components/ui/form/RegisterForm'\n\nconst Login = () => {\n  const { type } = useParams()\n  const [formType, setFormType] = useState(type === 'register' ? type : 'login')\n  const toggleFormType = () => {\n    setFormType((prev) => (prev === 'register' ? 'login' : 'register'))\n  }\n\n  return (\n    <div className=\"container my-4\">\n      <div className=\"row \">\n        <div className=\"col-md-6  offset-md-3 shadow p-4\">\n          {formType === 'register' && (\n            <>\n              <RegisterForm />\n              <p>\n                Registered?{' '}\n                <a role=\"button\" className=\"fw-bold\" onClick={toggleFormType}>\n                  Sign in\n                </a>\n              </p>\n            </>\n          )}\n\n          {formType !== 'register' && (\n            <>\n              <LoginForm />\n              <p>\n                Dont have an account?{' '}\n                <a role=\"button\" className=\"fw-bold\" onClick={toggleFormType}>\n                  Sign up\n                </a>\n              </p>\n            </>\n          )}\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Login\n","import { useEffect, useState } from 'react'\r\nimport professions from '../mockData/professions.json'\r\nimport qualities from '../mockData/qualities.json'\r\nimport users from '../mockData/users.json'\r\nimport httpServise from '../services/http.service'\r\n\r\nconst useMockData = () => {\r\n  const statusConst = {\r\n    idle: 'Not Started',\r\n    pending: 'In Process',\r\n    success: 'Ready',\r\n    error: 'Error occured'\r\n  }\r\n  const [error, setError] = useState(null)\r\n  const [status, setStatus] = useState(statusConst.idle)\r\n  const [progress, setProgress] = useState(0)\r\n  const [count, setCount] = useState(0)\r\n\r\n  const summaryCount = professions.length + qualities.length + users.length\r\n\r\n  const incrementCount = () => {\r\n    setCount((prev) => prev + 1)\r\n  }\r\n\r\n  const updateProgress = () => {\r\n    if (count !== 0 && status === statusConst.idle) {\r\n      setStatus(statusConst.pending)\r\n    }\r\n    const newProgress = Math.floor((count / summaryCount) * 100)\r\n    if (progress < newProgress) {\r\n      setProgress(() => newProgress)\r\n    }\r\n    if (newProgress === 100) {\r\n      setStatus(statusConst.success)\r\n    }\r\n  }\r\n  useEffect(() => {\r\n    updateProgress()\r\n  }, [count])\r\n\r\n  async function initialize() {\r\n    try {\r\n      for (const prof of professions) {\r\n        await httpServise.put('profession/' + prof._id, prof)\r\n        incrementCount()\r\n      }\r\n      for (const user of users) {\r\n        await httpServise.put('user/' + user._id, user)\r\n        incrementCount()\r\n      }\r\n      for (const quality of qualities) {\r\n        await httpServise.put('quality/' + quality._id, quality)\r\n        incrementCount()\r\n      }\r\n    } catch (error) {\r\n      setError(error)\r\n      setStatus(statusConst.error)\r\n    }\r\n  }\r\n\r\n  return { error, initialize, progress, status }\r\n}\r\n\r\nexport default useMockData\r\n","import React from 'react'\nimport useMockData from '../utilits/mockData'\nconst Main = () => {\n  const { error, initialize, progress, status } = useMockData()\n  const handleClick = () => {\n    initialize()\n  }\n\n  return (\n    <div className=\"container mt-5\">\n      <h1>Main</h1>\n      <ul>\n        <li>Status {status}</li>\n        <li>Progress {progress}%</li>\n        {error && <li>error {error}</li>}\n      </ul>\n      <button className=\"btn-primary\" onClick={handleClick}>\n        Инициализировать\n      </button>\n    </div>\n  )\n}\n\nexport default Main\n","import React, { useEffect, useState } from 'react'\r\nimport MultiSelectField from '../../components/common/form/MultiSelectField'\r\nimport RadioField from '../../components/common/form/RadioField'\r\nimport SelectField from '../../components/common/form/SelectField'\r\nimport TextField from '../../components/common/form/TextField'\r\nimport { validatorConfig } from '../../utilits/validatorConfig'\r\nimport { validator } from '../../utilits/validator'\r\nimport api from '../../API'\r\nimport PropTypes from 'prop-types'\r\nimport { useParams, useHistory } from 'react-router-dom'\r\nimport { USERS_ROUTE } from '../../utilits/constants'\r\n\r\nfunction EditPage({ location: { state } }) {\r\n  const { id } = useParams()\r\n  const history = useHistory()\r\n  const [professions, setProfessions] = useState([])\r\n\r\n  const [data, setData] = useState({\r\n    ...state,\r\n    email: state.email || '',\r\n    sex: 'male'\r\n  })\r\n\r\n  const [errors, setErrors] = useState({})\r\n  const [qualities, setQualities] = useState({})\r\n  const onChangeHandle = (target) => {\r\n    setData((prev) => ({\r\n      ...prev,\r\n      [target.name]:\r\n        target.name === 'profession'\r\n          ? professions.find((profession) => profession._id === target.value)\r\n          : target.value\r\n    }))\r\n  }\r\n\r\n  useEffect(() => {\r\n    api.qualities.fetchAll().then((data) => setQualities(data))\r\n    api.professions.fetchAll().then((data) => setProfessions(data))\r\n  }, [])\r\n\r\n  const submitHandle = (e) => {\r\n    try {\r\n      e.preventDefault()\r\n      const isValid = validate()\r\n      if (!isValid) {\r\n        return\r\n      }\r\n\r\n      api.users.update(id, data)\r\n      history.replace(USERS_ROUTE)\r\n    } catch (error) {\r\n      console.log(error)\r\n    }\r\n  }\r\n\r\n  const validate = () => {\r\n    const errors = validator(data, validatorConfig)\r\n    setErrors(errors)\r\n    return Object.keys(errors).length === 0\r\n  }\r\n\r\n  useEffect(() => {\r\n    validate()\r\n    return () => {}\r\n  }, [data])\r\n\r\n  const isValid = Object.keys(errors).length === 0\r\n  return (\r\n    <div className=\"container \">\r\n      <div className=\"row d-flex justify-content-start m-4\">\r\n        <div className=\"col-md-2\">\r\n          <button className=\"btn btn-primary\" onClick={() => history.goBack()}>\r\n            <i className=\"bi bi-arrow-left\"></i>\r\n            <span>Назад</span>\r\n          </button>\r\n        </div>\r\n        <div\r\n          className=\"col-md-6 text-start p-4 shadow\r\n        \"\r\n        >\r\n          <form\r\n            onSubmit={submitHandle}\r\n            className=\"d-flex flex-column needs-validation\"\r\n          >\r\n            <h3 className=\"mb-4\">Edit</h3>\r\n            <TextField\r\n              name=\"name\"\r\n              value={data.name}\r\n              onChangeHandle={onChangeHandle}\r\n              label=\"Ваше имя\"\r\n              error={errors.name}\r\n            />\r\n            <TextField\r\n              name=\"email\"\r\n              value={data.email}\r\n              onChangeHandle={onChangeHandle}\r\n              label=\"Ваша електронная почта\"\r\n              type=\"email\"\r\n              error={errors.email}\r\n            />\r\n            <SelectField\r\n              onChangeHandle={onChangeHandle}\r\n              options={professions}\r\n              label=\"Выбирите вашу профессию\"\r\n              value={data.profession}\r\n              defaultOption={data.profession.name}\r\n              name=\"profession\"\r\n              error={errors.profession}\r\n            />\r\n\r\n            <RadioField\r\n              options={[\r\n                { name: 'Муж', value: 'male' },\r\n                { name: 'Жен', value: 'female' },\r\n                { name: 'Другое', value: 'other' }\r\n              ]}\r\n              value={data.sex}\r\n              onChangeHandle={onChangeHandle}\r\n              name=\"sex\"\r\n            />\r\n\r\n            <MultiSelectField\r\n              name=\"qualities\"\r\n              options={qualities}\r\n              onChangeHandle={onChangeHandle}\r\n              label=\"Выбирите качество\"\r\n              defaultValue={data.qualities}\r\n              error={errors.qualities}\r\n            />\r\n\r\n            <button\r\n              type=\"submit\"\r\n              className=\"mt-3 align-self-end btn btn-primary\"\r\n              disabled={!isValid}\r\n            >\r\n              Submit\r\n            </button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\nEditPage.propTypes = {\r\n  user: PropTypes.object,\r\n  props: PropTypes.object,\r\n  location: PropTypes.object,\r\n  state: PropTypes.object\r\n}\r\n\r\nexport default EditPage\r\n","import EditPage from './EditPage'\r\n\r\nexport default EditPage\r\n","import React from 'react'\nimport UsersPage from './pages/users'\nimport NavBar from './components/NavBar'\nimport Login from './pages/login'\nimport Main from './pages/main'\nimport { ToastContainer } from 'react-toastify'\nimport { Switch, Route } from 'react-router-dom'\nimport { LOGIN_ROUTE, MAIN_ROUTE, USERS_ROUTE } from './utilits/constants'\nimport SingleUserPage from './pages/usersPage'\nimport EditPage from './pages/editPage'\nimport ProfessionProvider from './hooks/useProfession'\nimport QualityProvider from './hooks/useQualities'\nimport 'react-toastify/dist/ReactToastify.css'\nimport AuthProvider from './hooks/useAuth'\nimport UserProvider from './hooks/useUsers'\n\nconst App = () => {\n  return (\n    <>\n      <AuthProvider>\n        <NavBar />\n        <div className=\"col-md-12\">\n          <ProfessionProvider>\n            <QualityProvider>\n              <UserProvider>\n                <Switch>\n                  <Route path={USERS_ROUTE} exact component={UsersPage} />\n                  <Route\n                    path={USERS_ROUTE + '/:id?'}\n                    exact\n                    component={SingleUserPage}\n                  />\n                  <Route\n                    path={USERS_ROUTE + '/:id/:edit?'}\n                    exact\n                    component={EditPage}\n                  />\n                  <Route path={LOGIN_ROUTE + '/:type?'} component={Login} />\n                  <Route path={MAIN_ROUTE} exact component={Main} />\n                </Switch>\n              </UserProvider>\n            </QualityProvider>\n          </ProfessionProvider>\n        </div>\n      </AuthProvider>\n      <ToastContainer />\n    </>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport reportWebVitals from './reportWebVitals'\nimport 'bootstrap/dist/css/bootstrap.css'\nimport App from './App'\nimport { BrowserRouter } from 'react-router-dom'\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\nreportWebVitals()\n"],"sourceRoot":""}